# Consul服务发现部署配置
apiVersion: v1
kind: Namespace
metadata:
  name: consul
  labels:
    name: consul
---
# Consul ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: consul-config
  namespace: consul
data:
  consul.json: |
    {
      "datacenter": "suoke-dc1",
      "data_dir": "/consul/data",
      "log_level": "INFO",
      "server": true,
      "bootstrap_expect": 3,
      "bind_addr": "0.0.0.0",
      "client_addr": "0.0.0.0",
      "retry_join": ["consul-0.consul-headless.consul.svc.cluster.local", "consul-1.consul-headless.consul.svc.cluster.local", "consul-2.consul-headless.consul.svc.cluster.local"],
      "ui_config": {
        "enabled": true
      },
      "connect": {
        "enabled": true
      },
      "ports": {
        "grpc": 8502
      },
      "acl": {
        "enabled": true,
        "default_policy": "allow",
        "enable_token_persistence": true
      }
    }
---
# Consul StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: consul
  namespace: consul
  labels:
    app: consul
spec:
  serviceName: consul-headless
  replicas: 3
  selector:
    matchLabels:
      app: consul
  template:
    metadata:
      labels:
        app: consul
      annotations:
        consul.hashicorp.com/connect-inject: "false"
    spec:
      serviceAccountName: consul
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: consul
            topologyKey: kubernetes.io/hostname
      containers:
      - name: consul
        image: consul:1.16.1
        ports:
        - containerPort: 8500
          name: http
        - containerPort: 8301
          name: serflan-tcp
          protocol: TCP
        - containerPort: 8301
          name: serflan-udp
          protocol: UDP
        - containerPort: 8302
          name: serfwan-tcp
          protocol: TCP
        - containerPort: 8302
          name: serfwan-udp
          protocol: UDP
        - containerPort: 8300
          name: server
        - containerPort: 8600
          name: dns-tcp
          protocol: TCP
        - containerPort: 8600
          name: dns-udp
          protocol: UDP
        - containerPort: 8502
          name: grpc
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: CONSUL_BIND_INTERFACE
          value: eth0
        - name: CONSUL_CLIENT_INTERFACE
          value: eth0
        command:
        - "/bin/sh"
        - "-ec"
        - |
          CONSUL_FULLNAME="consul"
          exec /usr/local/bin/docker-entrypoint.sh consul agent \
            -config-file=/consul/config/consul.json \
            -advertise="${POD_IP}" \
            -bind="${POD_IP}" \
            -client="0.0.0.0" \
            -node="${HOSTNAME}" \
            -retry-join="${CONSUL_FULLNAME}-0.${CONSUL_FULLNAME}-headless.${NAMESPACE}.svc.cluster.local" \
            -retry-join="${CONSUL_FULLNAME}-1.${CONSUL_FULLNAME}-headless.${NAMESPACE}.svc.cluster.local" \
            -retry-join="${CONSUL_FULLNAME}-2.${CONSUL_FULLNAME}-headless.${NAMESPACE}.svc.cluster.local" \
            -domain=cluster.local \
            -disable-host-node-id
        volumeMounts:
        - name: data
          mountPath: /consul/data
        - name: config
          mountPath: /consul/config
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - consul leave
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /v1/status/leader
            port: 8500
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /v1/status/leader
            port: 8500
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
      volumes:
      - name: config
        configMap:
          name: consul-config
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
---
# Consul Headless Service
apiVersion: v1
kind: Service
metadata:
  name: consul-headless
  namespace: consul
  labels:
    app: consul
spec:
  clusterIP: None
  selector:
    app: consul
  ports:
  - name: http
    port: 8500
    targetPort: 8500
  - name: serflan-tcp
    port: 8301
    targetPort: 8301
    protocol: TCP
  - name: serflan-udp
    port: 8301
    targetPort: 8301
    protocol: UDP
  - name: serfwan-tcp
    port: 8302
    targetPort: 8302
    protocol: TCP
  - name: serfwan-udp
    port: 8302
    targetPort: 8302
    protocol: UDP
  - name: server
    port: 8300
    targetPort: 8300
  - name: dns-tcp
    port: 8600
    targetPort: 8600
    protocol: TCP
  - name: dns-udp
    port: 8600
    targetPort: 8600
    protocol: UDP
  - name: grpc
    port: 8502
    targetPort: 8502
---
# Consul UI Service
apiVersion: v1
kind: Service
metadata:
  name: consul-ui
  namespace: consul
  labels:
    app: consul
spec:
  selector:
    app: consul
  ports:
  - name: http
    port: 80
    targetPort: 8500
  type: ClusterIP
---
# ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: consul
  namespace: consul
---
# ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: consul
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
---
# ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: consul
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: consul
subjects:
- kind: ServiceAccount
  name: consul
  namespace: consul 