version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15
    container_name: suoke-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=suoke_life
      - POSTGRES_USER=suoke
      - POSTGRES_PASSWORD=suoke123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - suoke-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U suoke"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: suoke-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass suoke123
    volumes:
      - redis_data:/data
    networks:
      - suoke-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "suoke123", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Consul服务发现
  consul:
    image: consul:1.15
    container_name: suoke-consul
    restart: unless-stopped
    ports:
      - "8500:8500"
    command: agent -server -bootstrap -ui -client=0.0.0.0
    volumes:
      - consul_data:/consul/data
    networks:
      - suoke-network

  # Prometheus监控
  prometheus:
    image: prom/prometheus:latest
    container_name: suoke-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - suoke-network

  # Grafana仪表板
  grafana:
    image: grafana/grafana:latest
    container_name: suoke-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=suoke123
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - suoke-network

networks:
  suoke-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  consul_data:
  prometheus_data:
  grafana_data:
