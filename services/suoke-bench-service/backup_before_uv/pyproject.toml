[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "suoke-bench-service"
version = "0.1.0"
description = "索克生活APP专属评测系统"
authors = ["Suoke Life Team <team@suoke.life>"]
license = "MIT"
readme = "README.md"
packages = [{include = "internal"}]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.109.0"
uvicorn = "^0.27.0"
pydantic = "^2.5.3"
python-multipart = "^0.0.6"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-dotenv = "^1.0.0"
PyYAML = "^6.0.1"
numpy = "^1.26.3"
pandas = "^2.2.0"
scikit-learn = "^1.4.0"
scipy = "^1.12.0"
SQLAlchemy = "^2.0.25"
alembic = "^1.13.1"
psycopg2-binary = "^2.9.9"
redis = "^5.0.1"
aioredis = "^2.0.1"
prometheus-client = "^0.19.0"
python-json-logger = "^2.0.7"
opentelemetry-api = "^1.21.0"
opentelemetry-sdk = "^1.21.0"
opentelemetry-instrumentation-fastapi = "^0.42b0"
grpcio = "^1.60.0"
grpcio-tools = "^1.60.0"
protobuf = "^4.25.2"
aiohttp = "^3.9.1"
asyncio = "^3.4.3"
httpx = "^0.26.0"
psutil = "^5.9.7"
plotly = "^5.18.0"
dash = "^2.14.2"
bokeh = "^3.3.3"
seaborn = "^0.13.1"
pysnark = "^0.4.0"
zokrates = "^0.7.13"
onnxruntime = "^1.16.3"
tensorflow-lite = "^2.14.0"
tflite-runtime = "^2.14.0"
torch = "^2.1.2"
torchvision = "^0.16.2"
torchaudio = "^2.1.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-asyncio = "^0.23.3"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
hypothesis = "^6.92.1"
black = "^23.12.1"
isort = "^5.13.2"
flake8 = "^7.0.0"
mypy = "^1.8.0"
pylint = "^3.0.3"
py-spy = "^0.3.14"
memory-profiler = "^0.61.0"
mkdocs = "^1.5.3"
mkdocs-material = "^9.5.3"
mkdocstrings = "^0.24.0"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = [
    "grpc.*",
    "google.protobuf.*",
    "prometheus_client.*",
    "opentelemetry.*",
    "pysnark.*",
    "zokrates.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=internal --cov-report=term-missing"
testpaths = [
    "tests",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
branch = true
source = ["internal"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
ignore_errors = true
omit = [
    "tests/*",
    "setup.py",
]

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "C0330",  # bad-continuation
    "C0326",  # bad-whitespace
    "W0621",  # redefined-outer-name
    "W0703",  # broad-except
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "R0914",  # too-many-locals
]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.basic]
good-names = ["i", "j", "k", "ex", "Run", "_", "fp", "id"]

[tool.pylint.reports]
output-format = "colorized"
reports = "no"
score = "no"