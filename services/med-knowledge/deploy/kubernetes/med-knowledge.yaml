---
apiVersion: v1
kind: ConfigMap
metadata:
  name: med-knowledge-config
  labels:
    app.kubernetes.io/name: med-knowledge
    app.kubernetes.io/part-of: suoke-life
data:
  SERVER_HOST: "0.0.0.0"
  SERVER_PORT: "8000"
  SERVER_DEBUG: "false"
  GRPC_PORT: "50051"
  LOG_LEVEL: "INFO"
  ALLOWED_ORIGINS: "*"
---
apiVersion: v1
kind: Secret
metadata:
  name: med-knowledge-secrets
  labels:
    app.kubernetes.io/name: med-knowledge
    app.kubernetes.io/part-of: suoke-life
type: Opaque
stringData:
  NEO4J_URI: "bolt://neo4j.default.svc.cluster.local:7687"
  NEO4J_USERNAME: "neo4j"
  NEO4J_PASSWORD: "password"  # 生产环境应使用更安全的密码管理方式
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: med-knowledge
  labels:
    app.kubernetes.io/name: med-knowledge
    app.kubernetes.io/part-of: suoke-life
spec:
  replicas: 2
  selector:
    matchLabels:
      app: med-knowledge
  template:
    metadata:
      labels:
        app: med-knowledge
        app.kubernetes.io/name: med-knowledge
        app.kubernetes.io/part-of: suoke-life
    spec:
      containers:
      - name: med-knowledge
        image: suoke/med-knowledge:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8000
        - name: grpc
          containerPort: 50051
        envFrom:
        - configMapRef:
            name: med-knowledge-config
        - secretRef:
            name: med-knowledge-secrets
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 10
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: tmp-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: med-knowledge
  labels:
    app.kubernetes.io/name: med-knowledge
    app.kubernetes.io/part-of: suoke-life
spec:
  selector:
    app: med-knowledge
  ports:
  - name: http
    port: 8000
    targetPort: http
  - name: grpc
    port: 50051
    targetPort: grpc
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: med-knowledge-ingress
  labels:
    app.kubernetes.io/name: med-knowledge
    app.kubernetes.io/part-of: suoke-life
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST, DELETE, PATCH, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
spec:
  ingressClassName: nginx
  rules:
  - host: med-knowledge.suoke.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: med-knowledge
            port:
              name: http 