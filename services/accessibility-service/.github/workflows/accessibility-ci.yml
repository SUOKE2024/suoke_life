name: Accessibility Service CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'services/accessibility-service/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'services/accessibility-service/**'
  workflow_dispatch:

jobs:
  code-quality:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/accessibility-service
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13.3"
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint mypy pytest-cov flake8 black
      - name: Run black code formatter check
        run: black --check .
      - name: Run flake8
        run: flake8 . --count --select=E9,F63,F7,F82 --max-complexity=12 --max-line-length=127 --statistics
      - name: Run pylint
        run: pylint --rcfile=.pylintrc $(find . -name "*.py" | grep -v "/__pycache__/" | grep -v "/venv/")
      - name: Run mypy
        run: mypy --config-file mypy.ini .

  test:
    runs-on: ubuntu-latest
    needs: code-quality
    defaults:
      run:
        working-directory: services/accessibility-service
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13.3"
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov
      - name: Set TEST_ENVIRONMENT to skip mediapipe
        run: echo "TEST_ENVIRONMENT=true" >> $GITHUB_ENV
      - name: Run tests with pytest
        run: |
          pytest --cov=internal --cov-report=xml --cov-report=term
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./services/accessibility-service/coverage.xml
          flags: accessibility-service

  build:
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: services/accessibility-service
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./services/accessibility-service
          file: ./services/accessibility-service/deploy/docker/Dockerfile
          push: false
          tags: suoke/accessibility-service:test
          cache-from: type=gha
          cache-to: type=gha,mode=max 