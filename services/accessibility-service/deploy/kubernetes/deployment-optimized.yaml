apiVersion: apps/v1
kind: Deployment
metadata:
  name: accessibility-service
  namespace: suoke-ai-np
  labels:
    app: accessibility-service
    app.kubernetes.io/name: accessibility-service
    app.kubernetes.io/instance: accessibility-service
    app.kubernetes.io/version: "v1.0.0"
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: suoke-life
    app.kubernetes.io/managed-by: kubernetes
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubernetes.io/change-cause: "Initial deployment with security optimizations"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: accessibility-service
      app.kubernetes.io/name: accessibility-service
  template:
    metadata:
      labels:
        app: accessibility-service
        app.kubernetes.io/name: accessibility-service
        app.kubernetes.io/instance: accessibility-service
        app.kubernetes.io/version: "v1.0.0"
        app.kubernetes.io/component: service
        app.kubernetes.io/part-of: suoke-life
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
        co.elastic.logs/enabled: "true"
        co.elastic.logs/json.keys_under_root: "true"
        co.elastic.logs/json.add_error_key: "true"
        kubectl.kubernetes.io/default-container: accessibility-service
    spec:
      # 安全上下文
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
        supplementalGroups: [1000]
      
      # 服务账户
      serviceAccountName: accessibility-service
      automountServiceAccountToken: false
      
      # 容器配置
      containers:
      - name: accessibility-service
        image: ${REGISTRY_URL}/suoke/accessibility-service:${VERSION}
        imagePullPolicy: IfNotPresent
        
        # 安全上下文
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        
        # 端口配置
        ports:
        - containerPort: 50051
          name: grpc
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        
        # 资源限制
        resources:
          requests:
            cpu: "200m"
            memory: "512Mi"
            ephemeral-storage: "1Gi"
          limits:
            cpu: "1000m"
            memory: "2Gi"
            ephemeral-storage: "5Gi"
        
        # 环境变量
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: ACCESSIBILITY_CONFIG_PATH
          value: "/app/config/config.yaml"
        - name: ACCESSIBILITY_LOG_LEVEL
          value: "INFO"
        - name: ACCESSIBILITY_DATA_ROOT
          value: "/app/data"
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: PYTHONDONTWRITEBYTECODE
          value: "1"
        - name: ACCESSIBILITY_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: accessibility-secrets
              key: db-password
        - name: ACCESSIBILITY_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: accessibility-secrets
              key: jwt-secret
        
        # 卷挂载
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: data
          mountPath: /app/data
        - name: cache
          mountPath: /app/cache
        - name: logs
          mountPath: /app/logs
        - name: tmp
          mountPath: /tmp
        
        # 健康检查
        livenessProbe:
          exec:
            command:
            - python
            - /app/healthcheck.py
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          exec:
            command:
            - python
            - /app/healthcheck.py
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        
        # 启动探针
        startupProbe:
          exec:
            command:
            - python
            - /app/healthcheck.py
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
          successThreshold: 1
        
        # 生命周期钩子
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - "sleep 15"
      
      # 初始化容器
      initContainers:
      - name: init-permissions
        image: busybox:1.35
        securityContext:
          runAsUser: 0
          runAsGroup: 0
        command:
        - sh
        - -c
        - |
          chown -R 1000:1000 /app/data /app/cache /app/logs
          chmod -R 755 /app/data /app/cache /app/logs
        volumeMounts:
        - name: data
          mountPath: /app/data
        - name: cache
          mountPath: /app/cache
        - name: logs
          mountPath: /app/logs
      
      # 卷配置
      volumes:
      - name: config
        configMap:
          name: accessibility-config
          defaultMode: 0444
      - name: data
        persistentVolumeClaim:
          claimName: accessibility-data
      - name: cache
        emptyDir:
          sizeLimit: 1Gi
      - name: logs
        emptyDir:
          sizeLimit: 2Gi
      - name: tmp
        emptyDir:
          sizeLimit: 1Gi
      
      # 调度配置
      nodeSelector:
        kubernetes.io/arch: amd64
        node.kubernetes.io/instance-type: n1-standard-4
      
      # 亲和性配置
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - accessibility-service
            topologyKey: kubernetes.io/hostname
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node.kubernetes.io/instance-type
                operator: In
                values:
                - n1-standard-4
                - n1-standard-8
      
      # 容忍度配置
      tolerations:
      - key: "suoke.ai/dedicated"
        operator: "Equal"
        value: "ai-workload"
        effect: "NoSchedule"
      
      # 终止宽限期
      terminationGracePeriodSeconds: 30
      
      # DNS配置
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
        - name: ndots
          value: "2"
        - name: edns0

---
apiVersion: v1
kind: Service
metadata:
  name: accessibility-service
  namespace: suoke-ai-np
  labels:
    app: accessibility-service
    app.kubernetes.io/name: accessibility-service
    app.kubernetes.io/instance: accessibility-service
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: suoke-life
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
spec:
  type: ClusterIP
  sessionAffinity: None
  selector:
    app: accessibility-service
    app.kubernetes.io/name: accessibility-service
  ports:
  - name: grpc
    port: 50051
    targetPort: grpc
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: accessibility-service
  namespace: suoke-ai-np
  labels:
    app: accessibility-service
    app.kubernetes.io/name: accessibility-service
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: suoke-life
automountServiceAccountToken: false

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: accessibility-data
  namespace: suoke-ai-np
  labels:
    app: accessibility-service
    app.kubernetes.io/name: accessibility-service
    app.kubernetes.io/component: storage
    app.kubernetes.io/part-of: suoke-life
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: ssd

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: accessibility-service-pdb
  namespace: suoke-ai-np
  labels:
    app: accessibility-service
    app.kubernetes.io/name: accessibility-service
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: suoke-life
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: accessibility-service
      app.kubernetes.io/name: accessibility-service

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: accessibility-service-netpol
  namespace: suoke-ai-np
  labels:
    app: accessibility-service
    app.kubernetes.io/name: accessibility-service
    app.kubernetes.io/component: security
    app.kubernetes.io/part-of: suoke-life
spec:
  podSelector:
    matchLabels:
      app: accessibility-service
      app.kubernetes.io/name: accessibility-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: suoke-ai-np
    - namespaceSelector:
        matchLabels:
          name: istio-system
    ports:
    - protocol: TCP
      port: 50051
    - protocol: TCP
      port: 9090
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: suoke-ai-np
    ports:
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 6379  # Redis
  - to: []
    ports:
    - protocol: TCP
      port: 53   # DNS
    - protocol: UDP
      port: 53   # DNS
    - protocol: TCP
      port: 443  # HTTPS
    - protocol: TCP
      port: 80   # HTTP

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: accessibility-service-hpa
  namespace: suoke-ai-np
  labels:
    app: accessibility-service
    app.kubernetes.io/name: accessibility-service
    app.kubernetes.io/component: autoscaling
    app.kubernetes.io/part-of: suoke-life
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: accessibility-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max 