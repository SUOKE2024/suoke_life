"""
accessibility_pb2_grpc - 索克生活项目模块
"""

    from grpc._utilities import first_version_is_lower
from accessibility_service.api.grpc import accessibility_pb2 as accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2
import grpc
import warnings

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""


GRPC_GENERATED_VERSION = '1.72.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in accessibility_service/api/grpc/accessibility_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class AccessibilityServiceStub(object):
    """无障碍服务API
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BlindAssistance = channel.unary_unary(
                '/suoke.accessibility.v1.AccessibilityService/BlindAssistance',
                request_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.BlindAssistanceRequest.SerializeToString,
                response_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.BlindAssistanceResponse.FromString,
                _registered_method=True)
        self.SignLanguageRecognition = channel.unary_unary(
                '/suoke.accessibility.v1.AccessibilityService/SignLanguageRecognition',
                request_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SignLanguageRequest.SerializeToString,
                response_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SignLanguageResponse.FromString,
                _registered_method=True)
        self.ScreenReading = channel.unary_unary(
                '/suoke.accessibility.v1.AccessibilityService/ScreenReading',
                request_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.ScreenReadingRequest.SerializeToString,
                response_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.ScreenReadingResponse.FromString,
                _registered_method=True)
        self.VoiceAssistance = channel.unary_unary(
                '/suoke.accessibility.v1.AccessibilityService/VoiceAssistance',
                request_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.VoiceAssistanceRequest.SerializeToString,
                response_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.VoiceAssistanceResponse.FromString,
                _registered_method=True)
        self.AccessibleContent = channel.unary_unary(
                '/suoke.accessibility.v1.AccessibilityService/AccessibleContent',
                request_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.AccessibleContentRequest.SerializeToString,
                response_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.AccessibleContentResponse.FromString,
                _registered_method=True)
        self.ManageSettings = channel.unary_unary(
                '/suoke.accessibility.v1.AccessibilityService/ManageSettings',
                request_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SettingsRequest.SerializeToString,
                response_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SettingsResponse.FromString,
                _registered_method=True)
        self.ConfigureBackgroundCollection = channel.unary_unary(
                '/suoke.accessibility.v1.AccessibilityService/ConfigureBackgroundCollection',
                request_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.BackgroundCollectionRequest.SerializeToString,
                response_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.BackgroundCollectionResponse.FromString,
                _registered_method=True)
        self.GetCollectionStatus = channel.unary_unary(
                '/suoke.accessibility.v1.AccessibilityService/GetCollectionStatus',
                request_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.CollectionStatusRequest.SerializeToString,
                response_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.CollectionStatusResponse.FromString,
                _registered_method=True)
        self.SubmitCollectedData = channel.unary_unary(
                '/suoke.accessibility.v1.AccessibilityService/SubmitCollectedData',
                request_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.CollectedDataRequest.SerializeToString,
                response_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.CollectedDataResponse.FromString,
                _registered_method=True)
        self.TriggerHealthAlert = channel.unary_unary(
                '/suoke.accessibility.v1.AccessibilityService/TriggerHealthAlert',
                request_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.HealthAlertRequest.SerializeToString,
                response_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.HealthAlertResponse.FromString,
                _registered_method=True)
        self.ConfigureAlertThresholds = channel.unary_unary(
                '/suoke.accessibility.v1.AccessibilityService/ConfigureAlertThresholds',
                request_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.AlertThresholdsRequest.SerializeToString,
                response_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.AlertThresholdsResponse.FromString,
                _registered_method=True)
        self.GetAlertHistory = channel.unary_unary(
                '/suoke.accessibility.v1.AccessibilityService/GetAlertHistory',
                request_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.AlertHistoryRequest.SerializeToString,
                response_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.AlertHistoryResponse.FromString,
                _registered_method=True)
        self.SpeechTranslation = channel.unary_unary(
                '/suoke.accessibility.v1.AccessibilityService/SpeechTranslation',
                request_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SpeechTranslationRequest.SerializeToString,
                response_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SpeechTranslationResponse.FromString,
                _registered_method=True)
        self.StreamingSpeechTranslation = channel.stream_stream(
                '/suoke.accessibility.v1.AccessibilityService/StreamingSpeechTranslation',
                request_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SpeechTranslationChunk.SerializeToString,
                response_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SpeechTranslationResult.FromString,
                _registered_method=True)
        self.CreateTranslationSession = channel.unary_unary(
                '/suoke.accessibility.v1.AccessibilityService/CreateTranslationSession',
                request_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.CreateSessionRequest.SerializeToString,
                response_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.CreateSessionResponse.FromString,
                _registered_method=True)
        self.GetSessionStatus = channel.unary_unary(
                '/suoke.accessibility.v1.AccessibilityService/GetSessionStatus',
                request_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SessionStatusRequest.SerializeToString,
                response_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SessionStatusResponse.FromString,
                _registered_method=True)
        self.GetSupportedLanguages = channel.unary_unary(
                '/suoke.accessibility.v1.AccessibilityService/GetSupportedLanguages',
                request_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SupportedLanguagesRequest.SerializeToString,
                response_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SupportedLanguagesResponse.FromString,
                _registered_method=True)


class AccessibilityServiceServicer(object):
    """无障碍服务API
    """

    def BlindAssistance(self, request, context):
        """导盲服务 - 提供场景识别和语音引导
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignLanguageRecognition(self, request, context):
        """手语识别 - 将手语视频转换为文本
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScreenReading(self, request, context):
        """屏幕阅读 - 提供屏幕内容的语音描述
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VoiceAssistance(self, request, context):
        """语音辅助 - 提供语音控制和语音响应
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AccessibleContent(self, request, context):
        """健康内容无障碍转换 - 将健康内容转换为无障碍格式
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ManageSettings(self, request, context):
        """无障碍设置管理 - 管理用户的无障碍设置
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureBackgroundCollection(self, request, context):
        """后台数据收集服务 - 配置和控制后台健康数据收集
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCollectionStatus(self, request, context):
        """获取后台数据收集状态 - 查询当前数据收集服务状态
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitCollectedData(self, request, context):
        """提交收集的数据 - 从设备提交收集的健康数据
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerHealthAlert(self, request, context):
        """危机报警服务 - 触发健康危机报警
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureAlertThresholds(self, request, context):
        """配置危机报警阈值 - 设置个性化健康警报阈值
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAlertHistory(self, request, context):
        """获取健康报警历史 - 查询用户的历史健康报警
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpeechTranslation(self, request, context):
        """语音翻译服务 - 提供实时语音翻译
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamingSpeechTranslation(self, request_iterator, context):
        """语音翻译流式服务 - 提供流式语音翻译
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTranslationSession(self, request, context):
        """创建翻译会话 - 创建流式翻译会话
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSessionStatus(self, request, context):
        """获取会话状态 - 查询翻译会话状态
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSupportedLanguages(self, request, context):
        """获取支持的语言和方言 - 查询系统支持的语言和方言
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AccessibilityServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BlindAssistance': grpc.unary_unary_rpc_method_handler(
                    servicer.BlindAssistance,
                    request_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.BlindAssistanceRequest.FromString,
                    response_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.BlindAssistanceResponse.SerializeToString,
            ),
            'SignLanguageRecognition': grpc.unary_unary_rpc_method_handler(
                    servicer.SignLanguageRecognition,
                    request_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SignLanguageRequest.FromString,
                    response_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SignLanguageResponse.SerializeToString,
            ),
            'ScreenReading': grpc.unary_unary_rpc_method_handler(
                    servicer.ScreenReading,
                    request_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.ScreenReadingRequest.FromString,
                    response_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.ScreenReadingResponse.SerializeToString,
            ),
            'VoiceAssistance': grpc.unary_unary_rpc_method_handler(
                    servicer.VoiceAssistance,
                    request_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.VoiceAssistanceRequest.FromString,
                    response_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.VoiceAssistanceResponse.SerializeToString,
            ),
            'AccessibleContent': grpc.unary_unary_rpc_method_handler(
                    servicer.AccessibleContent,
                    request_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.AccessibleContentRequest.FromString,
                    response_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.AccessibleContentResponse.SerializeToString,
            ),
            'ManageSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.ManageSettings,
                    request_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SettingsRequest.FromString,
                    response_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SettingsResponse.SerializeToString,
            ),
            'ConfigureBackgroundCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureBackgroundCollection,
                    request_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.BackgroundCollectionRequest.FromString,
                    response_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.BackgroundCollectionResponse.SerializeToString,
            ),
            'GetCollectionStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCollectionStatus,
                    request_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.CollectionStatusRequest.FromString,
                    response_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.CollectionStatusResponse.SerializeToString,
            ),
            'SubmitCollectedData': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitCollectedData,
                    request_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.CollectedDataRequest.FromString,
                    response_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.CollectedDataResponse.SerializeToString,
            ),
            'TriggerHealthAlert': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerHealthAlert,
                    request_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.HealthAlertRequest.FromString,
                    response_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.HealthAlertResponse.SerializeToString,
            ),
            'ConfigureAlertThresholds': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureAlertThresholds,
                    request_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.AlertThresholdsRequest.FromString,
                    response_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.AlertThresholdsResponse.SerializeToString,
            ),
            'GetAlertHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAlertHistory,
                    request_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.AlertHistoryRequest.FromString,
                    response_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.AlertHistoryResponse.SerializeToString,
            ),
            'SpeechTranslation': grpc.unary_unary_rpc_method_handler(
                    servicer.SpeechTranslation,
                    request_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SpeechTranslationRequest.FromString,
                    response_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SpeechTranslationResponse.SerializeToString,
            ),
            'StreamingSpeechTranslation': grpc.stream_stream_rpc_method_handler(
                    servicer.StreamingSpeechTranslation,
                    request_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SpeechTranslationChunk.FromString,
                    response_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SpeechTranslationResult.SerializeToString,
            ),
            'CreateTranslationSession': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTranslationSession,
                    request_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.CreateSessionRequest.FromString,
                    response_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.CreateSessionResponse.SerializeToString,
            ),
            'GetSessionStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSessionStatus,
                    request_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SessionStatusRequest.FromString,
                    response_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SessionStatusResponse.SerializeToString,
            ),
            'GetSupportedLanguages': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSupportedLanguages,
                    request_deserializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SupportedLanguagesRequest.FromString,
                    response_serializer=accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SupportedLanguagesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'suoke.accessibility.v1.AccessibilityService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('suoke.accessibility.v1.AccessibilityService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AccessibilityService(object):
    """无障碍服务API
    """

    @staticmethod
    def BlindAssistance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/suoke.accessibility.v1.AccessibilityService/BlindAssistance',
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.BlindAssistanceRequest.SerializeToString,
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.BlindAssistanceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SignLanguageRecognition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/suoke.accessibility.v1.AccessibilityService/SignLanguageRecognition',
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SignLanguageRequest.SerializeToString,
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SignLanguageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ScreenReading(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/suoke.accessibility.v1.AccessibilityService/ScreenReading',
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.ScreenReadingRequest.SerializeToString,
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.ScreenReadingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VoiceAssistance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/suoke.accessibility.v1.AccessibilityService/VoiceAssistance',
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.VoiceAssistanceRequest.SerializeToString,
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.VoiceAssistanceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AccessibleContent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/suoke.accessibility.v1.AccessibilityService/AccessibleContent',
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.AccessibleContentRequest.SerializeToString,
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.AccessibleContentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ManageSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/suoke.accessibility.v1.AccessibilityService/ManageSettings',
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SettingsRequest.SerializeToString,
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SettingsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureBackgroundCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/suoke.accessibility.v1.AccessibilityService/ConfigureBackgroundCollection',
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.BackgroundCollectionRequest.SerializeToString,
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.BackgroundCollectionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCollectionStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/suoke.accessibility.v1.AccessibilityService/GetCollectionStatus',
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.CollectionStatusRequest.SerializeToString,
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.CollectionStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubmitCollectedData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/suoke.accessibility.v1.AccessibilityService/SubmitCollectedData',
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.CollectedDataRequest.SerializeToString,
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.CollectedDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TriggerHealthAlert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/suoke.accessibility.v1.AccessibilityService/TriggerHealthAlert',
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.HealthAlertRequest.SerializeToString,
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.HealthAlertResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureAlertThresholds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/suoke.accessibility.v1.AccessibilityService/ConfigureAlertThresholds',
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.AlertThresholdsRequest.SerializeToString,
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.AlertThresholdsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAlertHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/suoke.accessibility.v1.AccessibilityService/GetAlertHistory',
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.AlertHistoryRequest.SerializeToString,
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.AlertHistoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SpeechTranslation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/suoke.accessibility.v1.AccessibilityService/SpeechTranslation',
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SpeechTranslationRequest.SerializeToString,
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SpeechTranslationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StreamingSpeechTranslation(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/suoke.accessibility.v1.AccessibilityService/StreamingSpeechTranslation',
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SpeechTranslationChunk.SerializeToString,
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SpeechTranslationResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateTranslationSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/suoke.accessibility.v1.AccessibilityService/CreateTranslationSession',
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.CreateSessionRequest.SerializeToString,
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.CreateSessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSessionStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/suoke.accessibility.v1.AccessibilityService/GetSessionStatus',
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SessionStatusRequest.SerializeToString,
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SessionStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSupportedLanguages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/suoke.accessibility.v1.AccessibilityService/GetSupportedLanguages',
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SupportedLanguagesRequest.SerializeToString,
            accessibility__service_dot_api_dot_grpc_dot_accessibility__pb2.SupportedLanguagesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
