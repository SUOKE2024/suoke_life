name: RAG Service CI with uv

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'services/rag-service/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'services/rag-service/**'

env:
  PYTHON_VERSION: "3.12"
  UV_CACHE_DIR: /tmp/.uv-cache

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        enable-cache: true

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Restore uv cache
      uses: actions/cache@v4
      with:
        path: /tmp/.uv-cache
        key: uv-${{ runner.os }}-${{ hashFiles('**/uv.lock') }}
        restore-keys: |
          uv-${{ runner.os }}-

    - name: Install dependencies
      working-directory: services/rag-service
      run: |
        # 使用uv安装依赖 - 比pip快10-100倍！
        uv sync --all-extras --dev

    - name: Run linting
      working-directory: services/rag-service
      run: |
        uv run black --check .
        uv run isort --check-only .
        uv run mypy .
        uv run ruff check .

    - name: Run tests
      working-directory: services/rag-service
      run: |
        uv run pytest --cov=services --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: services/rag-service/coverage.xml
        flags: rag-service
        name: rag-service-coverage

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image with uv
      working-directory: services/rag-service
      run: |
        # 构建使用uv的Docker镜像
        docker build -f Dockerfile.uv -t rag-service:uv .
        
        # 比较构建时间（可选）
        echo "=== uv构建完成 ==="
        docker images rag-service:uv

    - name: Test Docker image
      working-directory: services/rag-service
      run: |
        # 测试Docker镜像
        docker run --rm -d --name rag-test -p 8000:8000 rag-service:uv
        sleep 10
        curl -f http://localhost:8000/api/v1/health || exit 1
        docker stop rag-test

  performance-comparison:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up uv
      uses: astral-sh/setup-uv@v3

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Performance comparison
      working-directory: services/rag-service
      run: |
        echo "=== 性能对比测试 ==="
        
        # 测试pip安装时间
        echo "测试pip安装时间..."
        time pip install -r requirements-simple.txt
        pip uninstall -y -r requirements-simple.txt
        
        echo "测试uv安装时间..."
        time uv pip install -r requirements-simple.txt
        
        echo "=== 性能对比完成 ===" 