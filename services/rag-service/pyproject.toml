[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rag-service"
version = "1.2.0"
description = "RAG服务 - 苏柯生命平台的知识增强检索生成服务，专注于中医智慧数字化"
readme = "README.md"
authors = [
    {name = "Suoke Life Team", email = "team@suokelife.com"}
]
requires-python = ">=3.13.3"
dependencies = [
    # 核心框架
    "fastapi>=0.109.0",
    "uvicorn[standard]>=0.25.0",
    "pydantic>=2.5.2",
    "pydantic-settings>=2.1.0",
    
    # gRPC
    "grpcio>=1.62.0",
    "grpcio-tools>=1.62.0",
    "grpcio-reflection>=1.62.0",
    
    # HTTP客户端
    "httpx>=0.26.0",
    "aiohttp>=3.9.1",
    
    # 向量数据库
    "qdrant-client>=1.7.0",
    "pymilvus>=2.3.4",
    "weaviate-client>=3.25.0",
    
    # 机器学习和NLP
    "torch>=2.1.0",
    "sentence-transformers>=2.2.2",
    "transformers>=4.36.0",
    "accelerate>=0.24.0",
    "optimum>=1.16.0",
    "onnxruntime>=1.16.0",
    
    # LLM集成
    "openai>=1.10.0",
    "tiktoken>=0.5.2",
    "langchain>=0.1.0",
    "langchain-openai>=0.0.5",
    "langchain-community>=0.0.10",
    
    # 中医特色NLP
    "jieba>=0.42.1",
    "pkuseg>=0.0.25",
    "spacy>=3.7.0",
    
    # 数据处理
    "numpy>=1.26.0",
    "pandas>=2.2.0",
    "scikit-learn>=1.4.0",
    "rank-bm25>=0.2.2",
    
    # 存储和缓存
    "redis[hiredis]>=5.0.1",
    "motor>=3.3.2",
    "pymongo>=4.6.1",
    "diskcache>=5.6.3",
    "cachetools>=5.3.2",
    
    # 异步和并发
    "asyncio-pool>=0.6.0",
    "aiofiles>=23.2.1",
    "aiokafka>=0.8.1",
    
    # 配置和环境
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0.1",
    "dynaconf>=3.2.4",
    
    # 序列化
    "orjson>=3.9.10",
    "msgpack>=1.0.7",
    
    # 工具库
    "tenacity>=8.2.3",
    "rich>=13.7.0",
    "tqdm>=4.66.1",
    "click>=8.1.7",
    
    # 可观测性
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-exporter-otlp>=1.21.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0",
    "opentelemetry-instrumentation-grpc>=0.42b0",
    "opentelemetry-instrumentation-redis>=0.42b0",
    "opentelemetry-instrumentation-httpx>=0.42b0",
    "prometheus-client>=0.19.0",
    "loguru>=0.7.2",
    
    # 安全
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "cryptography>=42.0.0",
    
    # 依赖注入
    "dependency-injector>=4.41.0",
    
    # 性能优化
    "uvloop>=0.19.0; sys_platform != 'win32'",
]

classifiers = [
    "Programming Language :: Python :: 3.13",
]
[project.optional-dependencies]
dev = [
    # 测试
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.1",
    "pytest-benchmark>=4.0.0",
    "pytest-xdist>=3.5.0",
    "faker>=20.1.0",
    "factory-boy>=3.3.0",
    
    # 代码质量
    "black>=23.12.0",
    "isort>=5.13.0",
    "mypy>=1.8.0",
    "ruff>=0.1.9",
    "bandit>=1.7.5",
    "safety>=2.3.5",
    
    # 类型检查
    "types-pyyaml>=6.0.12.12",
    "types-redis>=4.6.0.11",
    "types-requests>=2.31.0.10",
    
    # 开发工具
    "pre-commit>=3.6.0",
    "httpx>=0.26.0",
    "ipython>=8.18.0",
    
    # 文档
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.5.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/SUOKE2024/suoke_life"
Repository = "https://github.com/SUOKE2024/suoke_life.git"
"Bug Tracker" = "https://github.com/SUOKE2024/suoke_life/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["services*"]

[tool.black]
line-length = 100
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.13"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
namespace_packages = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["test"]
python_files = "test_*.py"
python_functions = "test_*"
asyncio_mode = "auto"
addopts = "--cov=services --cov-report=term-missing --cov-report=html"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["services"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 