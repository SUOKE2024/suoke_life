apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-service-config
  namespace: suoke
  labels:
    app: auth-service
    environment: production
data:
  LOG_LEVEL: "INFO"
  METRICS_ENABLED: "true"
  DB_HOST: "postgres-service"
  DB_PORT: "5432"
  DB_NAME: "auth_db"
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  HTTP_PORT: "8000"
  GRPC_PORT: "50051"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: suoke
  labels:
    app: auth-service
    environment: production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: auth-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: auth-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "8000"
    spec:
      serviceAccountName: auth-service-sa
      containers:
      - name: auth-service
        image: suoke/auth-service:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
        - name: grpc
          containerPort: 50051
        envFrom:
        - configMapRef:
            name: auth-service-config
        env:
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: auth-service-secrets
              key: jwt-secret
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 512Mi
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 20
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: suoke
  labels:
    app: auth-service
spec:
  selector:
    app: auth-service
  ports:
  - name: http
    port: 8000
    targetPort: 8000
  - name: grpc
    port: 50051
    targetPort: 50051
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: auth-service-sa
  namespace: suoke
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: auth-service-ingress
  namespace: suoke
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - auth.api.suoke.life
    secretName: auth-tls-cert
  rules:
  - host: auth.api.suoke.life
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: auth-service
            port:
              number: 8000
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: auth-service-hpa
  namespace: suoke
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: auth-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80 