apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: suoke-core
  labels:
    app: auth-service
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/part-of: suoke-life
spec:
  replicas: 3
  selector:
    matchLabels:
      app: auth-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: auth-service
        app.kubernetes.io/name: auth-service
        app.kubernetes.io/part-of: suoke-life
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
        # 添加Istio注入
        sidecar.istio.io/inject: "true"
        proxy.istio.io/config: |
          tracing:
            zipkin:
              address: jaeger-collector.observability:9411
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      containers:
      - name: auth-service
        image: suoke/auth-service:latest
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "1"
            memory: "1Gi"
        ports:
        - name: http
          containerPort: 8080
        - name: grpc
          containerPort: 9090
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: db_host
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: db_port
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: db_name
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: auth-service-secrets
              key: db_username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: auth-service-secrets
              key: db_password
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: redis_host
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: redis_port
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: auth-service-secrets
              key: jwt_secret
        - name: PULSAR_URL
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: pulsar_url
        - name: LOG_LEVEL
          value: "INFO"
        # 链路追踪配置
        - name: JAEGER_HOST
          value: "jaeger-agent.observability"
        - name: JAEGER_PORT
          value: "6831"
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: logs-volume
          mountPath: /var/log/suoke/auth-service
        # 健康检查更新
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        # 添加启动探针
        startupProbe:
          httpGet:
            path: /health/live
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      volumes:
      - name: config-volume
        configMap:
          name: auth-service-config
          items:
          - key: default.yaml
            path: default.yaml
      - name: logs-volume
        emptyDir: {}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - auth-service
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: suoke-core
  labels:
    app: auth-service
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/part-of: suoke-life
spec:
  selector:
    app: auth-service
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  - name: grpc
    port: 9090
    targetPort: 9090
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-service-config
  namespace: suoke-core
data:
  db_host: "postgres-postgresql.database"
  db_port: "5432"
  db_name: "auth_db"
  redis_host: "redis-master.database"
  redis_port: "6379"
  pulsar_url: "pulsar://pulsar-broker.messaging:6650"
  default.yaml: |
    service:
      name: auth-service
      version: 1.0.0
      port: 8080
      debug: false
      env: production
    database:
      type: postgresql
      host: ${DB_HOST:postgres-postgresql.database}
      port: ${DB_PORT:5432}
      database: ${DB_NAME:auth_db}
      username: ${DB_USERNAME:postgres}
      password: ${DB_PASSWORD:postgres}
      pool_size: 20
      max_overflow: 10
      ssl: false
    redis:
      host: ${REDIS_HOST:redis-master.database}
      port: ${REDIS_PORT:6379}
      db: 0
      max_connections: 10
    jwt:
      algorithm: HS256
      access_token_expire_minutes: 30
      refresh_token_expire_days: 7
    cors:
      allow_origins:
        - https://app.suoke.life
        - https://api.suoke.life
    # 添加可观测性配置
    logging:
      level: ${LOG_LEVEL:INFO}
      format: json
      output: stdout
    tracing:
      enabled: true
      jaeger_host: ${JAEGER_HOST:jaeger-agent.observability}
      jaeger_port: ${JAEGER_PORT:6831}
      service_name: auth-service
      sample_rate: 1.0
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: auth-service-ingress
  namespace: suoke-core
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.suoke.life
    secretName: api-suoke-life-tls
  rules:
  - host: api.suoke.life
    http:
      paths:
      - path: /v1/auth
        pathType: Prefix
        backend:
          service:
            name: auth-service
            port:
              number: 8080
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: auth-service-hpa
  namespace: suoke-core
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: auth-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 20
        periodSeconds: 60
---
# 添加Prometheus监控规则
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: auth-service-alerts
  namespace: suoke-core
  labels:
    prometheus: kube-prometheus
    role: alert-rules
spec:
  groups:
  - name: auth-service
    rules:
    - alert: AuthServiceHighErrorRate
      expr: sum(rate(auth_request_count_total{status=~"5.."}[5m])) by (instance) / sum(rate(auth_request_count_total[5m])) by (instance) > 0.05
      for: 2m
      labels:
        severity: warning
        service: auth-service
      annotations:
        summary: "认证服务高错误率"
        description: "实例 {{ $labels.instance }} 的错误率超过5%，当前值: {{ $value | humanizePercentage }}"
        runbook_url: "https://wiki.suoke.life/operations/runbooks/auth-service-high-error-rate"
    
    - alert: AuthServiceSlowResponse
      expr: histogram_quantile(0.95, sum(rate(auth_request_latency_seconds_bucket[5m])) by (instance, le)) > 0.5
      for: 5m
      labels:
        severity: warning
        service: auth-service
      annotations:
        summary: "认证服务响应缓慢"
        description: "实例 {{ $labels.instance }} 的95%请求响应时间超过500ms，当前值: {{ $value | humanizeDuration }}"
        runbook_url: "https://wiki.suoke.life/operations/runbooks/auth-service-slow-response"
    
    - alert: AuthServiceHighAuthFailureRate
      expr: sum(rate(auth_login_attempts_total{success="false"}[5m])) by (instance) / sum(rate(auth_login_attempts_total[5m])) by (instance) > 0.3
      for: 5m
      labels:
        severity: warning
        service: auth-service
      annotations:
        summary: "高认证失败率"
        description: "实例 {{ $labels.instance }} 的认证失败率超过30%，可能存在暴力破解攻击，当前值: {{ $value | humanizePercentage }}"
        runbook_url: "https://wiki.suoke.life/operations/runbooks/auth-service-high-auth-failure-rate"