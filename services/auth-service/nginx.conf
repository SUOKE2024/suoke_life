events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # 基础配置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 16M;

    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 上游服务器组 - 认证服务
    upstream auth_backend {
        # 负载均衡策略：ip_hash确保会话粘性
        ip_hash;
        
        # 主节点
        server auth-service-primary:8000 weight=10 max_fails=3 fail_timeout=30s;
        
        # 备用节点
        server auth-service-secondary:8000 weight=5 max_fails=3 fail_timeout=30s backup;
        
        # 保持连接
        keepalive 32;
    }

    # 上游服务器组 - gRPC服务
    upstream grpc_backend {
        server auth-service-primary:50051 weight=10 max_fails=3 fail_timeout=30s;
        server auth-service-secondary:50052 weight=5 max_fails=3 fail_timeout=30s backup;
    }

    # 速率限制
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/s;

    # 连接限制
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

    # HTTP服务器配置
    server {
        listen 80;
        server_name localhost suoke-auth.local;

        # 安全头
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # 连接限制
        limit_conn conn_limit 20;

        # 健康检查端点
        location /health {
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://auth_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 健康检查超时设置
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        # 认证相关API
        location /auth/ {
            limit_req zone=auth_limit burst=20 nodelay;
            
            proxy_pass http://auth_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时设置
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # 缓冲设置
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # 监控API
        location /monitoring/ {
            limit_req zone=api_limit burst=50 nodelay;
            
            proxy_pass http://auth_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 监控API可能需要更长时间
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # API文档
        location /docs {
            limit_req zone=api_limit burst=10 nodelay;
            
            proxy_pass http://auth_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 其他API请求
        location /api/ {
            limit_req zone=api_limit burst=100 nodelay;
            
            proxy_pass http://auth_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # 静态文件（如果有）
        location /static/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            proxy_pass http://auth_backend;
            proxy_set_header Host $host;
        }

        # 默认路由
        location / {
            limit_req zone=api_limit burst=50 nodelay;
            
            proxy_pass http://auth_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Nginx状态页面
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 172.20.0.0/16;  # 只允许内网访问
            deny all;
        }

        # 错误页面
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # gRPC服务器配置
    server {
        listen 9000 http2;
        server_name localhost;

        # gRPC代理
        location / {
            grpc_pass grpc://grpc_backend;
            grpc_set_header Host $host;
            grpc_set_header X-Real-IP $remote_addr;
            grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # gRPC超时设置
            grpc_connect_timeout 10s;
            grpc_send_timeout 30s;
            grpc_read_timeout 30s;
        }
    }

    # HTTPS服务器配置（如果有SSL证书）
    # server {
    #     listen 443 ssl http2;
    #     server_name suoke-auth.local;
    #
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_session_timeout 1d;
    #     ssl_session_cache shared:SSL:50m;
    #     ssl_session_tickets off;
    #
    #     # 现代SSL配置
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=63072000" always;
    #
    #     # 其他配置与HTTP相同...
    # }
} 