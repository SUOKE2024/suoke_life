syntax = "proto3";

package suoke.auth.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/SUOKE2024/suoke_life/services/auth-service/api/grpc";
option java_package = "com.suoke.auth.v1";
option java_multiple_files = true;

// 认证服务，提供用户认证和授权相关功能
service AuthService {
  // 用户注册
  rpc Register(RegisterRequest) returns (RegisterResponse);
  
  // 用户登录
  rpc Login(LoginRequest) returns (LoginResponse);
  
  // 用户登出
  rpc Logout(LogoutRequest) returns (LogoutResponse);
  
  // 刷新令牌
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);
  
  // 验证令牌
  rpc VerifyToken(VerifyTokenRequest) returns (VerifyTokenResponse);
  
  // 检查权限
  rpc CheckPermission(CheckPermissionRequest) returns (CheckPermissionResponse);
  
  // 获取用户角色
  rpc GetUserRoles(GetUserRolesRequest) returns (GetUserRolesResponse);
  
  // 启用多因素认证
  rpc EnableMFA(EnableMFARequest) returns (EnableMFAResponse);
  
  // 验证多因素认证
  rpc VerifyMFA(VerifyMFARequest) returns (VerifyMFAResponse);
  
  // 重置密码
  rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordResponse);
}

// 注册请求
message RegisterRequest {
  string username = 1;
  string email = 2;
  string password = 3;
  string phone_number = 4; // 可选
  map<string, string> profile_data = 5; // 用户个人资料
}

// 注册响应
message RegisterResponse {
  string user_id = 1;
  string username = 2;
  string email = 3;
  bool success = 4;
  string message = 5;
}

// 登录请求
message LoginRequest {
  oneof identifier {
    string username = 1;
    string email = 2;
    string phone_number = 3;
  }
  string password = 4;
  // 基于用户选择的认证方法
  AuthMethod auth_method = 5;
  // 多因素认证码(如果已启用)
  string mfa_code = 6;
}

// 认证方法枚举
enum AuthMethod {
  PASSWORD = 0;
  SMS_CODE = 1;  
  EMAIL_CODE = 2;
  OAUTH = 3;
  MFA = 4;
}

// 登录响应
message LoginResponse {
  string access_token = 1;
  string refresh_token = 2;
  string token_type = 3;
  int64 expires_in = 4; // 过期时间(秒)
  bool mfa_required = 5; // 是否需要MFA
  string mfa_token = 6; // 用于MFA验证的临时令牌
  bool success = 7;
  string message = 8;
}

// 登出请求
message LogoutRequest {
  string access_token = 1;
  string refresh_token = 2;
}

// 登出响应
message LogoutResponse {
  bool success = 1;
  string message = 2;
}

// 刷新令牌请求
message RefreshTokenRequest {
  string refresh_token = 1;
}

// 刷新令牌响应
message RefreshTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
  string token_type = 3;
  int64 expires_in = 4;
  bool success = 5;
  string message = 6;
}

// 验证令牌请求
message VerifyTokenRequest {
  string token = 1;
}

// 验证令牌响应
message VerifyTokenResponse {
  bool valid = 1;
  string user_id = 2;
  repeated string permissions = 3;
  repeated string roles = 4;
  string message = 5;
}

// 检查权限请求
message CheckPermissionRequest {
  string user_id = 1;
  string permission = 2;
  string resource_id = 3; // 可选,特定资源
}

// 检查权限响应
message CheckPermissionResponse {
  bool has_permission = 1;
  string message = 2;
}

// 获取用户角色请求
message GetUserRolesRequest {
  string user_id = 1;
}

// 获取用户角色响应
message GetUserRolesResponse {
  repeated Role roles = 1;
  bool success = 2;
  string message = 3;
}

// 角色定义
message Role {
  string id = 1;
  string name = 2;
  string description = 3;
  repeated string permissions = 4;
}

// 启用多因素认证请求
message EnableMFARequest {
  string user_id = 1;
  MFAType mfa_type = 2;
}

// 多因素认证类型
enum MFAType {
  TOTP = 0; // 基于时间的一次性密码
  SMS = 1;  // 短信验证码
  EMAIL = 2; // 电子邮件验证码
}

// 启用多因素认证响应
message EnableMFAResponse {
  bool success = 1;
  string secret_key = 2; // 仅TOTP方式返回
  string qr_code_url = 3; // 仅TOTP方式返回
  string message = 4;
}

// 验证多因素认证请求
message VerifyMFARequest {
  string user_id = 1;
  string mfa_code = 2;
  string mfa_token = 3; // 登录时返回的临时令牌
}

// 验证多因素认证响应
message VerifyMFAResponse {
  bool success = 1;
  string access_token = 2; // 验证成功后返回的完整访问令牌
  string refresh_token = 3;
  string token_type = 4;
  int64 expires_in = 5;
  string message = 6;
}

// 重置密码请求
message ResetPasswordRequest {
  oneof identifier {
    string email = 1;
    string phone_number = 2;
  }
  string verification_code = 3; // 验证码
  string new_password = 4;
}

// 重置密码响应
message ResetPasswordResponse {
  bool success = 1;
  string message = 2;
} 