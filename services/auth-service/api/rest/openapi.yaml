openapi: 3.0.3
info:
  title: 索克生活APP认证服务API
  description: |
    索克生活APP认证服务的REST API接口定义。该服务提供用户认证、授权和访问控制功能，
    包括用户注册、登录、令牌管理、权限控制等功能。
  version: 1.0.0
  contact:
    name: 索克科技开发团队
    email: dev@suoke.life
servers:
  - url: https://api.suoke.life/v1
    description: 生产环境
  - url: https://staging-api.suoke.life/v1
    description: 预发布环境
  - url: https://dev-api.suoke.life/v1
    description: 开发环境
  - url: http://localhost:8080/v1
    description: 本地开发环境

tags:
  - name: auth
    description: 认证相关操作
  - name: users
    description: 用户管理相关操作
  - name: roles
    description: 角色管理相关操作
  - name: permissions
    description: 权限管理相关操作
  - name: mfa
    description: 多因素认证相关操作

paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: 用户登录
      description: 使用用户名和密码登录
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: 登录成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 用户名或密码错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: 请求过于频繁
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/register:
    post:
      tags:
        - auth
      summary: 用户注册
      description: 注册新用户账号
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: 注册成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: 用户名或邮箱已存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: 请求过于频繁
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/refresh:
    post:
      tags:
        - auth
      summary: 刷新访问令牌
      description: 使用刷新令牌获取新的访问令牌
      operationId: refreshToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: 刷新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshTokenResponse'
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 刷新令牌无效或已过期
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/logout:
    post:
      tags:
        - auth
      summary: 用户登出
      description: 注销当前用户会话
      operationId: logout
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutRequest'
      responses:
        '200':
          description: 登出成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutResponse'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/verify:
    post:
      tags:
        - auth
      summary: 验证令牌
      description: 验证访问令牌是否有效
      operationId: verifyToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyTokenRequest'
      responses:
        '200':
          description: 验证结果
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyTokenResponse'
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/reset-password:
    post:
      tags:
        - auth
      summary: 重置密码
      description: 通过验证码重置用户密码
      operationId: resetPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        '200':
          description: 密码重置成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordResponse'
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 用户不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/mfa/enable:
    post:
      tags:
        - auth
        - mfa
      summary: 启用多因素认证
      description: 为用户账号启用多因素认证
      operationId: enableMFA
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableMFARequest'
      responses:
        '200':
          description: 多因素认证配置
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableMFAResponse'
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/mfa/verify:
    post:
      tags:
        - auth
        - mfa
      summary: 验证多因素认证
      description: 验证用户提供的多因素认证码
      operationId: verifyMFA
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyMFARequest'
      responses:
        '200':
          description: 验证结果
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyMFAResponse'
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 验证码错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /roles:
    get:
      tags:
        - roles
      summary: 获取角色列表
      description: 获取系统中的所有角色
      operationId: getRoles
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: 页码
          required: false
          schema:
            type: integer
            default: 1
        - name: size
          in: query
          description: 每页数量
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: 角色列表
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleListResponse'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 权限不足
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /permissions:
    get:
      tags:
        - permissions
      summary: 获取权限列表
      description: 获取系统中的所有权限
      operationId: getPermissions
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: 页码
          required: false
          schema:
            type: integer
            default: 1
        - name: size
          in: query
          description: 每页数量
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: 权限列表
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionListResponse'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 权限不足
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /permissions/check:
    post:
      tags:
        - permissions
      summary: 检查权限
      description: 检查当前用户是否具有指定权限
      operationId: checkPermission
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckPermissionRequest'
      responses:
        '200':
          description: 权限检查结果
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckPermissionResponse'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginRequest:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
          description: 用户名、邮箱或手机号
        password:
          type: string
          description: 密码
          format: password
        authMethod:
          type: string
          description: 认证方法
          enum: [PASSWORD, SMS_CODE, EMAIL_CODE, OAUTH, MFA]
          default: PASSWORD
        mfaCode:
          type: string
          description: 多因素认证验证码
        deviceInfo:
          type: string
          description: 设备信息
        ipAddress:
          type: string
          description: IP地址

    LoginResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: 访问令牌
        refreshToken:
          type: string
          description: 刷新令牌
        tokenType:
          type: string
          description: 令牌类型
          default: Bearer
        expiresIn:
          type: integer
          description: 过期时间（秒）
          format: int64
        mfaRequired:
          type: boolean
          description: 是否需要多因素认证
          default: false
        mfaToken:
          type: string
          description: 多因素认证临时令牌
        success:
          type: boolean
          description: 是否成功
        message:
          type: string
          description: 消息

    RegisterRequest:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
          description: 用户名
        email:
          type: string
          description: 电子邮箱
          format: email
        password:
          type: string
          description: 密码
          format: password
        phoneNumber:
          type: string
          description: 手机号码
        profileData:
          type: object
          description: 用户资料
          additionalProperties:
            type: string

    RegisterResponse:
      type: object
      properties:
        userId:
          type: string
          description: 用户ID
        username:
          type: string
          description: 用户名
        email:
          type: string
          description: 邮箱
          format: email
        success:
          type: boolean
          description: 是否成功
        message:
          type: string
          description: 消息

    RefreshTokenRequest:
      type: object
      required:
        - refreshToken
      properties:
        refreshToken:
          type: string
          description: 刷新令牌

    RefreshTokenResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: 新的访问令牌
        refreshToken:
          type: string
          description: 新的刷新令牌
        tokenType:
          type: string
          description: 令牌类型
          default: Bearer
        expiresIn:
          type: integer
          description: 过期时间（秒）
          format: int64
        success:
          type: boolean
          description: 是否成功
        message:
          type: string
          description: 消息

    VerifyTokenRequest:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          description: 令牌

    VerifyTokenResponse:
      type: object
      properties:
        valid:
          type: boolean
          description: 是否有效
        userId:
          type: string
          description: 用户ID
        permissions:
          type: array
          description: 权限列表
          items:
            type: string
        roles:
          type: array
          description: 角色列表
          items:
            type: string
        message:
          type: string
          description: 消息

    LogoutRequest:
      type: object
      required:
        - accessToken
      properties:
        accessToken:
          type: string
          description: 访问令牌
        refreshToken:
          type: string
          description: 刷新令牌

    LogoutResponse:
      type: object
      properties:
        success:
          type: boolean
          description: 是否成功
        message:
          type: string
          description: 消息

    ResetPasswordRequest:
      type: object
      required:
        - verificationCode
        - newPassword
      properties:
        email:
          type: string
          description: 电子邮箱
          format: email
        phoneNumber:
          type: string
          description: 手机号码
        verificationCode:
          type: string
          description: 验证码
        newPassword:
          type: string
          description: 新密码
          format: password

    ResetPasswordResponse:
      type: object
      properties:
        success:
          type: boolean
          description: 是否成功
        message:
          type: string
          description: 消息

    EnableMFARequest:
      type: object
      required:
        - userId
        - mfaType
      properties:
        userId:
          type: string
          description: 用户ID
        mfaType:
          type: string
          description: 多因素认证类型
          enum: [TOTP, SMS, EMAIL]

    EnableMFAResponse:
      type: object
      properties:
        success:
          type: boolean
          description: 是否成功
        secretKey:
          type: string
          description: 密钥(TOTP方式)
        qrCodeUrl:
          type: string
          description: 二维码URL(TOTP方式)
        message:
          type: string
          description: 消息

    VerifyMFARequest:
      type: object
      required:
        - userId
        - mfaCode
      properties:
        userId:
          type: string
          description: 用户ID
        mfaCode:
          type: string
          description: 多因素认证码
        mfaToken:
          type: string
          description: 多因素认证临时令牌

    VerifyMFAResponse:
      type: object
      properties:
        success:
          type: boolean
          description: 是否验证成功
        accessToken:
          type: string
          description: 访问令牌
        refreshToken:
          type: string
          description: 刷新令牌
        tokenType:
          type: string
          description: 令牌类型
          default: Bearer
        expiresIn:
          type: integer
          description: 过期时间(秒)
          format: int64
        message:
          type: string
          description: 消息

    RoleListResponse:
      type: object
      properties:
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
        total:
          type: integer
          description: 总记录数
        page:
          type: integer
          description: 当前页码
        size:
          type: integer
          description: 每页记录数

    Role:
      type: object
      properties:
        id:
          type: string
          description: 角色ID
        name:
          type: string
          description: 角色名称
        description:
          type: string
          description: 角色描述
        permissions:
          type: array
          description: 角色权限
          items:
            type: string

    PermissionListResponse:
      type: object
      properties:
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        total:
          type: integer
          description: 总记录数
        page:
          type: integer
          description: 当前页码
        size:
          type: integer
          description: 每页记录数

    Permission:
      type: object
      properties:
        id:
          type: string
          description: 权限ID
        name:
          type: string
          description: 权限名称
        description:
          type: string
          description: 权限描述
        resource:
          type: string
          description: 资源
        action:
          type: string
          description: 操作

    CheckPermissionRequest:
      type: object
      required:
        - permission
      properties:
        permission:
          type: string
          description: 权限名称
        resourceId:
          type: string
          description: 资源ID

    CheckPermissionResponse:
      type: object
      properties:
        hasPermission:
          type: boolean
          description: 是否拥有权限
        message:
          type: string
          description: 消息

    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          description: 错误代码
        message:
          type: string
          description: 错误消息
        details:
          type: object
          description: 错误详情
          additionalProperties: true
        requestId:
          type: string
          description: 请求ID 