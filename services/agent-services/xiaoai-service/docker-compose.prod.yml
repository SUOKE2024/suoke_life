version: '3.8'

services:
  xiaoai-service:
    build: .
    container_name: xiaoai-service
    restart: unless-stopped
    ports:
      - "8000:8000"
      - "50051:50051"
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - DATABASE_URL=postgresql://xiaoai:${DB_PASSWORD}@postgres:5432/xiaoai_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - AI_MODEL_PATH=/app/models
    volumes:
      - ./logs:/app/logs
      - ./models:/app/models
      - ./data:/app/data
    depends_on:
      - postgres
      - redis
    networks:
      - xiaoai-network
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  postgres:
    image: postgres:15-alpine
    container_name: xiaoai-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=xiaoai_db
      - POSTGRES_USER=xiaoai
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - xiaoai-network

  redis:
    image: redis:7-alpine
    container_name: xiaoai-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - xiaoai-network

  nginx:
    image: nginx:alpine
    container_name: xiaoai-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - xiaoai-service
    networks:
      - xiaoai-network

volumes:
  postgres_data:
  redis_data:

networks:
  xiaoai-network:
    driver: bridge