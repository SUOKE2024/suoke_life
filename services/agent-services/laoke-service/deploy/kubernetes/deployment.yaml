apiVersion: v1
kind: ConfigMap
metadata:
  name: laoke-service-config
  namespace: agent-services
data:
  config.yaml: |
    service:
      name: "laoke-service"
      version: "1.0.0"
      description: "索克生活APP探索频道的核心智能体，负责知识传播、知识培训和社区内容管理"
      env: production

    server:
      host: "0.0.0.0"
      port: 8080
      grpc_port: 50051
      metrics_port: 9091
      workers: 4
      timeout: 60
      cors:
        allowed_origins: ["*"]
        allowed_methods: ["*"]
        allowed_headers: ["*"]

    logging:
      level: "info"
      format: "json"
      file_path: "/app/logs/laoke-service.log"
      rotation: 50
      backups: 5

    database:
      postgres:
        host: "postgres-service"
        port: 5432
        name: "laoke_db"
        user: "postgres"
        password: "${POSTGRES_PASSWORD}"
        pool_size: 20
        pool_recycle: 3600
        ssl_mode: "disable"
      
      mongodb:
        uri: "mongodb://mongodb-service:27017/laoke_db"
        database: "laoke_db"
        max_pool_size: 100
        min_pool_size: 10
        max_idle_time_ms: 30000
      
      neo4j:
        uri: "bolt://neo4j-service:7687"
        user: "neo4j"
        password: "${NEO4J_PASSWORD}"
      
      redis:
        host: "redis-service"
        port: 6379
        password: "${REDIS_PASSWORD}"
        db: 0
        pool_min_size: 5
        pool_max_size: 20

    cache:
      enabled: true
      type: "redis"
      ttl: 3600
      max_size: 10000

    models:
      llm:
        primary_model: "gpt-4-turbo"
        fallback_model: "claude-3-opus"
        timeout: 120
        providers:
          openai:
            base_url: "https://api.openai.com/v1"
            timeout: 120
          anthropic:
            base_url: "https://api.anthropic.com/v1"
            timeout: 120

    security:
      jwt:
        secret_key: "${JWT_SECRET_KEY}"
        algorithm: "HS256"
        access_token_expire_minutes: 60
        refresh_token_expire_days: 30

    observability:
      tracing:
        enabled: true
        exporter: "otlp"
        endpoint: "tempo-service:4317"
        service_name: "laoke-service"
      metrics:
        enabled: true
        exporter: "prometheus"
        endpoint: "prometheus-service:9090"
        service_name: "laoke-service"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: laoke-service
  namespace: suokelife
  labels:
    app: laoke-service
    component: agent-service
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: laoke-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: laoke-service
        component: agent-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9091"
        prometheus.io/path: "/metrics"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - laoke-service
              topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-pool
                operator: In
                values:
                - suoke-ai-np
      containers:
      - name: laoke-service
        image: ${ECR_REGISTRY}/laoke-service:${IMAGE_TAG}
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
        - name: grpc
          containerPort: 50051
        - name: metrics
          containerPort: 9091
        env:
        - name: LAOKE_ENV
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: laoke-database-credentials
              key: password
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: laoke-database-credentials
              key: mongo-password
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: laoke-redis-credentials
              key: password
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: laoke-api-credentials
              key: openai-api-key
        - name: API_TOKEN_SECRET
          valueFrom:
            secretKeyRef:
              name: laoke-api-credentials
              key: api-token-secret
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: laoke-api-credentials
              key: jwt-secret
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health/ready
            port: http
          periodSeconds: 5
          timeoutSeconds: 2
          failureThreshold: 12
        volumeMounts:
        - name: config-volume
          mountPath: /app/config/config.yaml
          subPath: config.yaml
        - name: prompts-volume
          mountPath: /app/config/prompts
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: config-volume
        configMap:
          name: laoke-service-config
      - name: prompts-volume
        configMap:
          name: laoke-service-prompts
      - name: tmp-volume
        emptyDir: {}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      terminationGracePeriodSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  name: laoke-service
  namespace: suokelife
  labels:
    app: laoke-service
    component: agent-service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9091"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  - name: grpc
    port: 50051
    targetPort: 50051
    protocol: TCP
  - name: metrics
    port: 9091
    targetPort: 9091
    protocol: TCP
  selector:
    app: laoke-service
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: laoke-service-pdb
  namespace: suokelife
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: laoke-service
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: laoke-service-hpa
  namespace: suokelife
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: laoke-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 75
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 75
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 20
        periodSeconds: 120
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: laoke-service-network-policy
  namespace: suokelife
spec:
  podSelector:
    matchLabels:
      app: laoke-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: suokelife
    - podSelector:
        matchLabels:
          component: api-gateway
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 50051
    - protocol: TCP
      port: 9091
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: mongodb
    ports:
    - protocol: TCP
      port: 27017
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  - to:
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - protocol: UDP
      port: 53 