---
# ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: laoke-service-config
  namespace: suoke-ai-np
  labels:
    app: laoke-service
    part-of: agent-services
data:
  default.yaml: |
    service:
      name: laoke-service
      version: 1.0.0
    server:
      host: 0.0.0.0
      port: 8080
      debug: false
      workers: 4
      timeout: 60
    logging:
      level: INFO
      format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
      file: /app/logs/laoke-service.log
      max_size: 10485760
      backup_count: 5
  
---
# Secret
apiVersion: v1
kind: Secret
metadata:
  name: laoke-service-secrets
  namespace: suoke-ai-np
  labels:
    app: laoke-service
    part-of: agent-services
type: Opaque
data:
  DB_PASS: cGFzc3dvcmQ=  # "password" base64 encoded
  REDIS_PASS: cGFzc3dvcmQ=  # "password" base64 encoded
  JWT_SECRET: c2VjcmV0LWtleQ==  # "secret-key" base64 encoded
  OPENAI_API_KEY: ""  # 填入实际API Key的base64编码

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: laoke-service
  namespace: suoke-ai-np
  labels:
    app: laoke-service
    part-of: agent-services
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "51051"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app: laoke-service
  ports:
    - name: http
      port: 8080
      targetPort: 8080
    - name: grpc
      port: 50051
      targetPort: 50051
    - name: metrics
      port: 51051
      targetPort: 51051

---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: laoke-service
  namespace: suoke-ai-np
  labels:
    app: laoke-service
    part-of: agent-services
spec:
  replicas: 2
  selector:
    matchLabels:
      app: laoke-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: laoke-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "51051"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: laoke-service-sa
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: laoke-service
          image: ${CONTAINER_REGISTRY}/laoke-service:latest
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            readOnlyRootFilesystem: true
          ports:
            - name: http
              containerPort: 8080
            - name: grpc
              containerPort: 50051
            - name: metrics
              containerPort: 51051
          env:
            - name: SERVICE_ENV
              value: "production"
            - name: LOG_LEVEL
              value: "INFO"
            - name: GRAPHQL_PORT
              value: "8080"
            - name: GRPC_PORT
              value: "50051"
            - name: METRICS_PORT
              value: "51051"
            - name: MONITORING_ENABLED
              value: "true"
            - name: TRACING_ENABLED
              value: "true"
            - name: OTLP_ENDPOINT
              value: "jaeger-collector.monitoring:4317"
            - name: DB_HOST
              value: "postgres.database"
            - name: DB_PORT
              value: "5432"
            - name: DB_USER
              value: "postgres"
            - name: DB_NAME
              value: "laoke_service"
            - name: REDIS_HOST
              value: "redis.cache"
            - name: REDIS_PORT
              value: "6379"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: laoke-service-secrets
                  key: DB_PASS
            - name: REDIS_PASS
              valueFrom:
                secretKeyRef:
                  name: laoke-service-secrets
                  key: REDIS_PASS
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: laoke-service-secrets
                  key: JWT_SECRET
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: laoke-service-secrets
                  key: OPENAI_API_KEY
          volumeMounts:
            - name: config-volume
              mountPath: /app/config/default.yaml
              subPath: default.yaml
            - name: logs-volume
              mountPath: /app/logs
          resources:
            requests:
              cpu: "200m"
              memory: "512Mi"
            limits:
              cpu: "1000m"
              memory: "1Gi"
          livenessProbe:
            httpGet:
              path: /v1/health/status
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /v1/health/status
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /v1/health/status
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 12
      volumes:
        - name: config-volume
          configMap:
            name: laoke-service-config
        - name: logs-volume
          emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - laoke-service
                topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 60

---
# Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: laoke-service-sa
  namespace: suoke-ai-np
  labels:
    app: laoke-service
    part-of: agent-services

---
# HorizontalPodAutoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: laoke-service
  namespace: suoke-ai-np
  labels:
    app: laoke-service
    part-of: agent-services
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: laoke-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 60
        - type: Pods
          value: 4
          periodSeconds: 60

---
# NetworkPolicy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: laoke-service-network-policy
  namespace: suoke-ai-np
  labels:
    app: laoke-service
    part-of: agent-services
spec:
  podSelector:
    matchLabels:
      app: laoke-service
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: default
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
        - podSelector:
            matchLabels:
              app: api-gateway
      ports:
        - protocol: TCP
          port: 8080
        - protocol: TCP
          port: 50051
    - from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - protocol: TCP
          port: 51051
  egress:
    - to:
        - podSelector:
            matchLabels:
              app: postgres
      ports:
        - protocol: TCP
          port: 5432
    - to:
        - podSelector:
            matchLabels:
              app: redis
      ports:
        - protocol: TCP
          port: 6379
    - to:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - protocol: TCP
          port: 4317
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
              - 10.0.0.0/8
              - 172.16.0.0/12
              - 192.168.0.0/16
      ports:
        - protocol: TCP
          port: 443

---
# PodDisruptionBudget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: laoke-service-pdb
  namespace: suoke-ai-np
  labels:
    app: laoke-service
    part-of: agent-services
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: laoke-service 