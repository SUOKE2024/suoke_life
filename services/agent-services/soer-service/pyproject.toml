[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
index-url = "https://pypi.tuna.tsinghua.edu.cn/simple/"

[project]
name = "suoke-soer-service"
version = "2.0.0"
description = "索克生活索儿智能体服务 - 营养与生活方式管理AI智能体"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "索克生活团队", email = "dev@suoke.life" }
]
maintainers = [
    { name = "索克生活团队", email = "dev@suoke.life" }
]
keywords = [
    "soer",
    "agent",
    "health",
    "nutrition",
    "ai-agent",
    "traditional-chinese-medicine",
    "lifestyle-management"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Healthcare Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Typing :: Typed",
]
requires-python = ">=3.13.3"
dependencies = [
    # 核心框架
    "fastapi>=0.110.0,<1.0.0",
    "uvicorn[standard]>=0.27.1,<1.0.0",
    "grpcio>=1.59.0,<2.0.0",
    # "grpcio-tools>=1.59.0,<2.0.0",  # 暂时注释，Python 3.13 编译问题
    "protobuf>=4.25.1,<5.0.0",
    "pyyaml>=6.0.1,<7.0.0",
    "python-dotenv>=1.0.1,<2.0.0",
    
    # 数据库与存储
    "motor>=3.3.2,<4.0.0",
    "pymongo>=4.6.1,<5.0.0",
    "redis>=5.0.1,<6.0.0",
    "aioredis>=2.0.1,<3.0.0",
    "sqlalchemy>=2.0.25,<3.0.0",
    "asyncpg>=0.29.0,<1.0.0",
    
    # AI与机器学习
    "openai>=1.13.3,<2.0.0",
    "anthropic>=0.25.0,<1.0.0",
    "langchain>=0.1.0,<1.0.0",
    "langchain-openai>=0.1.0,<1.0.0",
    "transformers>=4.36.0,<5.0.0",
    "torch>=2.1.0,<3.0.0",
    "numpy>=1.26.3,<2.0.0",
    "scipy>=1.12.0,<2.0.0",
    "pandas>=2.2.0,<3.0.0",
    "scikit-learn>=1.4.0,<2.0.0",
    "pydantic>=2.5.3,<3.0.0",
    "pydantic-settings>=2.0.0,<3.0.0",
    
    # 传感器数据处理
    "tslearn>=0.6.3,<1.0.0",
    "pyts>=0.13.0,<1.0.0",
    "heartpy>=1.2.7,<2.0.0",
    "biosppy>=1.0.0,<2.0.0",
    # "hrv-analysis>=1.0.4,<2.0.0",  # 暂时注释，依赖有网络问题
    "tsfresh>=0.20.2,<1.0.0",
    
    # 营养分析
    "pint>=0.23,<1.0",
    "sympy>=1.12.0,<2.0.0",
    
    # 图像处理
    "pillow>=10.2.0,<11.0.0",
    "opencv-python>=4.9.0.80,<5.0.0",
    
    # 音频处理
    "librosa>=0.10.1,<1.0.0",
    "soundfile>=0.12.1,<1.0.0",
    "pydub>=0.25.1,<1.0.0",
    
    # 监控与度量
    "prometheus-client>=0.19.0,<1.0.0",
    "aioprometheus>=23.6.0,<24.0.0",
    "opentelemetry-api>=1.21.0,<2.0.0",
    "opentelemetry-sdk>=1.21.0,<2.0.0",
    "opentelemetry-exporter-otlp>=1.21.0,<2.0.0",
    "structlog>=24.1.0,<25.0.0",
    "python-json-logger>=2.0.7,<3.0.0",
    "psutil>=5.9.8,<6.0.0",
    
    # 服务依赖
    "httpx>=0.25.2,<1.0.0",
    "websockets>=12.0,<13.0",
    "aiohttp>=3.9.1,<4.0.0",
    "requests>=2.31.0,<3.0.0",
    "fitparse>=1.2.0,<2.0.0",
    "gpxpy>=1.6.0,<2.0.0",
    
    # 配置管理和文件监控
    "watchdog>=3.0.0,<4.0.0",
    
    # 连接池和异步支持
    "aiofiles>=23.0.0,<24.0.0",
    
    # 工具与实用程序
    "python-multipart>=0.0.7,<1.0.0",
    "pyjwt>=2.8.0,<3.0.0",
    "cryptography>=41.0.7,<42.0.0",
    "cachetools>=5.3.2,<6.0.0",
    "tenacity>=8.2.3,<9.0.0",
    "jsonschema>=4.21.1,<5.0.0",
]

[dependency-groups]
dev = [
    "pytest>=8.0.0,<9.0.0",
    "pytest-asyncio>=0.23.4,<1.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "pytest-mock>=3.12.0,<4.0.0",
    "pytest-xdist>=3.5.0,<4.0.0",
    "mypy>=1.7.1,<2.0.0",
    "pylint>=3.0.3,<4.0.0",
    "ruff>=0.1.0,<1.0.0",
    "pre-commit>=3.6.0,<4.0.0",
]
docs = [
    "sphinx>=7.2.6,<8.0.0",
    "sphinx-rtd-theme>=1.3.0,<2.0.0",
    "sphinx-autodoc-typehints>=1.25.0,<2.0.0",
    "myst-parser>=2.0.0,<3.0.0",
]
test = [
    "pytest>=8.0.0,<9.0.0",
    "pytest-asyncio>=0.23.4,<1.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "pytest-mock>=3.12.0,<4.0.0",
    "pytest-xdist>=3.5.0,<4.0.0",
    "httpx>=0.25.2,<1.0.0",
    "factory-boy>=3.3.0,<4.0.0",
]
ml = [
    # "tensorflow>=2.15.0,<3.0.0",  # 暂时注释，等待 Python 3.13 支持
    "prophet>=1.1.5,<2.0.0",
    "xgboost>=2.0.3,<3.0.0",
    "sentence-transformers>=2.2.2,<3.0.0",
    # "timescaledb-python>=0.5.0,<1.0.0",  # 包不存在，暂时注释
]

[project.urls]
Homepage = "https://github.com/SUOKE2024/suoke_life"
Documentation = "https://docs.suoke.life"
Repository = "https://github.com/SUOKE2024/suoke_life"
Issues = "https://github.com/SUOKE2024/suoke_life/issues"
Changelog = "https://github.com/SUOKE2024/suoke_life/blob/main/CHANGELOG.md"

[project.scripts]
soer-service = "soer_service.main:main"

[tool.hatch.version]
path = "soer_service/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["soer_service"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "heartpy.*",
    "biosppy.*",
    "hrv_analysis.*",
    "tsfresh.*",
    "tslearn.*",
    "pyts.*",
    "fitparse.*",
    "gpxpy.*",
    "librosa.*",
    "soundfile.*",
    "pydub.*",
]
ignore_missing_imports = true

[tool.pylint.messages_control]
disable = [
    "C0103",  # invalid-name
    "C0114",  # missing-module-docstring
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
]

[tool.pylint.format]
max-line-length = 88

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["soer_service"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by ruff format
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "B904",  # raise ... from err (暂时忽略)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"test_*.py" = ["B011"]

[tool.ruff.lint.isort]
known-first-party = ["soer_service"]