syntax = "proto3";

package suoke.user;

option go_package = "github.com/suoke_life/user-service/api/grpc";

// 导入常用Proto类型
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

// 用户服务 - 提供用户账户管理和信息查询功能
service UserService {
  // 用户账户操作
  rpc CreateUser(CreateUserRequest) returns (UserResponse);
  rpc GetUser(GetUserRequest) returns (UserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);

  // 用户健康数据摘要
  rpc GetUserHealthSummary(GetUserRequest) returns (HealthSummaryResponse);
  rpc UpdateUserHealthSummary(UpdateHealthSummaryRequest) returns (HealthSummaryResponse);
  
  // 用户设备绑定管理
  rpc BindUserDevice(BindDeviceRequest) returns (DeviceResponse);
  rpc UnbindUserDevice(UnbindDeviceRequest) returns (google.protobuf.Empty);
  rpc GetUserDevices(GetUserRequest) returns (ListDevicesResponse);
  
  // 用户偏好设置
  rpc GetUserPreferences(GetUserRequest) returns (UserPreferencesResponse);
  rpc UpdateUserPreferences(UpdatePreferencesRequest) returns (UserPreferencesResponse);
  
  // 用户认证
  rpc VerifyUserIdentity(VerifyIdentityRequest) returns (VerifyIdentityResponse);
}

// 创建用户请求
message CreateUserRequest {
  string username = 1;
  string email = 2;
  string phone_number = 3;
  string full_name = 4;
  string password_hash = 5;
  Gender gender = 6;
  google.protobuf.Timestamp birth_date = 7;
  string profile_image_url = 8;
}

// 获取用户请求
message GetUserRequest {
  string user_id = 1;
}

// 更新用户请求
message UpdateUserRequest {
  string user_id = 1;
  optional string username = 2;
  optional string email = 3;
  optional string phone_number = 4;
  optional string full_name = 5;
  optional string password_hash = 6;
  optional Gender gender = 7;
  optional google.protobuf.Timestamp birth_date = 8;
  optional string profile_image_url = 9;
}

// 删除用户请求
message DeleteUserRequest {
  string user_id = 1;
}

// 列出用户请求
message ListUsersRequest {
  int32 page = 1;
  int32 limit = 2;
  string filter = 3;
}

// 用户响应
message UserResponse {
  string user_id = 1;
  string username = 2;
  string email = 3;
  string phone_number = 4;
  string full_name = 5;
  Gender gender = 6;
  google.protobuf.Timestamp birth_date = 7;
  string profile_image_url = 8;
  google.protobuf.Timestamp created_at = 9;
  google.protobuf.Timestamp updated_at = 10;
  UserStatus status = 11;
  repeated string roles = 12;
}

// 用户列表响应
message ListUsersResponse {
  repeated UserResponse users = 1;
  int32 total = 2;
  int32 page = 3;
  int32 limit = 4;
}

// 更新健康摘要请求
message UpdateHealthSummaryRequest {
  string user_id = 1;
  HealthSummary health_summary = 2;
}

// 健康摘要响应
message HealthSummaryResponse {
  string user_id = 1;
  HealthSummary health_summary = 2;
  google.protobuf.Timestamp updated_at = 3;
}

// 健康摘要
message HealthSummary {
  optional float height = 1;  // 身高（厘米）
  optional float weight = 2;  // 体重（千克）
  optional float bmi = 3;     // 体质指数
  repeated string allergies = 4;  // 过敏信息
  repeated string chronic_conditions = 5;  // 慢性病情
  optional BloodType blood_type = 6;  // 血型
  repeated ConstitutionScore constitution_scores = 7;  // 体质评分
  optional google.protobuf.Timestamp last_assessment_date = 8;  // 最近评估日期
}

// 体质评分
message ConstitutionScore {
  ConstitutionType type = 1;  // 体质类型
  float score = 2;  // 评分（0-100）
  google.protobuf.Timestamp assessed_at = 3;  // 评估时间
}

// 绑定设备请求
message BindDeviceRequest {
  string user_id = 1;
  string device_id = 2;
  string device_name = 3;
  string device_type = 4;
  map<string, string> device_info = 5;
}

// 解绑设备请求
message UnbindDeviceRequest {
  string user_id = 1;
  string device_id = 2;
}

// 设备响应
message DeviceResponse {
  string device_id = 1;
  string user_id = 2;
  string device_name = 3;
  string device_type = 4;
  map<string, string> device_info = 5;
  google.protobuf.Timestamp bound_at = 6;
  DeviceStatus status = 7;
}

// 设备列表响应
message ListDevicesResponse {
  repeated DeviceResponse devices = 1;
}

// 获取用户偏好响应
message UserPreferencesResponse {
  string user_id = 1;
  map<string, string> preferences = 2;
  NotificationSettings notification_settings = 3;
  PrivacySettings privacy_settings = 4;
  UISettings ui_settings = 5;
  google.protobuf.Timestamp updated_at = 6;
}

// 更新用户偏好请求
message UpdatePreferencesRequest {
  string user_id = 1;
  map<string, string> preferences = 2;
  optional NotificationSettings notification_settings = 3;
  optional PrivacySettings privacy_settings = 4;
  optional UISettings ui_settings = 5;
}

// 通知设置
message NotificationSettings {
  bool enable_push = 1;
  bool enable_email = 2;
  bool enable_sms = 3;
  map<string, bool> topic_settings = 4;
  TimeRangeSettings quiet_hours = 5;
}

// 时间范围设置
message TimeRangeSettings {
  int32 start_hour = 1;
  int32 start_minute = 2;
  int32 end_hour = 3;
  int32 end_minute = 4;
  bool enabled = 5;
}

// 隐私设置
message PrivacySettings {
  DataSharingLevel data_sharing_level = 1;
  bool allow_research_use = 2;
  bool show_profile = 3;
  bool show_status = 4;
}

// UI设置
message UISettings {
  string theme = 1;
  string language = 2;
  string font_size = 3;
  bool high_contrast = 4;
  bool reduce_motion = 5;
}

// 身份验证请求
message VerifyIdentityRequest {
  string user_id = 1;
  VerificationType verification_type = 2;
  string verification_data = 3;
}

// 身份验证响应
message VerifyIdentityResponse {
  bool verified = 1;
  string message = 2;
  int32 attempts_remaining = 3;
  google.protobuf.Timestamp verification_time = 4;
}

// 性别枚举
enum Gender {
  GENDER_UNSPECIFIED = 0;
  GENDER_MALE = 1;
  GENDER_FEMALE = 2;
  GENDER_OTHER = 3;
}

// 用户状态枚举
enum UserStatus {
  USER_STATUS_UNSPECIFIED = 0;
  USER_STATUS_ACTIVE = 1;
  USER_STATUS_INACTIVE = 2;
  USER_STATUS_SUSPENDED = 3;
  USER_STATUS_DELETED = 4;
}

// 设备状态枚举
enum DeviceStatus {
  DEVICE_STATUS_UNSPECIFIED = 0;
  DEVICE_STATUS_ACTIVE = 1;
  DEVICE_STATUS_INACTIVE = 2;
  DEVICE_STATUS_REVOKED = 3;
}

// 血型枚举
enum BloodType {
  BLOOD_TYPE_UNSPECIFIED = 0;
  BLOOD_TYPE_A_POSITIVE = 1;
  BLOOD_TYPE_A_NEGATIVE = 2;
  BLOOD_TYPE_B_POSITIVE = 3;
  BLOOD_TYPE_B_NEGATIVE = 4;
  BLOOD_TYPE_AB_POSITIVE = 5;
  BLOOD_TYPE_AB_NEGATIVE = 6;
  BLOOD_TYPE_O_POSITIVE = 7;
  BLOOD_TYPE_O_NEGATIVE = 8;
}

// 中医体质类型枚举
enum ConstitutionType {
  CONSTITUTION_TYPE_UNSPECIFIED = 0;
  CONSTITUTION_TYPE_BALANCED = 1;     // 平和质
  CONSTITUTION_TYPE_QI_DEFICIENCY = 2;    // 气虚质
  CONSTITUTION_TYPE_YANG_DEFICIENCY = 3;  // 阳虚质
  CONSTITUTION_TYPE_YIN_DEFICIENCY = 4;   // 阴虚质
  CONSTITUTION_TYPE_PHLEGM_DAMPNESS = 5;  // 痰湿质
  CONSTITUTION_TYPE_DAMP_HEAT = 6;        // 湿热质
  CONSTITUTION_TYPE_BLOOD_STASIS = 7;     // 血瘀质
  CONSTITUTION_TYPE_QI_DEPRESSION = 8;    // 气郁质
  CONSTITUTION_TYPE_SPECIAL = 9;          // 特禀质
}

// 数据共享级别枚举
enum DataSharingLevel {
  DATA_SHARING_LEVEL_UNSPECIFIED = 0;
  DATA_SHARING_LEVEL_NONE = 1;         // 不共享
  DATA_SHARING_LEVEL_ANONYMOUS = 2;    // 匿名共享
  DATA_SHARING_LEVEL_RESTRICTED = 3;   // 受限共享
  DATA_SHARING_LEVEL_FULL = 4;         // 完全共享
}

// 身份验证类型枚举
enum VerificationType {
  VERIFICATION_TYPE_UNSPECIFIED = 0;
  VERIFICATION_TYPE_PASSWORD = 1;      // 密码
  VERIFICATION_TYPE_SMS_CODE = 2;      // 短信验证码
  VERIFICATION_TYPE_EMAIL_CODE = 3;    // 邮箱验证码
  VERIFICATION_TYPE_BIOMETRIC = 4;     // 生物识别
  VERIFICATION_TYPE_TOTP = 5;          // 基于时间的一次性密码
} 