[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "user-service"
version = "0.1.0"
description = "索克生活用户服务 - 提供用户认证、授权和用户数据管理功能"
readme = "README.md"
requires-python = ">=3.13.3"
license = "MIT"
authors = [
    {name = "Suoke Life Team", email = "dev@suokelife.com"},
]
keywords = ["user-service", "authentication", "fastapi", "microservice"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Framework :: FastAPI",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]

dependencies = [
    # Web框架
    "fastapi>=0.108.0",
    "uvicorn[standard]>=0.25.0",
    "pydantic>=2.6.0",
    "pydantic-settings>=2.2.0",
    
    # gRPC - 暂时注释，等待 Python 3.13 兼容版本
    # "grpcio>=1.62.0",
    # "grpcio-tools>=1.62.0",
    # "protobuf>=4.25.0",
    
    # 数据库
    "aiosqlite>=0.20.0",
    # "asyncpg>=0.30.0",  # 暂时注释，等待 Python 3.13 兼容版本
    "sqlalchemy>=2.0.27",
    "alembic>=1.13.0",
    
    # 缓存
    "redis>=5.0.0",
    "aioredis>=2.0.0",
    
    # 认证和安全
    "passlib[bcrypt]>=1.7.4",
    "pyjwt>=2.8.0",
    "cryptography>=42.0.0",
    "python-multipart>=0.0.7",
    
    # 数据验证
    "email-validator>=2.1.0",
    "marshmallow>=3.20.0",
    
    # HTTP客户端
    "httpx>=0.27.0",
    "aiohttp>=3.9.0",
    
    # 日志和监控
    "structlog>=24.1.0",
    "prometheus-client>=0.20.0",
    
    # 配置管理
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0.0",
    
    # 其他工具
    "click>=8.1.0",
    "python-dateutil>=2.8.0",
    "pytz>=2024.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "faker>=20.0.0",
    "black>=23.12.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "types-passlib>=1.7.7.13",
    "types-aiofiles>=23.2.0.0",
    "ruff>=0.1.9",
]

test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "faker>=20.0.0",
    "httpx>=0.26.0",
]

[project.scripts]
user-service = "user_service.main:main"

[project.urls]
Homepage = "https://github.com/suokelife/suoke_life"
Documentation = "https://docs.suokelife.com/user-service"
Repository = "https://github.com/suokelife/suoke_life.git"
Issues = "https://github.com/suokelife/suoke_life/issues"

[tool.hatch.build.targets.wheel]
packages = ["user_service"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "faker>=20.0.0",
    "black>=23.12.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "types-passlib>=1.7.7.13",
    "types-aiofiles>=23.2.0.0",
    "ruff>=0.1.9",
]

# 配置国内镜像源
index-url = "https://pypi.tuna.tsinghua.edu.cn/simple"
extra-index-url = [
    "https://mirrors.aliyun.com/pypi/simple/",
    "https://pypi.douban.com/simple/",
]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["user_service"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["test"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["user_service"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"test_*.py" = ["B011"]