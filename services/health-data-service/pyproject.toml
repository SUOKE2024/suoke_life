[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[project]
name = "health-data-service"
version = "1.0.0"
description = "索克生活健康数据服务 - 提供健康数据管理、处理和分析功能"
readme = "README.md"
authors = ["Suoke Life Team <dev@suoke.life>"]
maintainers = [
    {name = "Song Xu", email = "song.xu@icloud.com"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Healthcare Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Framework :: FastAPI",
    "Framework :: AsyncIO",
]
requires-python = ">=3.13.3"
dependencies = [
    # Web框架和API
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "gunicorn>=21.2.0",
    # 数据验证和序列化
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    # 异步和网络
    "httpx>=0.25.2",
    "aiohttp>=3.9.1",
    # 数据库
    "sqlalchemy>=2.0.25",
    "asyncpg>=0.29.0",
    "psycopg2-binary>=2.9.9",
    "alembic>=1.13.1",
    # 缓存
    "redis>=5.0.1",
    "aioredis>=2.0.1",
    # 数据处理
    "pandas>=2.1.4",
    "numpy>=1.26.3",
    # 安全和认证
    "bcrypt>=4.1.2",
    "cryptography>=41.0.7",
    "passlib>=1.7.4",
    "pyjwt>=2.8.0,<2.9.0",
    "python-jose[cryptography]>=3.3.0",
    # 配置和环境
    "python-dotenv>=1.0.0",
    "python-multipart>=0.0.6",
    "click>=8.1.7",
    "pyyaml>=6.0.1",
    # 日志和监控
    "loguru>=0.7.2",
    "prometheus-client>=0.19.0",
    # gRPC支持
    "grpcio>=1.59.3",
    "grpcio-tools>=1.59.3",
    "protobuf>=4.25.1",
    # 异步任务
    "celery[redis]>=5.3.4",
    # 时间处理
    "python-dateutil>=2.8.2",
    # 数据验证
    "marshmallow>=3.20.1",
    # 性能和优化
    "orjson>=3.9.10",
    "tenacity>=8.2.3",
    # 工具库
    "attrs>=23.1.0",
    # 异步支持
    "uvloop>=0.19.0 ; sys_platform != 'win32'",
    "greenlet>=3.2.2",
    # 类型检查
    "typing-extensions>=4.8.0",
]

[dependency-groups]
dev = [
    # 测试框架
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "factory-boy>=3.3.0",
    
    # 代码质量工具
    "ruff>=0.1.6",
    "mypy>=1.7.1",
    "pre-commit>=3.5.0",
    
    # 开发工具
    "ipython>=8.17.0",
]

test = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.3.0",
    "factory-boy>=3.3.0",
]

monitoring = [
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-exporter-otlp>=1.21.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0",
    "opentelemetry-instrumentation-redis>=0.42b0",
    "opentelemetry-instrumentation-sqlalchemy>=0.42b0",
]

ml = [
    # 暂时移除不兼容 Python 3.13 的包
    # "tensorflow>=2.13.0",
    # "torch>=2.1.0",
    # "transformers>=4.35.0",
]

docs = [
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
    "myst-parser>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/SUOKE2024/suoke_life"
Documentation = "https://github.com/SUOKE2024/suoke_life/blob/main/README.md"
Repository = "https://github.com/SUOKE2024/suoke_life"
"Bug Tracker" = "https://github.com/SUOKE2024/suoke_life/issues"

[project.scripts]
health-data-service = "health_data_service.cmd.server:cli"

[tool.setuptools.packages.find]
where = ["."]
include = ["health_data_service*"]

# Ruff 配置
[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "S",   # flake8-bandit
    "T20", # flake8-print
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "S101",  # use of assert
    "S104",  # hardcoded bind all interfaces
    "S108",  # probable insecure usage of temp file/directory
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["S101", "B011", "T20"]
"scripts/*" = ["T20"]

[tool.ruff.lint.isort]
known-first-party = ["health_data_service"]
force-single-line = true

# MyPy 配置
[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "librosa.*",
    "soundfile.*",
    "cv2.*",
    "grpc.*",
    "redis.*",
    "aioredis.*",
    "prometheus_client.*",
    "scipy.*",
    "sklearn.*",
    "onnxruntime.*",
    "celery.*",
    "kombu.*",
    "yoyo.*",
    "prophet.*",
    "plotly.*",
]
ignore_missing_imports = true

# Pytest 配置
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --tb=short"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage 配置
[tool.coverage.run]
source = ["health_data_service"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]


