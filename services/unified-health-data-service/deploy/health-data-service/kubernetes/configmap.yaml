apiVersion: v1
kind: ConfigMap
metadata:
  name: health-data-service-config
  namespace: health-data
  labels:
    app.kubernetes.io/name: health-data-service
    app.kubernetes.io/component: configmap
    app.kubernetes.io/part-of: suoke-life
data:
  # API配置
  API_HOST: "0.0.0.0"
  API_PORT: "8000"
  API_GRPC_PORT: "50051"
  API_WORKERS: "4"
  API_DEBUG: "false"
  
  # 数据库配置
  DATABASE_POOL_SIZE: "20"
  DATABASE_MAX_OVERFLOW: "30"
  DATABASE_POOL_TIMEOUT: "30"
  DATABASE_POOL_RECYCLE: "3600"
  
  # Redis配置
  REDIS_POOL_SIZE: "10"
  REDIS_TIMEOUT: "5"
  
  # 日志配置
  LOG_LEVEL: "INFO"
  LOG_FORMAT: "json"
  LOG_FILE: "/app/logs/health_data_service.log"
  
  # 监控配置
  ENABLE_METRICS: "true"
  METRICS_PORT: "9090"
  
  # 数据处理配置
  PIPELINE_ENABLED: "true"
  PIPELINE_WORKERS: "2"
  PIPELINE_TIMEOUT: "30"
  
  # 缓存配置
  CACHE_TTL: "3600"
  CACHE_PREFIX: "health_data"
  
  # JWT配置
  JWT_ALGORITHM: "HS256"
  JWT_ACCESS_TOKEN_EXPIRE_MINUTES: "30"
  JWT_REFRESH_TOKEN_EXPIRE_DAYS: "7"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: health-data-service-nginx-config
  namespace: health-data
  labels:
    app.kubernetes.io/name: health-data-service
    app.kubernetes.io/component: nginx-config
    app.kubernetes.io/part-of: suoke-life
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # 日志格式
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

        access_log /var/log/nginx/access.log main;

        # 基本配置
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 100M;

        # Gzip压缩
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

        # 上游服务器
        upstream health_data_service {
            least_conn;
            server health-data-service:8000 max_fails=3 fail_timeout=30s;
        }

        upstream health_data_grpc {
            least_conn;
            server health-data-service:50051 max_fails=3 fail_timeout=30s;
        }

        # HTTP服务器
        server {
            listen 80;
            server_name _;

            # 健康检查
            location /nginx-health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }

            # API代理
            location /api/ {
                proxy_pass http://health_data_service/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
            }

            # gRPC代理
            location /grpc/ {
                grpc_pass grpc://health_data_grpc;
                grpc_set_header Host $host;
                grpc_set_header X-Real-IP $remote_addr;
                grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                grpc_set_header X-Forwarded-Proto $scheme;
            }

            # 健康检查代理
            location /health {
                proxy_pass http://health_data_service/health;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # 指标代理
            location /metrics {
                proxy_pass http://health_data_service/metrics;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
    } 