[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "suoke-message-bus"
version = "0.1.0"
description = "索克生活消息总线服务 - 负责系统间事件传递和通知的分布式消息中间件"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "Suoke Life Team", email = "dev@suokelife.com" }
]
maintainers = [
    { name = "Suoke Life Team", email = "dev@suokelife.com" }
]
keywords = ["message-bus", "microservices", "grpc", "kafka", "redis", "health-management"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Healthcare Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
    "Topic :: Communications",
]
requires-python = ">=3.13.3"
dependencies = [
    # Core gRPC and messaging
    "grpcio>=1.60.0",
    "grpcio-tools>=1.60.0", 
    "grpcio-health-checking>=1.60.0",
    "grpcio-reflection>=1.60.0",
    "protobuf>=4.25.0",
    
    # Async messaging
    "aiokafka>=0.10.0",
    "aioredis>=2.0.1",
    "aiohttp>=3.9.1",
    
    # Data validation and configuration
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "PyYAML>=6.0.1",
    
    # Security
    "PyJWT>=2.8.0",
    "cryptography>=41.0.7",
    
    # Monitoring and observability
    "prometheus-client>=0.19.0",
    "opentelemetry-api>=1.22.0",
    "opentelemetry-sdk>=1.22.0",
    "opentelemetry-exporter-otlp>=1.22.0",
    "structlog>=23.2.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "coverage[toml]>=7.4.0",
    
    # Code quality
    "ruff>=0.1.9",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    
    # Development tools
    "python-dotenv>=1.0.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.23.0", 
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "coverage[toml]>=7.4.0",
]

[project.urls]
Homepage = "https://github.com/SuokeLife/suoke_life"
Documentation = "https://docs.suokelife.com/services/message-bus"
Repository = "https://github.com/SuokeLife/suoke_life"
Issues = "https://github.com/SuokeLife/suoke_life/issues"
Changelog = "https://github.com/SuokeLife/suoke_life/blob/main/CHANGELOG.md"

[project.scripts]
message-bus = "message_bus.main:main"

[tool.hatch.build.targets.wheel]
packages = ["message_bus"]

[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"test_*.py" = ["S101"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.coverage.run]
source = ["message_bus"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.pytest.ini_options]
testpaths = ["test"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=message_bus",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[dependency-groups]
dev = [
    "mypy>=1.15.0",
]
