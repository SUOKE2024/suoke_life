apiVersion: apps/v1
kind: Deployment
metadata:
  name: message-bus
  namespace: suoke-life
  labels:
    app: message-bus
    component: messagebus
spec:
  replicas: 2
  selector:
    matchLabels:
      app: message-bus
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: message-bus
        component: messagebus
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: message-bus
        image: ${REGISTRY_URL}/suoke-life/message-bus:${IMAGE_TAG}
        imagePullPolicy: Always
        ports:
        - name: grpc
          containerPort: 50051
        - name: metrics
          containerPort: 8000
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: message-bus-config
              key: environment
        - name: KAFKA__BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: message-bus-config
              key: kafka_bootstrap_servers
        - name: REDIS__HOST
          valueFrom:
            configMapKeyRef:
              name: message-bus-config
              key: redis_host
        - name: REDIS__PORT
          valueFrom:
            configMapKeyRef:
              name: message-bus-config
              key: redis_port
        - name: REDIS__PASSWORD
          valueFrom:
            secretKeyRef:
              name: message-bus-secrets
              key: redis_password
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        readinessProbe:
          tcpSocket:
            port: 50051
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 50051
          initialDelaySeconds: 15
          periodSeconds: 20
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: logs-volume
          mountPath: /app/logs
      volumes:
      - name: config-volume
        configMap:
          name: message-bus-config
      - name: logs-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: message-bus
  namespace: suoke-life
  labels:
    app: message-bus
    component: messagebus
spec:
  type: ClusterIP
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
  - name: metrics
    port: 8000
    targetPort: 8000
  selector:
    app: message-bus
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: message-bus-config
  namespace: suoke-life
data:
  environment: "production"
  kafka_bootstrap_servers: "kafka-0.kafka-headless.kafka.svc.cluster.local:9092,kafka-1.kafka-headless.kafka.svc.cluster.local:9092,kafka-2.kafka-headless.kafka.svc.cluster.local:9092"
  redis_host: "redis-master.redis.svc.cluster.local"
  redis_port: "6379"
---
apiVersion: v1
kind: Secret
metadata:
  name: message-bus-secrets
  namespace: suoke-life
type: Opaque
data:
  redis_password: ${REDIS_PASSWORD_BASE64}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: message-bus
  namespace: suoke-life
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: message-bus
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80 