# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import agent_service_pb2 as agent__service__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in agent_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class AgentNetworkServiceStub(object):
    """智能体网络服务
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.HealthCheck = channel.unary_unary(
                '/a2a.agent.v1.AgentNetworkService/HealthCheck',
                request_serializer=agent__service__pb2.HealthCheckRequest.SerializeToString,
                response_deserializer=agent__service__pb2.HealthCheckResponse.FromString,
                _registered_method=True)
        self.ListAgents = channel.unary_unary(
                '/a2a.agent.v1.AgentNetworkService/ListAgents',
                request_serializer=agent__service__pb2.ListAgentsRequest.SerializeToString,
                response_deserializer=agent__service__pb2.ListAgentsResponse.FromString,
                _registered_method=True)
        self.GetAgent = channel.unary_unary(
                '/a2a.agent.v1.AgentNetworkService/GetAgent',
                request_serializer=agent__service__pb2.GetAgentRequest.SerializeToString,
                response_deserializer=agent__service__pb2.GetAgentResponse.FromString,
                _registered_method=True)
        self.GetAgentMetrics = channel.unary_unary(
                '/a2a.agent.v1.AgentNetworkService/GetAgentMetrics',
                request_serializer=agent__service__pb2.GetAgentMetricsRequest.SerializeToString,
                response_deserializer=agent__service__pb2.GetAgentMetricsResponse.FromString,
                _registered_method=True)
        self.ExecuteAgentAction = channel.unary_unary(
                '/a2a.agent.v1.AgentNetworkService/ExecuteAgentAction',
                request_serializer=agent__service__pb2.ExecuteAgentActionRequest.SerializeToString,
                response_deserializer=agent__service__pb2.ExecuteAgentActionResponse.FromString,
                _registered_method=True)
        self.ListWorkflows = channel.unary_unary(
                '/a2a.agent.v1.AgentNetworkService/ListWorkflows',
                request_serializer=agent__service__pb2.ListWorkflowsRequest.SerializeToString,
                response_deserializer=agent__service__pb2.ListWorkflowsResponse.FromString,
                _registered_method=True)
        self.ExecuteWorkflow = channel.unary_unary(
                '/a2a.agent.v1.AgentNetworkService/ExecuteWorkflow',
                request_serializer=agent__service__pb2.ExecuteWorkflowRequest.SerializeToString,
                response_deserializer=agent__service__pb2.ExecuteWorkflowResponse.FromString,
                _registered_method=True)
        self.GetWorkflowExecution = channel.unary_unary(
                '/a2a.agent.v1.AgentNetworkService/GetWorkflowExecution',
                request_serializer=agent__service__pb2.GetWorkflowExecutionRequest.SerializeToString,
                response_deserializer=agent__service__pb2.GetWorkflowExecutionResponse.FromString,
                _registered_method=True)
        self.CancelWorkflowExecution = channel.unary_unary(
                '/a2a.agent.v1.AgentNetworkService/CancelWorkflowExecution',
                request_serializer=agent__service__pb2.CancelWorkflowExecutionRequest.SerializeToString,
                response_deserializer=agent__service__pb2.CancelWorkflowExecutionResponse.FromString,
                _registered_method=True)
        self.GetWorkflowProgress = channel.unary_unary(
                '/a2a.agent.v1.AgentNetworkService/GetWorkflowProgress',
                request_serializer=agent__service__pb2.GetWorkflowProgressRequest.SerializeToString,
                response_deserializer=agent__service__pb2.GetWorkflowProgressResponse.FromString,
                _registered_method=True)
        self.GetNetworkStatus = channel.unary_unary(
                '/a2a.agent.v1.AgentNetworkService/GetNetworkStatus',
                request_serializer=agent__service__pb2.GetNetworkStatusRequest.SerializeToString,
                response_deserializer=agent__service__pb2.GetNetworkStatusResponse.FromString,
                _registered_method=True)
        self.StreamAgentEvents = channel.unary_stream(
                '/a2a.agent.v1.AgentNetworkService/StreamAgentEvents',
                request_serializer=agent__service__pb2.StreamAgentEventsRequest.SerializeToString,
                response_deserializer=agent__service__pb2.AgentEvent.FromString,
                _registered_method=True)
        self.StreamWorkflowEvents = channel.unary_stream(
                '/a2a.agent.v1.AgentNetworkService/StreamWorkflowEvents',
                request_serializer=agent__service__pb2.StreamWorkflowEventsRequest.SerializeToString,
                response_deserializer=agent__service__pb2.WorkflowEvent.FromString,
                _registered_method=True)


class AgentNetworkServiceServicer(object):
    """智能体网络服务
    """

    def HealthCheck(self, request, context):
        """健康检查
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAgents(self, request, context):
        """智能体管理
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAgent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAgentMetrics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteAgentAction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListWorkflows(self, request, context):
        """工作流管理
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteWorkflow(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWorkflowExecution(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelWorkflowExecution(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWorkflowProgress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNetworkStatus(self, request, context):
        """网络状态
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamAgentEvents(self, request, context):
        """实时流
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamWorkflowEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AgentNetworkServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'HealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=agent__service__pb2.HealthCheckRequest.FromString,
                    response_serializer=agent__service__pb2.HealthCheckResponse.SerializeToString,
            ),
            'ListAgents': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAgents,
                    request_deserializer=agent__service__pb2.ListAgentsRequest.FromString,
                    response_serializer=agent__service__pb2.ListAgentsResponse.SerializeToString,
            ),
            'GetAgent': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAgent,
                    request_deserializer=agent__service__pb2.GetAgentRequest.FromString,
                    response_serializer=agent__service__pb2.GetAgentResponse.SerializeToString,
            ),
            'GetAgentMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAgentMetrics,
                    request_deserializer=agent__service__pb2.GetAgentMetricsRequest.FromString,
                    response_serializer=agent__service__pb2.GetAgentMetricsResponse.SerializeToString,
            ),
            'ExecuteAgentAction': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteAgentAction,
                    request_deserializer=agent__service__pb2.ExecuteAgentActionRequest.FromString,
                    response_serializer=agent__service__pb2.ExecuteAgentActionResponse.SerializeToString,
            ),
            'ListWorkflows': grpc.unary_unary_rpc_method_handler(
                    servicer.ListWorkflows,
                    request_deserializer=agent__service__pb2.ListWorkflowsRequest.FromString,
                    response_serializer=agent__service__pb2.ListWorkflowsResponse.SerializeToString,
            ),
            'ExecuteWorkflow': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteWorkflow,
                    request_deserializer=agent__service__pb2.ExecuteWorkflowRequest.FromString,
                    response_serializer=agent__service__pb2.ExecuteWorkflowResponse.SerializeToString,
            ),
            'GetWorkflowExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWorkflowExecution,
                    request_deserializer=agent__service__pb2.GetWorkflowExecutionRequest.FromString,
                    response_serializer=agent__service__pb2.GetWorkflowExecutionResponse.SerializeToString,
            ),
            'CancelWorkflowExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelWorkflowExecution,
                    request_deserializer=agent__service__pb2.CancelWorkflowExecutionRequest.FromString,
                    response_serializer=agent__service__pb2.CancelWorkflowExecutionResponse.SerializeToString,
            ),
            'GetWorkflowProgress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWorkflowProgress,
                    request_deserializer=agent__service__pb2.GetWorkflowProgressRequest.FromString,
                    response_serializer=agent__service__pb2.GetWorkflowProgressResponse.SerializeToString,
            ),
            'GetNetworkStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNetworkStatus,
                    request_deserializer=agent__service__pb2.GetNetworkStatusRequest.FromString,
                    response_serializer=agent__service__pb2.GetNetworkStatusResponse.SerializeToString,
            ),
            'StreamAgentEvents': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamAgentEvents,
                    request_deserializer=agent__service__pb2.StreamAgentEventsRequest.FromString,
                    response_serializer=agent__service__pb2.AgentEvent.SerializeToString,
            ),
            'StreamWorkflowEvents': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamWorkflowEvents,
                    request_deserializer=agent__service__pb2.StreamWorkflowEventsRequest.FromString,
                    response_serializer=agent__service__pb2.WorkflowEvent.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'a2a.agent.v1.AgentNetworkService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('a2a.agent.v1.AgentNetworkService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AgentNetworkService(object):
    """智能体网络服务
    """

    @staticmethod
    def HealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/a2a.agent.v1.AgentNetworkService/HealthCheck',
            agent__service__pb2.HealthCheckRequest.SerializeToString,
            agent__service__pb2.HealthCheckResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListAgents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/a2a.agent.v1.AgentNetworkService/ListAgents',
            agent__service__pb2.ListAgentsRequest.SerializeToString,
            agent__service__pb2.ListAgentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAgent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/a2a.agent.v1.AgentNetworkService/GetAgent',
            agent__service__pb2.GetAgentRequest.SerializeToString,
            agent__service__pb2.GetAgentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAgentMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/a2a.agent.v1.AgentNetworkService/GetAgentMetrics',
            agent__service__pb2.GetAgentMetricsRequest.SerializeToString,
            agent__service__pb2.GetAgentMetricsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExecuteAgentAction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/a2a.agent.v1.AgentNetworkService/ExecuteAgentAction',
            agent__service__pb2.ExecuteAgentActionRequest.SerializeToString,
            agent__service__pb2.ExecuteAgentActionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListWorkflows(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/a2a.agent.v1.AgentNetworkService/ListWorkflows',
            agent__service__pb2.ListWorkflowsRequest.SerializeToString,
            agent__service__pb2.ListWorkflowsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExecuteWorkflow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/a2a.agent.v1.AgentNetworkService/ExecuteWorkflow',
            agent__service__pb2.ExecuteWorkflowRequest.SerializeToString,
            agent__service__pb2.ExecuteWorkflowResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetWorkflowExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/a2a.agent.v1.AgentNetworkService/GetWorkflowExecution',
            agent__service__pb2.GetWorkflowExecutionRequest.SerializeToString,
            agent__service__pb2.GetWorkflowExecutionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelWorkflowExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/a2a.agent.v1.AgentNetworkService/CancelWorkflowExecution',
            agent__service__pb2.CancelWorkflowExecutionRequest.SerializeToString,
            agent__service__pb2.CancelWorkflowExecutionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetWorkflowProgress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/a2a.agent.v1.AgentNetworkService/GetWorkflowProgress',
            agent__service__pb2.GetWorkflowProgressRequest.SerializeToString,
            agent__service__pb2.GetWorkflowProgressResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetNetworkStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/a2a.agent.v1.AgentNetworkService/GetNetworkStatus',
            agent__service__pb2.GetNetworkStatusRequest.SerializeToString,
            agent__service__pb2.GetNetworkStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StreamAgentEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/a2a.agent.v1.AgentNetworkService/StreamAgentEvents',
            agent__service__pb2.StreamAgentEventsRequest.SerializeToString,
            agent__service__pb2.AgentEvent.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StreamWorkflowEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/a2a.agent.v1.AgentNetworkService/StreamWorkflowEvents',
            agent__service__pb2.StreamWorkflowEventsRequest.SerializeToString,
            agent__service__pb2.WorkflowEvent.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
