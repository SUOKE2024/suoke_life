# 索克生活五诊系统统一配置文件
# Five Diagnosis System Configuration

# 系统基本信息
system:
  name: "索克生活五诊系统"
  version: "1.0.0"
  description: "传统中医五诊合参智能诊断系统"
  environment: "production"  # development, staging, production

# 服务配置
services:
  # 算诊服务 - 核心创新
  calculation:
    name: "calculation-service"
    display_name: "算诊服务"
    port: 8003
    host: "0.0.0.0"
    path_prefix: "/api/v1/calculation"
    description: "中医算诊智能分析服务"
    features:
      - "子午流注分析"
      - "八字体质分析"
      - "八卦配属分析"
      - "五运六气分析"
      - "综合算诊"
    technology:
      language: "Python 3.11"
      framework: "FastAPI"
      database: "Redis"
    health_check: "/ping"
    metrics: "/metrics"
    docs: "/docs"
    
  # 望诊服务
  look:
    name: "look-service"
    display_name: "望诊服务"
    port: 8080
    host: "0.0.0.0"
    path_prefix: "/api/v1/look"
    description: "基于计算机视觉的中医望诊分析"
    features:
      - "面部诊断"
      - "舌诊分析"
      - "体态评估"
      - "皮肤诊断"
    technology:
      language: "Python 3.13.3"
      framework: "FastAPI"
      ai_models: "OpenCV, ONNX"
      database: "PostgreSQL, MongoDB"
    health_check: "/health"
    metrics: "/metrics"
    docs: "/docs"
    
  # 闻诊服务
  listen:
    name: "listen-service"
    display_name: "闻诊服务"
    port: 8000
    host: "0.0.0.0"
    path_prefix: "/api/v1/listen"
    description: "基于AI的中医闻诊音频分析"
    features:
      - "语音分析"
      - "呼吸音诊断"
      - "咳嗽分析"
      - "心音分析"
    technology:
      language: "Python 3.13.3"
      framework: "FastAPI"
      ai_models: "音频处理, 机器学习"
      protocols: "REST, gRPC"
    health_check: "/health"
    metrics: "/stats"
    docs: "/docs"
    
  # 问诊服务
  inquiry:
    name: "inquiry-service"
    display_name: "问诊服务"
    port: 8001
    host: "0.0.0.0"
    path_prefix: "/api/v1/inquiry"
    description: "智能问诊对话和症状分析"
    features:
      - "智能问诊"
      - "症状提取"
      - "证型匹配"
      - "风险评估"
    technology:
      language: "Python 3.13.3"
      framework: "FastAPI"
      ai_models: "NLP, 知识图谱"
      protocols: "gRPC"
    health_check: "/health"
    metrics: "/metrics"
    docs: "/docs"
    
  # 切诊服务
  palpation:
    name: "palpation-service"
    display_name: "切诊服务"
    port: 8002
    host: "0.0.0.0"
    path_prefix: "/api/v1/palpation"
    description: "基于传感器的中医切诊分析"
    features:
      - "脉诊分析"
      - "触觉诊断"
      - "压痛点检测"
      - "体征监测"
    technology:
      language: "Python 3.13.3"
      framework: "FastAPI"
      hardware: "多模态传感器"
      database: "PostgreSQL, Redis"
    health_check: "/health"
    metrics: "/metrics"
    docs: "/docs"

# 网关配置
gateway:
  name: "api-gateway"
  port: 80
  host: "0.0.0.0"
  routes:
    calculation: "/calculation"
    look: "/look"
    listen: "/listen"
    inquiry: "/inquiry"
    palpation: "/palpation"
  middleware:
    - "authentication"
    - "rate_limiting"
    - "logging"
    - "cors"
  load_balancer: "round_robin"

# 数据库配置
databases:
  postgresql:
    host: "localhost"
    port: 5432
    databases:
      look_service: "look_service_db"
      palpation_service: "palpation_service_db"
    user: "suoke_user"
    password: "${POSTGRES_PASSWORD}"
    
  redis:
    host: "localhost"
    port: 6379
    databases:
      calculation_cache: 0
      session_cache: 1
      metrics_cache: 2
    password: "${REDIS_PASSWORD}"
    
  mongodb:
    host: "localhost"
    port: 27017
    database: "suoke_knowledge_base"
    user: "suoke_user"
    password: "${MONGO_PASSWORD}"

# 消息队列配置
message_queue:
  type: "rabbitmq"  # rabbitmq, kafka, redis
  host: "localhost"
  port: 5672
  user: "suoke_user"
  password: "${MQ_PASSWORD}"
  exchanges:
    diagnosis_events: "diagnosis.events"
    health_alerts: "health.alerts"
  queues:
    five_diagnosis_fusion: "five.diagnosis.fusion"
    notification_queue: "notifications"

# 监控配置
monitoring:
  prometheus:
    enabled: true
    port: 9090
    scrape_interval: "15s"
    
  grafana:
    enabled: true
    port: 3000
    dashboards:
      - "five_diagnosis_overview"
      - "service_performance"
      - "health_metrics"
      
  logging:
    level: "INFO"  # DEBUG, INFO, WARNING, ERROR
    format: "json"  # json, console, plain
    output: "stdout"  # stdout, file, both
    file_path: "/var/log/suoke/"
    
  tracing:
    enabled: true
    jaeger_endpoint: "http://localhost:14268/api/traces"
    sample_rate: 0.1

# 安全配置
security:
  authentication:
    enabled: true
    method: "jwt"  # jwt, oauth2, basic
    secret_key: "${JWT_SECRET_KEY}"
    algorithm: "HS256"
    expire_minutes: 30
    
  authorization:
    enabled: true
    rbac: true
    permissions:
      - "diagnosis:read"
      - "diagnosis:write"
      - "admin:manage"
      
  encryption:
    enabled: true
    algorithm: "AES-256-GCM"
    key: "${ENCRYPTION_KEY}"
    
  rate_limiting:
    enabled: true
    requests_per_minute: 100
    burst_size: 20

# 缓存配置
cache:
  enabled: true
  backend: "redis"  # memory, redis, memcached
  ttl: 3600  # seconds
  max_size: "1GB"
  strategies:
    calculation_results: 7200  # 2 hours
    image_analysis: 1800      # 30 minutes
    audio_analysis: 3600      # 1 hour
    session_data: 1800        # 30 minutes

# 性能配置
performance:
  # 并发配置
  concurrency:
    max_workers: 10
    max_connections: 1000
    connection_timeout: 30
    
  # 资源限制
  resources:
    memory_limit: "2GB"
    cpu_limit: "2.0"
    disk_limit: "10GB"
    
  # 响应时间要求
  response_time:
    calculation_service: 2000  # ms
    look_service: 3000        # ms
    listen_service: 5000      # ms
    inquiry_service: 1000     # ms
    palpation_service: 1000   # ms

# 部署配置
deployment:
  # 容器配置
  docker:
    registry: "registry.suoke.life"
    namespace: "suoke"
    image_tag: "latest"
    
  # Kubernetes配置
  kubernetes:
    namespace: "suoke-diagnosis"
    replicas: 3
    resources:
      requests:
        memory: "512Mi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "2000m"
        
  # 健康检查
  health_check:
    enabled: true
    interval: 30
    timeout: 10
    retries: 3
    start_period: 40

# 业务配置
business:
  # 诊断配置
  diagnosis:
    confidence_threshold: 0.8
    max_symptoms: 10
    session_timeout: 1800  # 30 minutes
    
  # 算诊特殊配置
  calculation:
    enable_ziwu_analysis: true
    enable_constitution_analysis: true
    enable_bagua_analysis: true
    enable_wuyun_analysis: true
    time_zone: "Asia/Shanghai"
    
  # 数据保留策略
  data_retention:
    diagnosis_records: "1 year"
    session_logs: "3 months"
    metrics_data: "6 months"
    cache_data: "1 week"

# 集成配置
integrations:
  # 外部API
  external_apis:
    weather_service: "https://api.weather.com"
    lunar_calendar: "https://api.lunar-calendar.com"
    
  # 第三方服务
  third_party:
    sms_service: "aliyun"
    email_service: "sendgrid"
    storage_service: "oss"
    
  # 医疗设备
  medical_devices:
    pulse_sensor: "suoke_wp100"
    temperature_sensor: "suoke_temp01"
    pressure_sensor: "suoke_press01"

# 环境变量映射
environment_variables:
  # 数据库密码
  POSTGRES_PASSWORD: "postgres_password"
  REDIS_PASSWORD: "redis_password"
  MONGO_PASSWORD: "mongo_password"
  MQ_PASSWORD: "mq_password"
  
  # 安全密钥
  JWT_SECRET_KEY: "jwt_secret_key"
  ENCRYPTION_KEY: "encryption_key"
  
  # API密钥
  WEATHER_API_KEY: "weather_api_key"
  SMS_API_KEY: "sms_api_key"
  EMAIL_API_KEY: "email_api_key"

# 开发配置
development:
  debug: true
  hot_reload: true
  mock_data: true
  test_mode: false
  
# 生产配置
production:
  debug: false
  hot_reload: false
  mock_data: false
  ssl_enabled: true
  backup_enabled: true
  
# 备份配置
backup:
  enabled: true
  schedule: "0 2 * * *"  # 每天凌晨2点
  retention: "30 days"
  storage: "oss"
  encryption: true 