apiVersion: v1
kind: ConfigMap
metadata:
  name: look-service-config
  namespace: suoke-diagnostic
  labels:
    app: look-service
    part-of: suoke-diagnostic
data:
  config.yaml: |
    server:
      host: "0.0.0.0"
      port: 50053
      debug: false
      grpc:
        max_workers: 10
        max_concurrent_rpcs: 100
        keepalive_time_ms: 7200000
        keepalive_timeout_ms: 20000

    logging:
      level: "INFO"
      format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
      file: "/app/logs/look_service.log"
      max_size_mb: 100
      backup_count: 10
      console: true

    database:
      uri: "sqlite:///app/data/look_service.db"
      pool_size: 5
      max_overflow: 10
      pool_timeout: 30
      pool_recycle: 3600

    models:
      face_analysis:
        path: "/app/models/face_analyzer"
        version: "v1.0.0"
        batch_size: 1
        device: "cpu"
        threshold: 0.7
        input_size: [224, 224]
      
      body_analysis:
        path: "/app/models/body_analyzer"
        version: "v1.0.0"
        batch_size: 1
        device: "cpu"
        threshold: 0.6
        input_size: [384, 384]

    storage:
      image:
        path: "/app/data/images"
        max_size_mb: 10
        allowed_formats: ["jpg", "jpeg", "png"]
        resize_before_save: true
        resize_dimensions: [1024, 1024]
        quality: 85
      
      analysis:
        path: "/app/data/analysis"
        ttl_days: 90

    integration:
      xiaoai_service:
        host: "xiaoai-service.suoke-diagnostic.svc.cluster.local"
        port: 50050
        timeout_ms: 5000
        max_retries: 3
        retry_interval_ms: 1000
        circuit_breaker:
          failure_threshold: 5
          reset_timeout_ms: 30000

    monitoring:
      prometheus:
        enabled: true
        endpoint: "/metrics"
      
      health_check:
        enabled: true
        endpoint: "/health"
      
      tracing:
        enabled: true
        exporter: "jaeger"
        endpoint: "jaeger-collector.observability.svc.cluster.local:14268/api/traces"
        service_name: "look-service"
        sample_rate: 0.1

    security:
      tls:
        enabled: false
      
      authentication:
        required: true
        token_header: "x-api-key"
      
      api_keys:
        internal_services: "${INTERNAL_SERVICE_KEY}"

    rate_limiting:
      enabled: true
      requests_per_minute: 300
      burst: 50

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: look-service
  namespace: suoke-diagnostic
  labels:
    app: look-service
    part-of: suoke-diagnostic
    version: "1.0.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: look-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: look-service
        part-of: suoke-diagnostic
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: look-service
        image: ${REGISTRY_URL}/suoke/look-service:1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: grpc
          containerPort: 50053
        - name: metrics
          containerPort: 9090
        env:
        - name: CONFIG_PATH
          value: "/app/config/config.yaml"
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: INTERNAL_SERVICE_KEY
          valueFrom:
            secretKeyRef:
              name: suoke-internal-keys
              key: look-service-key
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "1"
            memory: "1Gi"
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: data-volume
          mountPath: /app/data
        - name: logs-volume
          mountPath: /app/logs
        - name: models-volume
          mountPath: /app/models
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - |
              import grpc
              from api.grpc import look_service_pb2_grpc, look_service_pb2
              channel = grpc.insecure_channel('localhost:50053')
              stub = look_service_pb2_grpc.LookServiceStub(channel)
              request = look_service_pb2.HealthCheckRequest()
              response = stub.HealthCheck(request, timeout=5)
              assert response.status == look_service_pb2.HealthCheckResponse.SERVING
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - python
            - -c
            - |
              import grpc
              from api.grpc import look_service_pb2_grpc, look_service_pb2
              channel = grpc.insecure_channel('localhost:50053')
              stub = look_service_pb2_grpc.LookServiceStub(channel)
              request = look_service_pb2.HealthCheckRequest()
              response = stub.HealthCheck(request, timeout=2)
              assert response.status == look_service_pb2.HealthCheckResponse.SERVING
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 2
      volumes:
      - name: config-volume
        configMap:
          name: look-service-config
      - name: data-volume
        persistentVolumeClaim:
          claimName: look-service-data-pvc
      - name: logs-volume
        emptyDir: {}
      - name: models-volume
        persistentVolumeClaim:
          claimName: look-service-models-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: look-service
  namespace: suoke-diagnostic
  labels:
    app: look-service
    part-of: suoke-diagnostic
spec:
  selector:
    app: look-service
  ports:
  - name: grpc
    port: 50053
    targetPort: 50053
  - name: metrics
    port: 9090
    targetPort: 9090
  type: ClusterIP

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: look-service-data-pvc
  namespace: suoke-diagnostic
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: look-service-models-pvc
  namespace: suoke-diagnostic
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: look-service-hpa
  namespace: suoke-diagnostic
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: look-service
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: look-service-network-policy
  namespace: suoke-diagnostic
spec:
  podSelector:
    matchLabels:
      app: look-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: suoke-diagnostic
    - namespaceSelector:
        matchLabels:
          name: api-gateway
    ports:
    - protocol: TCP
      port: 50053
    - protocol: TCP
      port: 9090
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: suoke-diagnostic
    - podSelector:
        matchLabels:
          app: xiaoai-service
    ports:
    - protocol: TCP
      port: 50050

---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: look-service-quota
  namespace: suoke-diagnostic
spec:
  hard:
    pods: "10"
    requests.cpu: "4"
    requests.memory: 4Gi
    limits.cpu: "8"
    limits.memory: 8Gi 