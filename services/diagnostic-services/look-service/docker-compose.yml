version: '3.8'

services:
  look-service:
    build:
      context: .
      dockerfile: Dockerfile
    image: suoke/look-service:latest
    container_name: look-service
    restart: unless-stopped
    ports:
      - "50051:50051"  # gRPC服务端口
      - "51051:51051"  # Prometheus指标端口
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
      - ./models:/app/internal/model/weights
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
      - MOCK_MODELS=true
    networks:
      - suoke-network
    healthcheck:
      test: ["CMD", "python", "-c", "import grpc; channel = grpc.insecure_channel('localhost:50051'); stub = grpc.health.v1.health_pb2_grpc.HealthStub(channel); response = stub.Check(grpc.health.v1.health_pb2.HealthCheckRequest(service='look_service.LookService'))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G

  mongodb:
    image: mongo:6.0
    container_name: look-service-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=suoke
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-suokepassword}
    networks:
      - suoke-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/admin -u suoke -p ${MONGO_PASSWORD:-suokepassword} --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  redis:
    image: redis:7.0-alpine
    container_name: look-service-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD:-suokepassword}
    networks:
      - suoke-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: look-service-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./deploy/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - suoke-network
    depends_on:
      - look-service

  grafana:
    image: grafana/grafana:9.5.2
    container_name: look-service-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./deploy/grafana/provisioning:/etc/grafana/provisioning
      - ./deploy/grafana/dashboards:/var/lib/grafana/dashboards
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-suokepassword}
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - suoke-network
    depends_on:
      - prometheus

volumes:
  mongodb-data:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  suoke-network:
    name: suoke-network
    driver: bridge 