# 闻诊服务优化Docker镜像
# 多阶段构建，支持生产环境优化

# 第一阶段：构建阶段
FROM python:3.13.3-slim as builder

# 设置工作目录
WORKDIR /app

# 安装系统依赖
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    cmake \
    pkg-config \
    libsndfile1-dev \
    portaudio19-dev \
    ffmpeg \
    libavcodec-dev \
    libavformat-dev \
    libavutil-dev \
    libswscale-dev \
    libswresample-dev \
    libasound2-dev \
    libpulse-dev \
    libjack-jackd2-dev \
    && rm -rf /var/lib/apt/lists/*

# 复制requirements文件
COPY requirements.txt .

# 创建虚拟环境并安装Python依赖
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# 升级pip并安装依赖
RUN pip install --upgrade pip setuptools wheel
RUN pip install --no-cache-dir -r requirements.txt

# 第二阶段：运行阶段
FROM python:3.13.3-slim as runtime

# 设置标签
LABEL maintainer="Suoke Life Team"
LABEL version="1.0.0"
LABEL description="闻诊服务 - 索克生活健康管理平台"

# 设置环境变量
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONPATH=/app
ENV LISTEN_SERVICE_ENV=production

# 创建非root用户
RUN groupadd -r listen && useradd -r -g listen listen

# 安装运行时依赖
RUN apt-get update && apt-get install -y \
    libsndfile1 \
    portaudio19-dev \
    ffmpeg \
    libasound2 \
    libpulse0 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# 复制虚拟环境
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# 设置工作目录
WORKDIR /app

# 复制应用代码
COPY --chown=listen:listen . .

# 创建必要目录
RUN mkdir -p /app/logs /app/data /app/temp /tmp/listen_service && \
    chown -R listen:listen /app /tmp/listen_service

# 复制配置文件
COPY config/config_optimized.yaml /app/config/config.yaml

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:50052/health || exit 1

# 切换到非root用户
USER listen

# 暴露端口
EXPOSE 50052 9090

# 设置启动命令
CMD ["python", "cmd/server.py", "--config", "/app/config/config.yaml"]

# 第三阶段：开发阶段（可选）
FROM runtime as development

# 切换回root用户安装开发工具
USER root

# 安装开发依赖
RUN pip install --no-cache-dir \
    pytest \
    pytest-asyncio \
    pytest-cov \
    black \
    flake8 \
    mypy \
    ipython \
    jupyter

# 安装调试工具
RUN apt-get update && apt-get install -y \
    vim \
    htop \
    strace \
    gdb \
    && rm -rf /var/lib/apt/lists/*

# 切换回应用用户
USER listen

# 开发环境变量
ENV LISTEN_SERVICE_ENV=development
ENV LISTEN_SERVICE_DEBUG=true

# 开发模式启动命令
CMD ["python", "cmd/server.py", "--config", "/app/config/config.yaml", "--debug"] 