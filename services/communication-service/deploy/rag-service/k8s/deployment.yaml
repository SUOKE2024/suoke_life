apiVersion: apps/v1
kind: Deployment
metadata:
  name: rag-service
  namespace: suoke-ai-ns
  labels:
    app: rag-service
    app.kubernetes.io/part-of: suoke-life
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rag-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: rag-service
        app.kubernetes.io/part-of: suoke-life
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"
    spec:
      containers:
      - name: rag-service
        image: ${IMAGE_REGISTRY}/suoke-life/rag-service:${IMAGE_TAG}
        imagePullPolicy: Always
        command: ["python", "-m", "cmd.server.main"]
        ports:
        - containerPort: 50051
          name: grpc
        - containerPort: 8000
          name: http
        - containerPort: 8081
          name: metrics
        env:
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: openai-credentials
              key: api-key
        - name: MONGODB_URI
          valueFrom:
            configMapKeyRef:
              name: rag-service-config
              key: mongodb-uri
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: rag-service-config
              key: redis-host
        - name: VECTOR_DB_HOST
          valueFrom:
            configMapKeyRef:
              name: rag-service-config
              key: vector-db-host
        - name: LOG_LEVEL
          value: "INFO"
        resources:
          limits:
            cpu: "2"
            memory: "4Gi"
          requests:
            cpu: "500m"
            memory: "1Gi"
        volumeMounts:
        - name: rag-config
          mountPath: /app/config
        - name: rag-data
          mountPath: /app/data
        - name: rag-logs
          mountPath: /app/logs
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 10
      volumes:
      - name: rag-config
        configMap:
          name: rag-service-config
      - name: rag-data
        persistentVolumeClaim:
          claimName: rag-service-data-pvc
      - name: rag-logs
        emptyDir: {}
      nodeSelector:
        nodepool: suoke-ai-np
---
apiVersion: v1
kind: Service
metadata:
  name: rag-service
  namespace: suoke-ai-ns
  labels:
    app: rag-service
    app.kubernetes.io/part-of: suoke-life
spec:
  selector:
    app: rag-service
  ports:
  - port: 50051
    targetPort: grpc
    name: grpc
  - port: 8000
    targetPort: http
    name: http
  - port: 8081
    targetPort: metrics
    name: metrics
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rag-service-config
  namespace: suoke-ai-ns
data:
  mongodb-uri: "mongodb://mongo-service:27017"
  redis-host: "redis-service"
  vector-db-host: "milvus-service"
  default.yaml: |
    service:
      name: rag-service
      version: 0.1.0

    server:
      grpc:
        host: "0.0.0.0"
        port: 50051
        max_workers: 10
        max_message_length: 104857600
      rest:
        host: "0.0.0.0"
        port: 8000
        workers: 4
        cors_origins: ["*"]
        api_prefix: "/api/v1"

    vector_database:
      type: "milvus"
      host: "${VECTOR_DB_HOST}"
      port: 19530
      collection_name: "suoke_knowledge"
      dimension: 768
      distance_metric: "COSINE"
    
    # 其余配置省略...
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rag-service-data-pvc
  namespace: suoke-ai-ns
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: standard
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rag-service-ingress
  namespace: suoke-ai-ns
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
  - host: api.suokelife.com
    http:
      paths:
      - path: /rag(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: rag-service
            port:
              name: http
---
# 基于CPU和内存的自动扩缩容配置
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: rag-service-hpa
  namespace: suoke-ai-ns
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: rag-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
---
# 基于自定义指标的自动扩缩容配置
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: rag-service-custom-hpa
  namespace: suoke-ai-ns
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: rag-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Pods
    pods:
      metric:
        name: rag_request_queue_length
      target:
        type: AverageValue
        averageValue: 10
  - type: Pods
    pods:
      metric:
        name: rag_p95_latency
      target:
        type: AverageValue
        averageValue: 500