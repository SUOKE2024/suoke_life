[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "corn-maze-service"
version = "0.2.0"
description = "Corn Maze Service - 索克生活迷宫探索微服务，提供游戏化健康知识学习体验"
readme = "README.md"
license = { text = "Proprietary" }
authors = [
    { name = "Suoke Life Team", email = "dev@suokelife.com" }
]
maintainers = [
    { name = "Suoke Life Team", email = "dev@suokelife.com" }
]
keywords = ["health", "maze", "tcm", "microservice", "grpc"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Healthcare Industry",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Games/Entertainment :: Puzzle Games",
    "Typing :: Typed",
]
requires-python = ">=3.13.3"

dependencies = [
    # Core web framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    
    # Data validation and settings
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    
    # gRPC
    "grpcio>=1.62.0",
    "grpcio-tools>=1.62.0",
    "grpcio-health-checking>=1.62.0",
    "grpcio-reflection>=1.62.0",
    "protobuf>=4.25.0",
    
    # Configuration
    "pyyaml>=6.0.0",
    "python-dotenv>=1.0.0",
    
    # Database & Storage
    "motor>=3.3.0",
    "pymongo>=4.6.0",
    "redis>=5.0.0",
    "sqlalchemy>=2.0.0",
    "aiosqlite>=0.19.0",
    
    # AI & ML
    "openai>=1.0.0",
    "numpy>=1.24.0",
    "langchain>=0.1.0",
    "langchain-community>=0.0.10",
    
    # Game & Maze Generation
    "networkx>=3.0",
    "matplotlib>=3.7.0",
    
    # Monitoring & Observability
    "prometheus-client>=0.19.0",
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0",
    "opentelemetry-exporter-otlp>=1.20.0",
    "python-logging-loki>=0.3.0",
    "python-json-logger>=2.0.0",
    "structlog>=23.2.0",
    
    # Utilities
    "python-multipart>=0.0.6",
    "aiofiles>=23.0.0",
    "httpx>=0.27.0",
    "tenacity>=8.0.0",
    "retry>=0.9.0",
    "tqdm>=4.65.0",
    "uuid6>=2023.5.0",
    
    # Circuit breaker and service discovery
    "pybreaker>=1.0.0",
    "psutil>=5.9.0",
    
    # Additional utilities
    "boto3>=1.34.0",
    "python-dateutil>=2.8.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "pytest-xdist>=3.6.0",
    "coverage[toml]>=7.6.0",
    
    # Code quality
    "ruff>=0.8.0",
    "mypy>=1.13.0",
    "pre-commit>=4.0.0",
    
    # Documentation
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.0",
    "mkdocstrings[python]>=0.26.0",
]

test = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "pytest-xdist>=3.6.0",
    "coverage[toml]>=7.6.0",
]

docs = [
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.0",
    "mkdocstrings[python]>=0.26.0",
]

[project.urls]
Homepage = "https://github.com/suokelife/suoke_life"
Documentation = "https://docs.suokelife.com/services/corn-maze"
Repository = "https://github.com/suokelife/suoke_life"
Issues = "https://github.com/suokelife/suoke_life/issues"

[project.scripts]
corn-maze-server = "corn_maze_service.cmd.server.main:main"

# Tool configurations
[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PL",  # pylint
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",   # line too long, handled by black
    "B008",   # do not perform function calls in argument defaults
    "C901",   # too complex
    "PLR0913", # too many arguments
    "PLR0915", # too many statements
    "TCH001", # Move application import into a type-checking block
    "TCH002", # Move third-party import into a type-checking block
    "TCH003", # Move standard library import into a type-checking block
    "ERA001", # Found commented-out code
    "RUF002", # Docstring contains ambiguous character
    "RUF003", # Comment contains ambiguous character
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"test_*.py" = ["ARG", "S101"]
"tests/*.py" = ["ARG", "S101"]

[tool.ruff.lint.isort]
known-first-party = ["corn_maze_service"]
force-sort-within-sections = true

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "grpc.*",
    "grpc_health.*",
    "grpc_reflection.*",
    "prometheus_client.*",
    "opentelemetry.*",
    "structlog.*",
    "networkx.*",
    "matplotlib.*",
    "pygame.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=corn_maze_service",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
testpaths = ["test", "tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
source = ["corn_maze_service"]
omit = [
    "*/tests/*",
    "*/test/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
    "*/site-packages/*",
    "*/cmd/*",
    "*/scripts/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.hatch.build.targets.wheel]
packages = ["corn_maze_service"]

[tool.hatch.version]
path = "corn_maze_service/__init__.py"

[dependency-groups]
dev = [
    "coverage[toml]>=7.8.2",
    "mypy>=1.15.0",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.1.1",
    "pytest-mock>=3.14.1",
    "pytest-xdist>=3.7.0",
    "ruff>=0.11.11",
]
