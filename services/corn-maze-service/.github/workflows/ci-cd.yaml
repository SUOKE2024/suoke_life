name: Corn Maze Service CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - 'services/corn-maze-service/**'
  pull_request:
    branches: [main, develop]
    paths:
      - 'services/corn-maze-service/**'
  workflow_dispatch:

env:
  IMAGE_NAME: corn-maze-service
  DOCKER_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/corn-maze-service

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio

      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run unit tests
        run: |
          python -m pytest test/unit -v

      - name: Run integration tests
        run: |
          python -m pytest test/integration -v

      - name: Upload test coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: cornmazeservice
          fail_ci_if_error: false

  build:
    name: Build and Push
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name != 'pull_request'
    defaults:
      run:
        working-directory: services/corn-maze-service

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,format=long
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./services/corn-maze-service
          file: ./services/corn-maze-service/deploy/docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/develop'
    environment: development
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        
      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v1
        
      - name: Configure Kubernetes
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig
          export KUBECONFIG=./kubeconfig
          
      - name: Update Kubernetes manifests
        run: |
          cd services/corn-maze-service/deploy/kubernetes/overlays/development
          kustomize edit set image corn-maze-service=${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:sha-${{ github.sha }}
          
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -k services/corn-maze-service/deploy/kubernetes/overlays/development
          kubectl rollout status deployment/corn-maze-service -n soke-life --timeout=180s
          
  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        
      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v1
        
      - name: Configure Kubernetes
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig
          export KUBECONFIG=./kubeconfig
          
      - name: Update Kubernetes manifests
        run: |
          cd services/corn-maze-service/deploy/kubernetes/overlays/production
          kustomize edit set image corn-maze-service=${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:sha-${{ github.sha }}
          
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -k services/corn-maze-service/deploy/kubernetes/overlays/production
          kubectl rollout status deployment/corn-maze-service -n soke-life --timeout=180s 