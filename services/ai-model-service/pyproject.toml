[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ai-model-service"
version = "1.0.0"
description = "索克生活AI模型云端部署和管理服务"
authors = [
    {name = "索克生活团队", email = "dev@suoke.life"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.13"
keywords = ["ai", "kubernetes", "model-deployment", "tcm", "healthcare"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Healthcare Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Distributed Computing",
]

dependencies = [
    "aiohttp>=3.9.0",
    "kubernetes>=29.0.0",
    "pydantic>=2.5.0",
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "prometheus-client>=0.19.0",
    "structlog>=23.2.0",
    "tenacity>=8.2.0",
    "httpx>=0.25.0",
    "pyyaml>=6.0.1",
    "python-multipart>=0.0.6",
    "pydantic-settings>=2.9.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    "bandit>=1.7.5",
    "safety>=2.3.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.25.0",
    "respx>=0.20.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/suoke-life/suoke_life"
Documentation = "https://docs.suoke.life/ai-model-service"
Repository = "https://github.com/suoke-life/suoke_life"
Issues = "https://github.com/suoke-life/suoke_life/issues"

[project.scripts]
ai-model-service = "ai_model_service.main:main"

[tool.hatch.build.targets.wheel]
packages = ["src/ai_model_service"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
    "/README.md",
    "/LICENSE",
]

# Black配置
[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort配置
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["ai_model_service"]

# MyPy配置
[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "kubernetes.*",
    "prometheus_client.*",
]
ignore_missing_imports = true

# Pytest配置
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=ai_model_service",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage配置
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Bandit安全检查配置
[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"] 

[dependency-groups]
dev = [
    "bandit>=1.8.3",
    "black>=25.1.0",
    "isort>=6.0.1",
    "mypy>=1.16.0",
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.1.1",
    "ruff>=0.11.13",
    "types-psutil>=7.0.0.20250601",
]
