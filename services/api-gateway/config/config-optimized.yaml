# 索克生活API网关配置 - 优化版本
# 本配置文件展示了应用优化建议后的配置

server:
  rest:
    host: 0.0.0.0
    port: 8080
    # 启用 HTTP/2 提升性能
    http2_enabled: true
    # 增加工作线程数
    workers: ${API_GATEWAY_WORKERS:-8}
  grpc:
    host: 0.0.0.0
    port: 50050
    # 启用 gRPC 健康检查
    health_check_enabled: true
  production: ${PRODUCTION:-false}
  debug: ${DEBUG:-false}

# 安全配置
security:
  # JWT 使用 RSA 算法，密钥从环境变量或密钥管理服务加载
  jwt:
    algorithm: RS256
    public_key_path: ${JWT_PUBLIC_KEY_PATH:-/secrets/jwt-public.pem}
    private_key_path: ${JWT_PRIVATE_KEY_PATH}  # 仅在需要签发令牌时使用
    expire_minutes: 60
    refresh_expire_minutes: 1440
    # 密钥轮换配置
    key_rotation:
      enabled: true
      interval_days: 30
  
  # API 签名验证
  api_signature:
    enabled: true
    secret_key: ${API_SIGNATURE_KEY}  # 从环境变量加载
    algorithm: HMAC-SHA256
    max_timestamp_diff: 300
  
  # TLS 配置
  tls:
    enabled: ${TLS_ENABLED:-true}
    cert_path: ${TLS_CERT_PATH:-/certs/server.crt}
    key_path: ${TLS_KEY_PATH:-/certs/server.key}
    ca_path: ${TLS_CA_PATH:-/certs/ca.crt}
    min_version: "1.2"

middleware:
  cors:
    enabled: true
    allow_origins: ${CORS_ORIGINS:-["https://app.suoke.life"]}
    allow_methods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
      - PATCH
    allow_headers:
      - Authorization
      - Content-Type
      - X-Request-ID
      - X-Signature
      - X-Timestamp
    allow_credentials: true
    max_age: 600
  
  # 增强的限流配置
  rate_limit:
    enabled: true
    # 分级限流
    tiers:
      anonymous:
        limit: 100
        window: 60
      authenticated:
        limit: 1000
        window: 60
      vip:
        limit: 5000
        window: 60
    # 基于 Redis 的分布式限流
    backend: redis
    redis_url: ${REDIS_URL:-redis://localhost:6379/1}
  
  # 请求压缩
  compression:
    enabled: true
    min_size: 1000
    level: 6
  
  auth:
    enabled: true
    public_paths:
      - /health
      - /metrics
      - /api/auth/login
      - /api/auth/register
      - /docs
      - /redoc
      - /openapi.json

# 服务发现配置 - 使用 Consul
service_discovery:
  type: consul
  consul:
    host: ${CONSUL_HOST:-consul}
    port: ${CONSUL_PORT:-8500}
    token: ${CONSUL_TOKEN}
    datacenter: ${CONSUL_DATACENTER:-dc1}
    # 服务健康检查配置
    health_check:
      interval: 10s
      timeout: 5s
      deregister_critical_after: 60s
  
  # 服务默认配置
  defaults:
    timeout: 30
    circuit_breaker:
      enabled: true
      failure_threshold: 5
      recovery_timeout: 60
      half_open_requests: 3
    retry:
      enabled: true
      max_attempts: 3
      backoff: exponential
      base_delay: 100ms
      max_delay: 10s

# 性能优化配置
performance:
  # 连接池配置
  connection_pool:
    max_connections_per_host: 100
    idle_timeout: 60s
    connection_timeout: 10s
  
  # 缓存配置
  cache:
    enabled: true
    type: multi_level
    # L1 内存缓存
    memory:
      size: 10000
      ttl: 300
    # L2 Redis 缓存
    redis:
      enabled: true
      prefix: "api_gateway:"
      ttl: 600
  
  # 批处理配置
  batching:
    enabled: true
    max_batch_size: 100
    batch_timeout: 100ms

# 监控和追踪
observability:
  # Prometheus 指标
  metrics:
    enabled: true
    path: /metrics
    # 自定义业务指标
    custom_metrics:
      - name: api_business_errors
        type: counter
        labels: ["service", "method", "error_type"]
      - name: api_response_size
        type: histogram
        labels: ["service", "method"]
  
  # 分布式追踪
  tracing:
    enabled: true
    provider: jaeger
    jaeger:
      endpoint: ${JAEGER_ENDPOINT:-http://jaeger:14268/api/traces}
      service_name: api-gateway
      sample_rate: ${TRACE_SAMPLE_RATE:-0.1}
  
  # 结构化日志
  logging:
    level: ${LOG_LEVEL:-INFO}
    format: json
    output: stdout
    # 日志聚合
    aggregation:
      enabled: true
      type: elasticsearch
      endpoint: ${ELASTICSEARCH_ENDPOINT:-http://elasticsearch:9200}
      index_prefix: api-gateway-logs

# 路由配置优化
routes:
  # 用户服务路由
  - name: user-service
    prefix: /api/users
    service: user-service
    strip_prefix: true
    methods: ["GET", "POST", "PUT", "DELETE", "PATCH"]
    # 路由级别的配置覆盖
    timeout: 30
    retry:
      max_attempts: 2
    # 路由级别的限流
    rate_limit:
      enabled: true
      limit: 500
      window: 60
    # 路由级别的缓存
    cache:
      enabled: true
      ttl: 300
      key_pattern: "user:{{user_id}}"
    auth_required: true
    # 请求/响应转换
    transformations:
      request:
        add_headers:
          X-Service-Name: user-service
      response:
        remove_headers:
          - X-Internal-Id

# 高可用配置
high_availability:
  # 主备模式
  mode: active_standby
  # 健康检查
  health_check:
    enabled: true
    interval: 5s
    failure_threshold: 3
  # 自动故障转移
  failover:
    enabled: true
    timeout: 30s

# 资源限制
resources:
  # 最大请求体大小
  max_request_size: 10MB
  # 最大响应体大小
  max_response_size: 50MB
  # 最大并发连接数
  max_concurrent_connections: 10000
  # 请求超时
  request_timeout: 60s 