[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "suoke-api-gateway"
version = "2.0.0"
description = "索克生活API网关服务 - 统一的微服务入口和路由管理"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "索克生活团队", email = "dev@suoke.life" }
]
maintainers = [
    { name = "索克生活团队", email = "dev@suoke.life" }
]
keywords = [
    "api-gateway",
    "gateway",
    "microservices",
    "fastapi",
    "grpc",
    "health-management",
    "suoke-life"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Framework :: FastAPI",
    "Intended Audience :: Healthcare Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Typing :: Typed",
]
requires-python = ">=3.13.3"
dependencies = [
    # 核心 Web 框架
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "starlette>=0.41.0",
    
    # gRPC 支持
    "grpcio>=1.68.0",
    "grpcio-tools>=1.68.0",
    "grpcio-reflection>=1.68.0",
    "grpcio-status>=1.68.0",
    "grpcio-health-checking>=1.68.0",
    
    # 数据验证和序列化
    "pydantic>=2.10.0",
    "pydantic-settings>=2.6.0",
    "protobuf>=5.28.0",
    
    # HTTP 客户端和工具
    "httpx>=0.28.0",
    "aiohttp>=3.11.0",
    "python-multipart>=0.0.12",
    
    # 认证和安全
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "cryptography>=43.0.0",
    "pyjwt>=2.10.0",
    
    # 缓存和存储
    "redis[hiredis]>=5.2.0",
    "aiocache>=0.12.3",
    
    # 限流和熔断
    "limits>=3.13.0",
    "circuitbreaker>=2.0.0",
    
    # 监控和可观测性
    "prometheus-client>=0.21.0",
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-exporter-otlp>=1.21.0",
    "opentelemetry-exporter-jaeger>=1.21.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0",
    "opentelemetry-instrumentation-grpc>=0.42b0",
    "opentelemetry-instrumentation-aiohttp-client>=0.42b0",
    "opentelemetry-instrumentation-redis>=0.42b0",
    "opentelemetry-instrumentation-requests>=0.42b0",
    
    # 日志
    "structlog>=24.4.0",
    "python-json-logger>=2.0.7",
    "rich>=13.9.0",
    
    # 配置和环境
    "pyyaml>=6.0.2",
    "python-dotenv>=1.0.1",
    "dynaconf>=3.2.6",
    
    # 工具库
    "tenacity>=9.0.0",
    "pytz>=2024.2",
    "orjson>=3.10.0",
    "msgpack>=1.1.0",
    
    # 服务发现
    "python-consul>=1.1.0",
    "kubernetes-asyncio>=32.3.2",
    
    # 健康检查
    "aiofiles>=24.1.0",
    "psutil>=6.1.0",
    
    # 配置热重载
    "watchdog>=6.0.0",
]

[project.optional-dependencies]
dev = [
    # 测试框架
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "pytest-xdist>=3.6.0",
    "pytest-benchmark>=4.0.0",
    "httpx>=0.28.0",
    "requests>=2.32.0",
    
    # 性能测试
    "locust>=2.32.0",
    
    # 代码质量
    "ruff>=0.8.0",
    "mypy>=1.13.0",
    "black>=24.10.0",
    "isort>=5.13.0",
    "bandit>=1.7.10",
    "safety>=3.2.0",
    
    # 开发工具
    "pre-commit>=4.0.0",
    "commitizen>=3.29.0",
    "rich>=13.9.0",
    "ipython>=8.29.0",
    
    # 文档
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.0",
    "mkdocstrings[python]>=0.26.0",
]

production = [
    "gunicorn>=23.0.0",
    "uvloop>=0.21.0",
    "httptools>=0.6.0",
]

monitoring = [
    "grafana-client>=3.7.0",
    "elasticsearch>=8.15.0",
    "jaeger-client>=4.8.0",
]

[project.urls]
Homepage = "https://github.com/SUOKE2024/suoke_life"
Documentation = "https://docs.suoke.life/api-gateway"
Repository = "https://github.com/SUOKE2024/suoke_life.git"
Issues = "https://github.com/SUOKE2024/suoke_life/issues"
Changelog = "https://github.com/SUOKE2024/suoke_life/blob/main/CHANGELOG.md"

[project.scripts]
suoke-gateway = "suoke_api_gateway.main:main"
gateway-dev = "suoke_api_gateway.dev:dev_server"

[tool.uv]
dev-dependencies = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "ruff>=0.8.0",
    "mypy>=1.13.0",
    "pre-commit>=4.0.0",
]

[tool.uv.sources]
# 如果需要使用本地开发版本的依赖
# suoke-common = { path = "../common", editable = true }

[tool.hatch.version]
path = "suoke_api_gateway/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["suoke_api_gateway"]

[tool.hatch.build.targets.sdist]
include = [
    "/suoke_api_gateway",
    "/tests",
    "/docs",
    "/config",
    "/scripts",
]

# Ruff 配置 (替代 flake8, isort, black)
[tool.ruff]
target-version = "py313"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PL",  # pylint
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",   # line too long, handled by black
    "B008",   # do not perform function calls in argument defaults
    "C901",   # too complex
    "PLR0913", # too many arguments
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "migrations",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.isort]
known-first-party = ["suoke_api_gateway"]
force-single-line = false
force-sort-within-sections = true

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["PLR2004", "S101", "TID252"]

# MyPy 配置
[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
show_column_numbers = true
pretty = true

[[tool.mypy.overrides]]
module = [
    "grpc.*",
    "consul.*",
    "kubernetes_asyncio.*",
    "prometheus_client.*",
    "jaeger_client.*",
]
ignore_missing_imports = true

# Pytest 配置
[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=suoke_api_gateway",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
    "-ra",
    "--tb=short",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
    "performance: marks tests as performance tests",
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

# Coverage 配置
[tool.coverage.run]
source = ["suoke_api_gateway"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Bandit 安全检查配置
[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]

# Commitizen 配置
[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
tag_format = "v$version"
version_files = [
    "suoke_api_gateway/__init__.py",
    "pyproject.toml:version"
]