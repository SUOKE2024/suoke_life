# 索克生活APP微服务标准数据库配置模板
# 各微服务可基于此模板配置其数据库连接

database:
  # 主数据库配置
  primary:
    type: postgresql  # 可选: postgresql, mysql, sqlite, mongodb
    host: ${DB_HOST:-localhost}
    port: ${DB_PORT:-5432}
    username: ${DB_USER:-postgres}
    password: ${DB_PASS:-postgres}
    database: ${DB_NAME:-service_db}
    
    # 连接池配置
    pool:
      min_size: 5                  # 最小连接数
      max_size: ${DB_POOL_SIZE:-20} # 最大连接数
      max_overflow: ${DB_MAX_OVERFLOW:-10}  # 最大溢出连接数
      timeout: ${DB_POOL_TIMEOUT:-30}       # 连接获取超时（秒）
      recycle: ${DB_POOL_RECYCLE:-3600}     # 连接回收时间（秒）
      use_lifo: true               # 使用后进先出策略
      echo: ${DB_ECHO:-false}      # 是否echo SQL语句
      
    # 性能优化参数
    optimization:
      prepared_statement_cache_size: 100  # 预处理语句缓存大小
      statement_timeout: 30000            # 语句执行超时（毫秒）
      idle_in_transaction_session_timeout: 60000  # 空闲事务超时（毫秒）
      effective_cache_size: "4GB"         # 有效缓存大小
      maintenance_work_mem: "64MB"        # 维护操作内存
      max_parallel_workers_per_gather: 2  # 每个查询的并行工作进程
      enable_partitionwise_join: true     # 启用分区连接
      
    # 连接参数  
    options:
      application_name: "suoke_app"       # 应用名称
      client_encoding: "UTF8"             # 客户端编码
      connect_timeout: 10                 # 连接超时（秒）
      keepalives: 1                       # TCP保持连接
      keepalives_idle: 60                 # TCP保持连接空闲时间（秒）
      
    # 事务隔离级别  
    isolation_level: "READ COMMITTED"     # 可选: READ UNCOMMITTED, READ COMMITTED, REPEATABLE READ, SERIALIZABLE
    
  # 只读副本配置（用于读写分离）
  replicas:
    enabled: ${DB_REPLICAS_ENABLED:-false}
    strategy: "round_robin"  # 负载均衡策略: round_robin, random, least_connections
    nodes:
      - host: ${DB_REPLICA1_HOST:-localhost}
        port: ${DB_REPLICA1_PORT:-5432}
        username: ${DB_REPLICA1_USER:-postgres}
        password: ${DB_REPLICA1_PASS:-postgres}
        database: ${DB_REPLICA1_NAME:-service_db}
        pool:
          min_size: 2
          max_size: ${DB_REPLICA1_POOL_SIZE:-10}
          max_overflow: 5
          timeout: 20
      
      - host: ${DB_REPLICA2_HOST}
        port: ${DB_REPLICA2_PORT:-5432}
        username: ${DB_REPLICA2_USER:-postgres}
        password: ${DB_REPLICA2_PASS:-postgres}
        database: ${DB_REPLICA2_NAME:-service_db}
        pool:
          min_size: 2
          max_size: ${DB_REPLICA2_POOL_SIZE:-10}
          max_overflow: 5
          timeout: 20
          
  # SQLite配置（用于本地存储）
  sqlite:
    path: ${SQLITE_PATH:-data/local.db}
    journal_mode: "WAL"       # 写前日志模式：DELETE, TRUNCATE, PERSIST, MEMORY, WAL
    synchronous: "NORMAL"     # 同步模式：OFF, NORMAL, FULL, EXTRA
    busy_timeout: 5000        # 忙时超时（毫秒）
    cache_size: 2000          # 缓存大小（页）
    temp_store: "MEMORY"      # 临时存储：DEFAULT, FILE, MEMORY
    
  # 向量数据库配置
  vector:
    type: milvus             # 可选: milvus, pinecone, qdrant
    host: ${VECTOR_DB_HOST:-localhost}
    port: ${VECTOR_DB_PORT:-19530}
    collection: ${VECTOR_DB_COLLECTION:-vectors}
    dimension: 768
    metric_type: "IP"        # 计量类型：IP (内积), L2
    partition_key: "source"  
    replica_number: 1
    
  # MongoDB配置
  mongodb:
    uri: ${MONGODB_URI:-mongodb://localhost:27017}
    database: ${MONGODB_DB:-app_documents}
    min_pool_size: 5
    max_pool_size: 20
    max_connection_idle_time: 60000
    connect_timeout: 20000
    socket_timeout: 300000
    
  # 缓存配置
  cache:
    type: redis              # 可选: redis, memory, none
    host: ${REDIS_HOST:-localhost}
    port: ${REDIS_PORT:-6379}
    db: ${REDIS_DB:-0}
    password: ${REDIS_PASS}
    ttl: ${REDIS_TTL:-3600}  # 默认缓存有效期（秒）
    key_prefix: "${SERVICE_NAME}:"
    
    # Redis连接池配置
    pool:
      min_idle: 5            # 最小空闲连接
      max_idle: 20           # 最大空闲连接
      max_active: 50         # 最大活跃连接
      max_wait: 3000         # 最大等待时间（毫秒）
      timeout: 2000          # 连接超时（毫秒）
    
    # 本地缓存配置（双层缓存）
    local:
      enabled: true
      max_size: 10000        # 最大项数
      ttl: 300               # 本地缓存TTL（秒）
      
  # 迁移配置
  migrations:
    enabled: true
    auto_migrate: ${AUTO_MIGRATE:-true}
    dir: "migrations"
    table: "schema_migrations"
      
  # 监控配置
  monitoring:
    query_timeout_threshold: 1000  # 查询超时阈值（毫秒）
    slow_query_log: true          # 慢查询日志
    slow_query_threshold: 500     # 慢查询阈值（毫秒）
    statement_timeout: 30000      # 语句超时（毫秒）
    connection_stats: true        # 连接统计
    query_stats: true             # 查询统计
    
  # 安全配置
  security:
    ssl_mode: "disable"           # PostgreSQL SSL模式: disable, allow, prefer, require, verify-ca, verify-full
    ssl_root_cert: ""             # CA证书路径
    ssl_cert: ""                  # 客户端证书
    ssl_key: ""                   # 客户端密钥
    encrypt_sensitive_data: true  # 是否加密敏感数据 