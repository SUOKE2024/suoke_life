# 索克生活闻诊服务 - 优化版Dockerfile
# 基于Python 3.13.3和UV包管理器

# 使用官方Python 3.13.3镜像作为基础镜像
FROM python:3.13.3-slim as base

# 设置环境变量
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# 安装系统依赖
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    libffi-dev \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# 安装UV包管理器
RUN pip install uv

# 创建应用用户
RUN useradd --create-home --shell /bin/bash app

# 设置工作目录
WORKDIR /app

# 复制项目配置文件
COPY pyproject.toml uv.lock ./

# 安装Python依赖
RUN uv sync --no-dev

# 复制应用代码
COPY listen_service/ ./listen_service/
COPY scripts/ ./scripts/
COPY tests/ ./tests/
COPY Makefile ./
COPY README.md ./

# 创建必要的目录
RUN mkdir -p logs data temp models

# 设置权限
RUN chown -R app:app /app

# 切换到应用用户
USER app

# 暴露端口
EXPOSE 8000 50051

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# 默认启动命令
CMD ["uv", "run", "python", "scripts/start_server.py"]

# ================================
# 开发阶段
# ================================
FROM base as development

# 切换回root用户安装开发依赖
USER root

# 安装开发依赖
RUN uv sync

# 安装开发工具
RUN apt-get update && apt-get install -y \
    vim \
    htop \
    && rm -rf /var/lib/apt/lists/*

# 切换回应用用户
USER app

# 开发模式启动命令
CMD ["uv", "run", "python", "-m", "listen_service.cmd.server", "rest", "--reload"]

# ================================
# 生产阶段
# ================================
FROM base as production

# 设置生产环境变量
ENV ENVIRONMENT=production \
    DEBUG=false \
    LOG_LEVEL=INFO

# 生产模式启动命令
CMD ["uv", "run", "python", "-m", "listen_service.cmd.server", "hybrid"]

# ================================
# 测试阶段
# ================================
FROM development as testing

# 运行测试
RUN uv run pytest tests/ -v --cov=listen_service

# 测试启动命令
CMD ["uv", "run", "pytest", "tests/", "-v"] 