apiVersion: v1
kind: Namespace
metadata:
  name: sonarqube
  labels:
    name: sonarqube
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sonarqube-config
  namespace: sonarqube
data:
  SONAR_JDBC_URL: "jdbc:postgresql://sonarqube-postgres:5432/sonarqube"
  SONAR_JDBC_USERNAME: "sonarqube"
  SONAR_WEB_CONTEXT: "/sonarqube"
  SONAR_WEB_PORT: "9000"
  SONAR_CE_JAVAOPTS: "-Xmx2g -Xms512m"
  SONAR_WEB_JAVAOPTS: "-Xmx2g -Xms512m"
---
apiVersion: v1
kind: Secret
metadata:
  name: sonarqube-secret
  namespace: sonarqube
type: Opaque
data:
  SONAR_JDBC_PASSWORD: c29uYXJxdWJl # base64 encoded 'sonarqube'
  POSTGRES_PASSWORD: c29uYXJxdWJl # base64 encoded 'sonarqube'
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarqube-postgres-pvc
  namespace: sonarqube
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarqube-data-pvc
  namespace: sonarqube
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: fast-ssd
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarqube-extensions-pvc
  namespace: sonarqube
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: fast-ssd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube-postgres
  namespace: sonarqube
  labels:
    app: sonarqube-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube-postgres
  template:
    metadata:
      labels:
        app: sonarqube-postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15-alpine
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "sonarqube"
            - name: POSTGRES_USER
              value: "sonarqube"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sonarqube-secret
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: sonarqube-postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: sonarqube-postgres
  namespace: sonarqube
  labels:
    app: sonarqube-postgres
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: sonarqube-postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube
  namespace: sonarqube
  labels:
    app: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      initContainers:
        - name: init-sysctl
          image: busybox:1.35
          command:
            - sh
            - -c
            - |
              sysctl -w vm.max_map_count=524288
              sysctl -w fs.file-max=131072
          securityContext:
            privileged: true
      containers:
        - name: sonarqube
          image: sonarqube:10.3-community
          ports:
            - containerPort: 9000
          env:
            - name: SONAR_JDBC_URL
              valueFrom:
                configMapKeyRef:
                  name: sonarqube-config
                  key: SONAR_JDBC_URL
            - name: SONAR_JDBC_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: sonarqube-config
                  key: SONAR_JDBC_USERNAME
            - name: SONAR_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sonarqube-secret
                  key: SONAR_JDBC_PASSWORD
            - name: SONAR_WEB_CONTEXT
              valueFrom:
                configMapKeyRef:
                  name: sonarqube-config
                  key: SONAR_WEB_CONTEXT
            - name: SONAR_WEB_PORT
              valueFrom:
                configMapKeyRef:
                  name: sonarqube-config
                  key: SONAR_WEB_PORT
            - name: SONAR_CE_JAVAOPTS
              valueFrom:
                configMapKeyRef:
                  name: sonarqube-config
                  key: SONAR_CE_JAVAOPTS
            - name: SONAR_WEB_JAVAOPTS
              valueFrom:
                configMapKeyRef:
                  name: sonarqube-config
                  key: SONAR_WEB_JAVAOPTS
          volumeMounts:
            - name: sonarqube-data
              mountPath: /opt/sonarqube/data
            - name: sonarqube-extensions
              mountPath: /opt/sonarqube/extensions
          resources:
            requests:
              memory: "2Gi"
              cpu: "1000m"
            limits:
              memory: "4Gi"
              cpu: "2000m"
          livenessProbe:
            httpGet:
              path: /sonarqube/api/system/status
              port: 9000
            initialDelaySeconds: 120
            periodSeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /sonarqube/api/system/status
              port: 9000
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
      volumes:
        - name: sonarqube-data
          persistentVolumeClaim:
            claimName: sonarqube-data-pvc
        - name: sonarqube-extensions
          persistentVolumeClaim:
            claimName: sonarqube-extensions-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: sonarqube
  namespace: sonarqube
  labels:
    app: sonarqube
spec:
  type: ClusterIP
  ports:
    - port: 9000
      targetPort: 9000
      name: http
  selector:
    app: sonarqube
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sonarqube-ingress
  namespace: sonarqube
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
        - sonarqube.suoke.life
      secretName: sonarqube-tls
  rules:
    - host: sonarqube.suoke.life
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sonarqube
                port:
                  number: 9000
