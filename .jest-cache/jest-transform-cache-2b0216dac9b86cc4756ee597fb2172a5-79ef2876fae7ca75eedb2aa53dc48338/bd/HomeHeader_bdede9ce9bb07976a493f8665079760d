949e95f057746e6f01a6975d62c7184a
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HomeHeader = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _Icon = _interopRequireDefault(require("../../components/common/Icon"));
var _theme = require("../../constants/theme");
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function cov_qy1qwnf83() {
  var path = "/Users/songxu/Developer/suoke_life/src/screens/components/HomeHeader.tsx";
  var hash = "ee28b4035050bcacae9202a5a696d870fe37d1a8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/songxu/Developer/suoke_life/src/screens/components/HomeHeader.tsx",
    statementMap: {
      "0": {
        start: {
          line: 19,
          column: 26
        },
        end: {
          line: 66,
          column: 2
        }
      },
      "1": {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 65,
          column: 4
        }
      },
      "2": {
        start: {
          line: 68,
          column: 0
        },
        end: {
          line: 68,
          column: 38
        }
      },
      "3": {
        start: {
          line: 70,
          column: 15
        },
        end: {
          line: 117,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 48
          },
          end: {
            line: 19,
            column: 49
          }
        },
        loc: {
          start: {
            line: 25,
            column: 6
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 25
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 2
          },
          end: {
            line: 21,
            column: 17
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 21,
            column: 16
          },
          end: {
            line: 21,
            column: 17
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 30,
            column: 24
          }
        }, {
          start: {
            line: 31,
            column: 10
          },
          end: {
            line: 35,
            column: 17
          }
        }],
        line: 30
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 15
          },
          end: {
            line: 33,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 33,
            column: 34
          },
          end: {
            line: 33,
            column: 39
          }
        }, {
          start: {
            line: 33,
            column: 42
          },
          end: {
            line: 33,
            column: 53
          }
        }],
        line: 33
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ee28b4035050bcacae9202a5a696d870fe37d1a8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_qy1qwnf83 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_qy1qwnf83();
var HomeHeader = exports.HomeHeader = (cov_qy1qwnf83().s[0]++, (0, _react.memo)(function (_ref) {
  var title = _ref.title,
    _ref$unreadCount = _ref.unreadCount,
    unreadCount = _ref$unreadCount === void 0 ? (cov_qy1qwnf83().b[0][0]++, 0) : _ref$unreadCount,
    onContactsPress = _ref.onContactsPress,
    onAccessibilityPress = _ref.onAccessibilityPress,
    onNavigationTestPress = _ref.onNavigationTestPress;
  cov_qy1qwnf83().f[0]++;
  cov_qy1qwnf83().s[1]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.container,
    children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.titleContainer,
      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.title,
        children: title
      }), (cov_qy1qwnf83().b[1][0]++, unreadCount > 0) && (cov_qy1qwnf83().b[1][1]++, (0, _jsxRuntime.jsx)(_reactNative.View, {
        style: styles.unreadBadge,
        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.unreadText,
          children: unreadCount > 99 ? (cov_qy1qwnf83().b[2][0]++, '99+') : (cov_qy1qwnf83().b[2][1]++, unreadCount)
        })
      }))]
    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.actions,
      children: [(0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        style: styles.actionButton,
        onPress: onNavigationTestPress,
        activeOpacity: 0.7,
        children: (0, _jsxRuntime.jsx)(_Icon.default, {
          name: "navigation",
          size: 24,
          color: _theme.colors.text
        })
      }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        style: styles.actionButton,
        onPress: onAccessibilityPress,
        activeOpacity: 0.7,
        children: (0, _jsxRuntime.jsx)(_Icon.default, {
          name: "accessibility",
          size: 24,
          color: _theme.colors.text
        })
      }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        style: styles.actionButton,
        onPress: onContactsPress,
        activeOpacity: 0.7,
        children: (0, _jsxRuntime.jsx)(_Icon.default, {
          name: "account-group",
          size: 24,
          color: _theme.colors.text
        })
      })]
    })]
  });
}));
cov_qy1qwnf83().s[2]++;
HomeHeader.displayName = 'HomeHeader';
var styles = (cov_qy1qwnf83().s[3]++, _reactNative.StyleSheet.create({
  container: Object.assign({
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingHorizontal: _theme.spacing.lg,
    paddingVertical: _theme.spacing.md,
    backgroundColor: _theme.colors.background,
    borderBottomWidth: 1,
    borderBottomColor: _theme.colors.border
  }, _theme.shadows.sm),
  titleContainer: {
    flexDirection: 'row',
    alignItems: 'center'
  },
  title: {
    fontSize: _theme.fonts.size.header,
    fontWeight: 'bold',
    color: _theme.colors.text
  },
  unreadBadge: {
    backgroundColor: _theme.colors.error,
    borderRadius: 10,
    minWidth: 20,
    height: 20,
    justifyContent: 'center',
    alignItems: 'center',
    paddingHorizontal: _theme.spacing.xs,
    marginLeft: _theme.spacing.sm
  },
  unreadText: {
    color: _theme.colors.white,
    fontSize: _theme.fonts.size.xs,
    fontWeight: 'bold'
  },
  actions: {
    flexDirection: 'row',
    alignItems: 'center'
  },
  actionButton: Object.assign({
    padding: _theme.spacing.sm,
    marginLeft: _theme.spacing.xs,
    borderRadius: 20,
    backgroundColor: _theme.colors.surface
  }, _theme.shadows.sm)
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,