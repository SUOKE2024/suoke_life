{"version":3,"names":["_react","_interopRequireDefault","require","cov_1wa0voqwd","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","DynamicImporter","exports","_classCallCheck2","default","cache","Map","_createClass2","key","value","_import2","_asyncToGenerator2","modulePath","has","get","importPromise","set","import","_x","apply","arguments","preload","modulePaths","_this","forEach","catch","error","console","warn","clearCache","clear","createLazyRoute","importFunc","React","lazy","createLazyFeature","fallback","cached","module","dynamicImporter"],"sources":["codeSplitting.ts"],"sourcesContent":["import React from 'react';\n\n/**\n * 动态导入工具\n */\nexport class DynamicImporter {\n  private cache = new Map<string, Promise<any>>();\n  \n  /**\n   * 动态导入模块\n   */\n  async import<T>(modulePath: string): Promise<T> {\n    if (this.cache.has(modulePath)) {\n      return this.cache.get(modulePath);\n    }\n    \n    const importPromise = import(modulePath);\n    this.cache.set(modulePath, importPromise);\n    \n    return importPromise;\n  }\n  \n  /**\n   * 预加载模块\n   */\n  preload(modulePaths: string[]) {\n    modulePaths.forEach(path => {\n      if (!this.cache.has(path)) {\n        this.import(path).catch(error => {\n          console.warn(`预加载模块失败: ${path}`, error);\n        });\n      }\n    });\n  }\n  \n  /**\n   * 清理缓存\n   */\n  clearCache() {\n    this.cache.clear();\n  }\n}\n\n/**\n * 路由级别的代码分割\n */\nexport function createLazyRoute(importFunc: () => Promise<{ default: React.ComponentType<any> }>) {\n  return React.lazy(importFunc);\n}\n\n/**\n * 功能级别的代码分割\n */\nexport function createLazyFeature<T>(\n  importFunc: () => Promise<{ default: T }>,\n  fallback?: T\n): () => Promise<T> {\n  let cached: T | null = null;\n  \n  return async () => {\n    if (cached) return cached;\n    \n    try {\n      const module = await importFunc();\n      cached = module.default;\n      return cached;\n    } catch (error) {\n      console.error('功能模块加载失败:', error);\n      if (fallback) return fallback;\n      throw error;\n    }\n  };\n}\n\nexport const dynamicImporter = new DynamicImporter();"],"mappings":"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","ignoreList":[]}