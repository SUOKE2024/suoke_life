{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactNative2","_jsxRuntime","mockHealthData","todaySteps","stepGoal","heartRate","bloodPressure","systolic","diastolic","sleepHours","waterIntake","waterGoal","mockAgents","id","name","status","specialty","MockHomeScreen","_React$useState","React","useState","_React$useState2","_slicedToArray2","default","refreshing","setRefreshing","_React$useState3","_React$useState4","selectedQuickAction","setSelectedQuickAction","handleRefresh","setTimeout","handleQuickAction","action","handleAgentPress","agentId","jsxs","ScrollView","testID","refreshControl","jsx","RefreshControl","onRefresh","children","View","Text","Date","toLocaleTimeString","Math","round","map","agent","TouchableOpacity","onPress","label","icon","describe","it","_render","render","getByTestId","getByText","expect","toBeTruthy","_render2","_render3","_render4","_render5","forEach","_render6","getAllByText","onlineElements","offlineElements","length","toBeGreaterThan","_render7","xiaoaiAgent","fireEvent","press","_render8","actions","_render9","queryByTestId","toBeNull","measureAction","_render0","_asyncToGenerator2","_render1","scrollView","waitFor","timeout","_render10","healthCards","cardId","_render11","_render12","scroll","nativeEvent","contentOffset","y","contentSize","height","layoutMeasurement"],"sources":["HomeScreen.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, fireEvent, waitFor } from '@testing-library/react-native';\nimport { View, Text, ScrollView, TouchableOpacity, RefreshControl } from 'react-native';\n\n// Mock数据\nconst mockHealthData = {\n  todaySteps: 8500,\n  stepGoal: 10000,\n  heartRate: 72,\n  bloodPressure: { systolic: 120, diastolic: 80 },\n  sleepHours: 7.5,\n  waterIntake: 1200,\n  waterGoal: 2000,\n};\n\nconst mockAgents = [\n  { id: 'xiaoai', name: '小艾', status: 'online', specialty: '健康咨询' },\n  { id: 'xiaoke', name: '小克', status: 'online', specialty: '疾病预防' },\n  { id: 'laoke', name: '老克', status: 'offline', specialty: '中医调理' },\n  { id: 'soer', name: '索儿', status: 'online', specialty: '生活指导' },\n];\n\n// Mock首页组件\nconst MockHomeScreen = () => {\n  const [refreshing, setRefreshing] = React.useState(false);\n  const [selectedQuickAction, setSelectedQuickAction] = React.useState<string | null>(null);\n\n  const handleRefresh = () => {\n    setRefreshing(true);\n    setTimeout(() => setRefreshing(false), 1000);\n  };\n\n  const handleQuickAction = (action: string) => {\n    setSelectedQuickAction(action);\n  };\n\n  const handleAgentPress = (agentId: string) => {\n    // 模拟导航到智能体聊天\n  };\n\n  return (\n    <ScrollView\n      testID=\"home-screen\"\n      refreshControl={\n        <RefreshControl refreshing={refreshing} onRefresh={handleRefresh} />\n      }\n    >\n      {/* 欢迎区域 */}\n      <View testID=\"welcome-section\">\n        <Text testID=\"welcome-text\">欢迎回来！</Text>\n        <Text testID=\"current-time\">{new Date().toLocaleTimeString()}</Text>\n      </View>\n\n      {/* 健康概览 */}\n      <View testID=\"health-overview\">\n        <Text testID=\"health-title\">今日健康概览</Text>\n        \n        {/* 步数卡片 */}\n        <View testID=\"steps-card\">\n          <Text testID=\"steps-label\">步数</Text>\n          <Text testID=\"steps-value\">{mockHealthData.todaySteps}</Text>\n          <Text testID=\"steps-goal\">目标: {mockHealthData.stepGoal}</Text>\n          <Text testID=\"steps-progress\">\n            {Math.round((mockHealthData.todaySteps / mockHealthData.stepGoal) * 100)}%\n          </Text>\n        </View>\n\n        {/* 心率卡片 */}\n        <View testID=\"heart-rate-card\">\n          <Text testID=\"heart-rate-label\">心率</Text>\n          <Text testID=\"heart-rate-value\">{mockHealthData.heartRate} bpm</Text>\n        </View>\n\n        {/* 血压卡片 */}\n        <View testID=\"blood-pressure-card\">\n          <Text testID=\"blood-pressure-label\">血压</Text>\n          <Text testID=\"blood-pressure-value\">\n            {mockHealthData.bloodPressure.systolic}/{mockHealthData.bloodPressure.diastolic}\n          </Text>\n        </View>\n\n        {/* 睡眠卡片 */}\n        <View testID=\"sleep-card\">\n          <Text testID=\"sleep-label\">睡眠</Text>\n          <Text testID=\"sleep-value\">{mockHealthData.sleepHours} 小时</Text>\n        </View>\n\n        {/* 饮水卡片 */}\n        <View testID=\"water-card\">\n          <Text testID=\"water-label\">饮水</Text>\n          <Text testID=\"water-value\">{mockHealthData.waterIntake}ml</Text>\n          <Text testID=\"water-goal\">目标: {mockHealthData.waterGoal}ml</Text>\n        </View>\n      </View>\n\n      {/* 智能体区域 */}\n      <View testID=\"agents-section\">\n        <Text testID=\"agents-title\">智能体助手</Text>\n        <View testID=\"agents-grid\">\n          {mockAgents.map(agent => (\n            <TouchableOpacity\n              key={agent.id}\n              testID={`agent-${agent.id}`}\n              onPress={() => handleAgentPress(agent.id)}\n            >\n              <View testID={`agent-card-${agent.id}`}>\n                <Text testID={`agent-name-${agent.id}`}>{agent.name}</Text>\n                <Text testID={`agent-specialty-${agent.id}`}>{agent.specialty}</Text>\n                <Text testID={`agent-status-${agent.id}`}>\n                  {agent.status === 'online' ? '在线' : '离线'}\n                </Text>\n              </View>\n            </TouchableOpacity>\n          ))}\n        </View>\n      </View>\n\n      {/* 快捷操作 */}\n      <View testID=\"quick-actions\">\n        <Text testID=\"quick-actions-title\">快捷操作</Text>\n        <View testID=\"quick-actions-grid\">\n          {[\n            { id: 'measure', label: '健康测量', icon: 'heart' },\n            { id: 'record', label: '记录数据', icon: 'edit' },\n            { id: 'report', label: '健康报告', icon: 'chart' },\n            { id: 'reminder', label: '设置提醒', icon: 'bell' },\n          ].map(action => (\n            <TouchableOpacity\n              key={action.id}\n              testID={`quick-action-${action.id}`}\n              onPress={() => handleQuickAction(action.id)}\n            >\n              <View testID={`action-card-${action.id}`}>\n                <Text testID={`action-icon-${action.id}`}>{action.icon}</Text>\n                <Text testID={`action-label-${action.id}`}>{action.label}</Text>\n              </View>\n            </TouchableOpacity>\n          ))}\n        </View>\n      </View>\n\n      {/* 健康建议 */}\n      <View testID=\"health-tips\">\n        <Text testID=\"tips-title\">今日健康建议</Text>\n        <View testID=\"tips-list\">\n          <Text testID=\"tip-1\">保持规律的运动习惯，每天至少30分钟</Text>\n          <Text testID=\"tip-2\">多喝水，保持身体水分平衡</Text>\n          <Text testID=\"tip-3\">保证充足的睡眠，建议7-8小时</Text>\n        </View>\n      </View>\n\n      {/* 选中的快捷操作显示 */}\n      {selectedQuickAction && (\n        <View testID=\"selected-action-info\">\n          <Text testID=\"selected-action-text\">\n            已选择: {selectedQuickAction}\n          </Text>\n        </View>\n      )}\n    </ScrollView>\n  );\n};\n\ndescribe('HomeScreen', () => {\n  it('应该正确渲染首页', () => {\n    const { getByTestId, getByText } = render(<MockHomeScreen />);\n\n    expect(getByTestId('home-screen')).toBeTruthy();\n    expect(getByTestId('welcome-section')).toBeTruthy();\n    expect(getByText('欢迎回来！')).toBeTruthy();\n  });\n\n  it('应该显示当前时间', () => {\n    const { getByTestId } = render(<MockHomeScreen />);\n\n    expect(getByTestId('current-time')).toBeTruthy();\n  });\n\n  it('应该显示健康概览数据', () => {\n    const { getByTestId, getByText } = render(<MockHomeScreen />);\n\n    expect(getByTestId('health-overview')).toBeTruthy();\n    expect(getByText('今日健康概览')).toBeTruthy();\n    \n    // 验证各项健康数据\n    expect(getByText('8500')).toBeTruthy(); // 步数\n    expect(getByText('72 bpm')).toBeTruthy(); // 心率\n    expect(getByText('120/80')).toBeTruthy(); // 血压\n    expect(getByText('7.5 小时')).toBeTruthy(); // 睡眠\n    expect(getByText('1200ml')).toBeTruthy(); // 饮水\n  });\n\n  it('应该正确计算步数完成百分比', () => {\n    const { getByText } = render(<MockHomeScreen />);\n\n    // 8500 / 10000 = 85%\n    expect(getByText('85%')).toBeTruthy();\n  });\n\n  it('应该显示所有智能体', () => {\n    const { getByTestId, getByText } = render(<MockHomeScreen />);\n\n    expect(getByTestId('agents-section')).toBeTruthy();\n    expect(getByText('智能体助手')).toBeTruthy();\n\n    // 验证所有智能体都显示\n    mockAgents.forEach(agent => {\n      expect(getByTestId(`agent-${agent.id}`)).toBeTruthy();\n      expect(getByText(agent.name)).toBeTruthy();\n      expect(getByText(agent.specialty)).toBeTruthy();\n    });\n  });\n\n  it('应该显示智能体在线状态', () => {\n    const { getAllByText } = render(<MockHomeScreen />);\n\n    const onlineElements = getAllByText('在线');\n    const offlineElements = getAllByText('离线');\n    \n    expect(onlineElements.length).toBeGreaterThan(0);\n    expect(offlineElements.length).toBeGreaterThan(0);\n  });\n\n  it('应该支持智能体点击', () => {\n    const { getByTestId } = render(<MockHomeScreen />);\n\n    const xiaoaiAgent = getByTestId('agent-xiaoai');\n    fireEvent.press(xiaoaiAgent);\n\n    // 验证点击不会抛出错误\n    expect(xiaoaiAgent).toBeTruthy();\n  });\n\n  it('应该显示快捷操作', () => {\n    const { getByTestId, getByText } = render(<MockHomeScreen />);\n\n    expect(getByTestId('quick-actions')).toBeTruthy();\n    expect(getByText('快捷操作')).toBeTruthy();\n\n    // 验证所有快捷操作\n    const actions = ['measure', 'record', 'report', 'reminder'];\n    actions.forEach(action => {\n      expect(getByTestId(`quick-action-${action}`)).toBeTruthy();\n    });\n\n    expect(getByText('健康测量')).toBeTruthy();\n    expect(getByText('记录数据')).toBeTruthy();\n    expect(getByText('健康报告')).toBeTruthy();\n    expect(getByText('设置提醒')).toBeTruthy();\n  });\n\n  it('应该支持快捷操作点击', () => {\n    const { getByTestId, queryByTestId } = render(<MockHomeScreen />);\n\n    // 初始状态不显示选中信息\n    expect(queryByTestId('selected-action-info')).toBeNull();\n\n    // 点击健康测量\n    const measureAction = getByTestId('quick-action-measure');\n    fireEvent.press(measureAction);\n\n    // 验证选中状态显示\n    expect(getByTestId('selected-action-info')).toBeTruthy();\n  });\n\n  it('应该显示健康建议', () => {\n    const { getByTestId, getByText } = render(<MockHomeScreen />);\n\n    expect(getByTestId('health-tips')).toBeTruthy();\n    expect(getByText('今日健康建议')).toBeTruthy();\n\n    // 验证建议内容\n    expect(getByText('保持规律的运动习惯，每天至少30分钟')).toBeTruthy();\n    expect(getByText('多喝水，保持身体水分平衡')).toBeTruthy();\n    expect(getByText('保证充足的睡眠，建议7-8小时')).toBeTruthy();\n  });\n\n  it('应该支持下拉刷新', async () => {\n    const { getByTestId } = render(<MockHomeScreen />);\n\n    const scrollView = getByTestId('home-screen');\n    \n    // 模拟下拉刷新\n    fireEvent(scrollView, 'refresh');\n\n    // 等待刷新完成\n    await waitFor(() => {\n      // 验证刷新功能正常工作\n      expect(scrollView).toBeTruthy();\n    }, { timeout: 2000 });\n  });\n\n  it('应该正确显示健康数据卡片', () => {\n    const { getByTestId } = render(<MockHomeScreen />);\n\n    const healthCards = [\n      'steps-card',\n      'heart-rate-card', \n      'blood-pressure-card',\n      'sleep-card',\n      'water-card'\n    ];\n\n    healthCards.forEach(cardId => {\n      expect(getByTestId(cardId)).toBeTruthy();\n    });\n  });\n\n  it('应该显示水分摄入进度', () => {\n    const { getByText } = render(<MockHomeScreen />);\n\n    expect(getByText('目标: 2000ml')).toBeTruthy();\n  });\n\n  it('应该支持滚动查看所有内容', () => {\n    const { getByTestId } = render(<MockHomeScreen />);\n\n    const scrollView = getByTestId('home-screen');\n    \n    // 模拟滚动\n    fireEvent.scroll(scrollView, {\n      nativeEvent: {\n        contentOffset: { y: 200 },\n        contentSize: { height: 1000 },\n        layoutMeasurement: { height: 600 },\n      },\n    });\n\n    expect(scrollView).toBeTruthy();\n  });\n}); "],"mappings":"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","ignoreList":[]}