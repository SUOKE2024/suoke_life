e98db208ee28cece7d6efa18f476e543
_getJestObj().mock('../../components/common/Icon', function () {
  return jest.fn(function (_ref) {
    var name = _ref.name,
      size = _ref.size,
      color = _ref.color;
    var _require = require('react-native'),
      Text = _require.Text;
    return (0, _jsxRuntime.jsx)(Text, {
      testID: `icon-${name}`,
      style: {
        fontSize: size,
        color: color
      },
      children: name
    });
  });
});
_getJestObj().mock('react-native-vector-icons/MaterialCommunityIcons', function () {
  return jest.fn(function (_ref2) {
    var name = _ref2.name,
      size = _ref2.size,
      color = _ref2.color;
    var _require2 = require('react-native'),
      Text = _require2.Text;
    return (0, _jsxRuntime.jsx)(Text, {
      testID: `vector-icon-${name}`,
      style: {
        fontSize: size,
        color: color
      },
      children: name
    });
  });
});
_getJestObj().mock('@react-navigation/native', function () {
  var actualNav = jest.requireActual('@react-navigation/native');
  return Object.assign({}, actualNav, {
    NavigationContainer: function NavigationContainer(_ref3) {
      var children = _ref3.children;
      return children;
    }
  });
});
_getJestObj().mock('@react-navigation/bottom-tabs', function () {
  var React = require('react');
  var _require3 = require('react-native'),
    View = _require3.View,
    Text = _require3.Text;
  return {
    createBottomTabNavigator: function createBottomTabNavigator() {
      return {
        Navigator: function Navigator(_ref4) {
          var children = _ref4.children;
          return React.createElement(View, {
            testID: "tab-navigator"
          }, children);
        },
        Screen: function Screen(_ref5) {
          var children = _ref5.children,
            options = _ref5.options;
          return React.createElement(View, {
            testID: (options == null ? void 0 : options.tabBarTestID) || 'tab-screen'
          }, React.createElement(Text, null, options == null ? void 0 : options.tabBarLabel), children);
        }
      };
    }
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _native = require("@react-navigation/native");
var _bottomTabs = require("@react-navigation/bottom-tabs");
var _reactNative2 = require("react-native");
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require4 = require("@jest/globals"),
    jest = _require4.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
var MockHomeScreen = function MockHomeScreen() {
  return (0, _jsxRuntime.jsx)(_reactNative2.View, {
    testID: "home-screen",
    children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
      children: "\u9996\u9875"
    })
  });
};
var MockExploreScreen = function MockExploreScreen() {
  return (0, _jsxRuntime.jsx)(_reactNative2.View, {
    testID: "explore-screen",
    children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
      children: "\u63A2\u7D22"
    })
  });
};
var MockLifeScreen = function MockLifeScreen() {
  return (0, _jsxRuntime.jsx)(_reactNative2.View, {
    testID: "life-screen",
    children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
      children: "\u751F\u6D3B"
    })
  });
};
var MockSuokeScreen = function MockSuokeScreen() {
  return (0, _jsxRuntime.jsx)(_reactNative2.View, {
    testID: "suoke-screen",
    children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
      children: "\u7D22\u514B"
    })
  });
};
var MockProfileScreen = function MockProfileScreen() {
  return (0, _jsxRuntime.jsx)(_reactNative2.View, {
    testID: "profile-screen",
    children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
      children: "\u6211\u7684"
    })
  });
};
var Tab = (0, _bottomTabs.createBottomTabNavigator)();
var AppNavigator = function AppNavigator() {
  return (0, _jsxRuntime.jsx)(_native.NavigationContainer, {
    children: (0, _jsxRuntime.jsxs)(Tab.Navigator, {
      screenOptions: {
        headerShown: false,
        tabBarActiveTintColor: '#007AFF',
        tabBarInactiveTintColor: '#8E8E93'
      },
      children: [(0, _jsxRuntime.jsx)(Tab.Screen, {
        name: "Home",
        component: MockHomeScreen,
        options: {
          tabBarLabel: '首页',
          tabBarTestID: 'tab-home'
        }
      }), (0, _jsxRuntime.jsx)(Tab.Screen, {
        name: "Explore",
        component: MockExploreScreen,
        options: {
          tabBarLabel: '探索',
          tabBarTestID: 'tab-explore'
        }
      }), (0, _jsxRuntime.jsx)(Tab.Screen, {
        name: "Life",
        component: MockLifeScreen,
        options: {
          tabBarLabel: '生活',
          tabBarTestID: 'tab-life'
        }
      }), (0, _jsxRuntime.jsx)(Tab.Screen, {
        name: "Suoke",
        component: MockSuokeScreen,
        options: {
          tabBarLabel: '索克',
          tabBarTestID: 'tab-suoke'
        }
      }), (0, _jsxRuntime.jsx)(Tab.Screen, {
        name: "Profile",
        component: MockProfileScreen,
        options: {
          tabBarLabel: '我的',
          tabBarTestID: 'tab-profile'
        }
      })]
    })
  });
};
describe('AppNavigator', function () {
  it('应该正确渲染底部标签导航', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(AppNavigator, {})),
      getByText = _render.getByText;
    expect(getByText('首页')).toBeTruthy();
    expect(getByText('探索')).toBeTruthy();
    expect(getByText('生活')).toBeTruthy();
    expect(getByText('索克')).toBeTruthy();
    expect(getByText('我的')).toBeTruthy();
  });
  it('应该设置正确的标签栏测试ID', function () {
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(AppNavigator, {})),
      getByTestId = _render2.getByTestId;
    expect(getByTestId('tab-home')).toBeTruthy();
    expect(getByTestId('tab-explore')).toBeTruthy();
    expect(getByTestId('tab-life')).toBeTruthy();
    expect(getByTestId('tab-suoke')).toBeTruthy();
    expect(getByTestId('tab-profile')).toBeTruthy();
  });
  it('应该正确配置导航选项', function () {
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(AppNavigator, {})),
      getByText = _render3.getByText;
    expect(getByText('首页')).toBeTruthy();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,