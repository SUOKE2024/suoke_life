{"version":3,"names":["_getJestObj","mock","jest","fn","_ref","name","size","color","_require","require","Text","_jsxRuntime","jsx","testID","style","fontSize","children","_ref2","_require2","actualNav","requireActual","Object","assign","NavigationContainer","_ref3","React","_require3","View","createBottomTabNavigator","Navigator","_ref4","createElement","Screen","_ref5","options","tabBarTestID","tabBarLabel","_interopRequireDefault","_react","_reactNative","_native","_bottomTabs","_reactNative2","_require4","MockHomeScreen","MockExploreScreen","MockLifeScreen","MockSuokeScreen","MockProfileScreen","Tab","AppNavigator","jsxs","screenOptions","headerShown","tabBarActiveTintColor","tabBarInactiveTintColor","component","describe","it","_render","render","getByText","expect","toBeTruthy","_render2","getByTestId","_render3"],"sources":["AppNavigator.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render } from '@testing-library/react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { View, Text } from 'react-native';\n\n// Mock screens\nconst MockHomeScreen = () => <View testID=\"home-screen\"><Text>首页</Text></View>;\nconst MockExploreScreen = () => <View testID=\"explore-screen\"><Text>探索</Text></View>;\nconst MockLifeScreen = () => <View testID=\"life-screen\"><Text>生活</Text></View>;\nconst MockSuokeScreen = () => <View testID=\"suoke-screen\"><Text>索克</Text></View>;\nconst MockProfileScreen = () => <View testID=\"profile-screen\"><Text>我的</Text></View>;\n\n// Mock Icon component\njest.mock('../../components/common/Icon', () => {\n  return jest.fn(({ name, size, color }: any) => {\n    const { Text } = require('react-native');\n    return (\n      <Text testID={`icon-${name}`} style={{ fontSize: size, color }}>\n        {name}\n      </Text>\n    );\n  });\n});\n\n// Mock react-native-vector-icons\njest.mock('react-native-vector-icons/MaterialCommunityIcons', () => {\n  return jest.fn(({ name, size, color }: any) => {\n    const { Text } = require('react-native');\n    return (\n      <Text testID={`vector-icon-${name}`} style={{ fontSize: size, color }}>\n        {name}\n      </Text>\n    );\n  });\n});\n\n// Mock @react-navigation/native\njest.mock('@react-navigation/native', () => {\n  const actualNav = jest.requireActual('@react-navigation/native');\n  return {\n    ...actualNav,\n    NavigationContainer: ({ children }: any) => children,\n  };\n});\n\n// Mock @react-navigation/bottom-tabs\njest.mock('@react-navigation/bottom-tabs', () => {\n  const React = require('react');\n  const { View, Text } = require('react-native');\n  \n  return {\n    createBottomTabNavigator: () => ({\n      Navigator: ({ children }: any) => React.createElement(View, { testID: \"tab-navigator\" }, children),\n      Screen: ({ children, options }: any) => React.createElement(\n        View,\n        { testID: options?.tabBarTestID || 'tab-screen' },\n        React.createElement(Text, null, options?.tabBarLabel),\n        children\n      ),\n    }),\n  };\n});\n\nconst Tab = createBottomTabNavigator();\n\nconst AppNavigator = () => {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        screenOptions={{\n          headerShown: false,\n          tabBarActiveTintColor: '#007AFF',\n          tabBarInactiveTintColor: '#8E8E93',\n        }}\n      >\n        <Tab.Screen\n          name=\"Home\"\n          component={MockHomeScreen}\n          options={{\n            tabBarLabel: '首页',\n            tabBarTestID: 'tab-home',\n          }}\n        />\n        <Tab.Screen\n          name=\"Explore\"\n          component={MockExploreScreen}\n          options={{\n            tabBarLabel: '探索',\n            tabBarTestID: 'tab-explore',\n          }}\n        />\n        <Tab.Screen\n          name=\"Life\"\n          component={MockLifeScreen}\n          options={{\n            tabBarLabel: '生活',\n            tabBarTestID: 'tab-life',\n          }}\n        />\n        <Tab.Screen\n          name=\"Suoke\"\n          component={MockSuokeScreen}\n          options={{\n            tabBarLabel: '索克',\n            tabBarTestID: 'tab-suoke',\n          }}\n        />\n        <Tab.Screen\n          name=\"Profile\"\n          component={MockProfileScreen}\n          options={{\n            tabBarLabel: '我的',\n            tabBarTestID: 'tab-profile',\n          }}\n        />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n};\n\ndescribe('AppNavigator', () => {\n  it('应该正确渲染底部标签导航', () => {\n    const { getByText } = render(<AppNavigator />);\n    \n    expect(getByText('首页')).toBeTruthy();\n    expect(getByText('探索')).toBeTruthy();\n    expect(getByText('生活')).toBeTruthy();\n    expect(getByText('索克')).toBeTruthy();\n    expect(getByText('我的')).toBeTruthy();\n  });\n\n  it('应该设置正确的标签栏测试ID', () => {\n    const { getByTestId } = render(<AppNavigator />);\n    \n    expect(getByTestId('tab-home')).toBeTruthy();\n    expect(getByTestId('tab-explore')).toBeTruthy();\n    expect(getByTestId('tab-life')).toBeTruthy();\n    expect(getByTestId('tab-suoke')).toBeTruthy();\n    expect(getByTestId('tab-profile')).toBeTruthy();\n  });\n\n  it('应该正确配置导航选项', () => {\n    // 这个测试验证导航器能够正确渲染，间接验证了配置\n    const { getByText } = render(<AppNavigator />);\n    expect(getByText('首页')).toBeTruthy();\n  });\n}); "],"mappings":"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","ignoreList":[]}