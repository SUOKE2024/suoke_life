f747d61dc356c1d4a3012e4fc6eefdd5
_getJestObj().mock('react-native', function () {
  return {
    Alert: {
      alert: jest.fn()
    }
  };
});
var _reactNative = require("react-native");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
var mockAlert = _reactNative.Alert.alert;
var errorHandler = {
  handleApiError: function handleApiError(error) {
    var _error$response$data;
    if (error.response) {
      var status = error.response.status;
      switch (status) {
        case 400:
          return '请求参数错误';
        case 401:
          return '未授权，请重新登录';
        case 403:
          return '权限不足';
        case 404:
          return '请求的资源不存在';
        case 500:
          return '服务器内部错误';
        default:
          return ((_error$response$data = error.response.data) == null ? void 0 : _error$response$data.message) || '服务器错误';
      }
    }
    if (error.request) {
      return '网络连接失败，请检查网络设置';
    }
    return error.message || '未知错误';
  },
  showErrorAlert: function showErrorAlert(title, message) {
    _reactNative.Alert.alert(title, message, [{
      text: '确定'
    }]);
  },
  isNetworkError: function isNetworkError(error) {
    return !error.response && !!error.request;
  },
  isServerError: function isServerError(error) {
    return error.response && error.response.status >= 500;
  }
};
describe('ErrorHandler', function () {
  beforeEach(function () {
    jest.clearAllMocks();
  });
  describe('API错误处理', function () {
    it('应该处理400错误', function () {
      var error = {
        response: {
          status: 400,
          data: {
            message: '参数错误'
          }
        }
      };
      var result = errorHandler.handleApiError(error);
      expect(result).toBe('请求参数错误');
    });
    it('应该处理401错误', function () {
      var error = {
        response: {
          status: 401
        }
      };
      var result = errorHandler.handleApiError(error);
      expect(result).toBe('未授权，请重新登录');
    });
    it('应该处理网络错误', function () {
      var error = {
        request: {},
        message: '网络错误'
      };
      var result = errorHandler.handleApiError(error);
      expect(result).toBe('网络连接失败，请检查网络设置');
    });
  });
  describe('错误提示', function () {
    it('应该显示错误弹窗', function () {
      errorHandler.showErrorAlert('错误', '这是一个错误消息');
      expect(mockAlert).toHaveBeenCalledWith('错误', '这是一个错误消息', [{
        text: '确定'
      }]);
    });
  });
  describe('错误类型判断', function () {
    it('应该正确识别网络错误', function () {
      var networkError = {
        request: {},
        message: '网络错误'
      };
      var result = errorHandler.isNetworkError(networkError);
      expect(typeof result).toBe('boolean');
      expect(result).toBe(true);
      var apiError = {
        response: {
          status: 400
        }
      };
      expect(errorHandler.isNetworkError(apiError)).toBe(false);
    });
    it('应该正确识别服务器错误', function () {
      var serverError = {
        response: {
          status: 500
        }
      };
      expect(errorHandler.isServerError(serverError)).toBe(true);
      var clientError = {
        response: {
          status: 400
        }
      };
      expect(errorHandler.isServerError(clientError)).toBe(false);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,