c9c5a07ef87985d3df72eaf7849ff795
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["id", "initialRouteName", "children", "screenListeners", "screenOptions"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _native = require("@react-navigation/native");
var React = _interopRequireWildcard(require("react"));
var _warnOnce = _interopRequireDefault(require("warn-once"));
var _StackView = _interopRequireDefault(require("../views/Stack/StackView"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function StackNavigator(_ref) {
  var id = _ref.id,
    initialRouteName = _ref.initialRouteName,
    children = _ref.children,
    screenListeners = _ref.screenListeners,
    screenOptions = _ref.screenOptions,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var mode = rest.mode;
  (0, _warnOnce.default)(mode != null, `Stack Navigator: 'mode="${mode}"' is deprecated. Use 'presentation: "${mode}"' in 'screenOptions' instead.\n\nSee https://reactnavigation.org/docs/stack-navigator#presentation for more details.`);
  var headerMode = rest.headerMode;
  (0, _warnOnce.default)(headerMode === 'none', `Stack Navigator: 'headerMode="none"' is deprecated. Use 'headerShown: false' in 'screenOptions' instead.\n\nSee https://reactnavigation.org/docs/stack-navigator/#headershown for more details.`);
  (0, _warnOnce.default)(headerMode != null && headerMode !== 'none', `Stack Navigator: 'headerMode' is moved to 'options'. Moved it to 'screenOptions' to keep current behavior.\n\nSee https://reactnavigation.org/docs/stack-navigator/#headermode for more details.`);
  var keyboardHandlingEnabled = rest.keyboardHandlingEnabled;
  (0, _warnOnce.default)(keyboardHandlingEnabled !== undefined, `Stack Navigator: 'keyboardHandlingEnabled' is moved to 'options'. Moved it to 'screenOptions' to keep current behavior.\n\nSee https://reactnavigation.org/docs/stack-navigator/#keyboardhandlingenabled for more details.`);
  var defaultScreenOptions = {
    presentation: mode,
    headerShown: headerMode ? headerMode !== 'none' : true,
    headerMode: headerMode && headerMode !== 'none' ? headerMode : undefined,
    keyboardHandlingEnabled: keyboardHandlingEnabled
  };
  var _ref2 = (0, _native.useNavigationBuilder)(_native.StackRouter, {
      id: id,
      initialRouteName: initialRouteName,
      children: children,
      screenListeners: screenListeners,
      screenOptions: screenOptions,
      defaultScreenOptions: defaultScreenOptions
    }),
    state = _ref2.state,
    descriptors = _ref2.descriptors,
    navigation = _ref2.navigation,
    NavigationContent = _ref2.NavigationContent;
  React.useEffect(function () {
    var _navigation$addListen;
    return ((_navigation$addListen = navigation.addListener) === null || _navigation$addListen === void 0 ? void 0 : _navigation$addListen.call(navigation, 'tabPress', function (e) {
        var isFocused = navigation.isFocused();
        requestAnimationFrame(function () {
          if (state.index > 0 && isFocused && !e.defaultPrevented) {
            navigation.dispatch(Object.assign({}, _native.StackActions.popToTop(), {
              target: state.key
            }));
          }
        });
      })
    );
  }, [navigation, state.index, state.key]);
  return React.createElement(NavigationContent, null, React.createElement(_StackView.default, _extends({}, rest, {
    state: state,
    descriptors: descriptors,
    navigation: navigation
  })));
}
var _default = (0, _native.createNavigatorFactory)(StackNavigator);
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfbmF0aXZlIiwicmVxdWlyZSIsIlJlYWN0IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJfd2Fybk9uY2UiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX1N0YWNrVmlldyIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwiY2FjaGUiLCJoYXMiLCJnZXQiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJfZXh0ZW5kcyIsImFzc2lnbiIsImJpbmQiLCJ0YXJnZXQiLCJpIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwic291cmNlIiwiYXBwbHkiLCJTdGFja05hdmlnYXRvciIsIl9yZWYiLCJpZCIsImluaXRpYWxSb3V0ZU5hbWUiLCJjaGlsZHJlbiIsInNjcmVlbkxpc3RlbmVycyIsInNjcmVlbk9wdGlvbnMiLCJyZXN0IiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzMiIsIl9leGNsdWRlZCIsIm1vZGUiLCJoZWFkZXJNb2RlIiwia2V5Ym9hcmRIYW5kbGluZ0VuYWJsZWQiLCJ1bmRlZmluZWQiLCJkZWZhdWx0U2NyZWVuT3B0aW9ucyIsInByZXNlbnRhdGlvbiIsImhlYWRlclNob3duIiwiX3JlZjIiLCJ1c2VOYXZpZ2F0aW9uQnVpbGRlciIsIlN0YWNrUm91dGVyIiwic3RhdGUiLCJkZXNjcmlwdG9ycyIsIm5hdmlnYXRpb24iLCJOYXZpZ2F0aW9uQ29udGVudCIsInVzZUVmZmVjdCIsIl9uYXZpZ2F0aW9uJGFkZExpc3RlbiIsImFkZExpc3RlbmVyIiwiZSIsImlzRm9jdXNlZCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImluZGV4IiwiZGVmYXVsdFByZXZlbnRlZCIsImRpc3BhdGNoIiwiU3RhY2tBY3Rpb25zIiwicG9wVG9Ub3AiLCJjcmVhdGVFbGVtZW50IiwiX2RlZmF1bHQiLCJjcmVhdGVOYXZpZ2F0b3JGYWN0b3J5IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9uYXZpZ2F0b3JzL2NyZWF0ZVN0YWNrTmF2aWdhdG9yLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsSUFBQUEsT0FBQSxHQUFBQyxPQUFBO0FBWUEsSUFBQUMsS0FBQSxHQUFBQyx1QkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUcsU0FBQSxHQUFBQyxzQkFBQSxDQUFBSixPQUFBO0FBUUEsSUFBQUssVUFBQSxHQUFBRCxzQkFBQSxDQUFBSixPQUFBO0FBQWlELFNBQUFJLHVCQUFBRSxHQUFBO0VBQUEsT0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQTtJQUFBRSxPQUFBLEVBQUFGO0VBQUE7QUFBQTtBQUFBLFNBQUFHLHlCQUFBQyxXQUFBO0VBQUEsV0FBQUMsT0FBQTtFQUFBLElBQUFDLGlCQUFBLE9BQUFELE9BQUE7RUFBQSxJQUFBRSxnQkFBQSxPQUFBRixPQUFBO0VBQUEsUUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLFdBQUE7SUFBQSxPQUFBQSxXQUFBLEdBQUFHLGdCQUFBLEdBQUFELGlCQUFBO0VBQUEsR0FBQUYsV0FBQTtBQUFBO0FBQUEsU0FBQVIsd0JBQUFJLEdBQUEsRUFBQUksV0FBQTtFQUFBLEtBQUFBLFdBQUEsSUFBQUosR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUE7SUFBQSxPQUFBRCxHQUFBO0VBQUE7RUFBQSxJQUFBQSxHQUFBLG9CQUFBQSxHQUFBLHdCQUFBQSxHQUFBO0lBQUE7TUFBQUUsT0FBQSxFQUFBRjtJQUFBO0VBQUE7RUFBQSxJQUFBUSxLQUFBLEdBQUFMLHdCQUFBLENB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