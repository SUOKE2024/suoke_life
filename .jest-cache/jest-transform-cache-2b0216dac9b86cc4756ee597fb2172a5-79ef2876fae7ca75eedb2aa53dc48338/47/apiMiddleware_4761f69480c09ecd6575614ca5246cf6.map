{"version":3,"names":["_uiSlice","require","cov_58h9qnwlf","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","apiMiddleware","exports","store","next","action","_ref","endsWith","console","log","shouldShowSuccessNotification","message","getSuccessMessage","dispatch","showSuccessNotification","error","payload","errorMessage","showErrorNotification","actionType","successNotificationActions","some","pattern","includes","split","messageMap","_ref2","Object","entries","_ref3","_slicedToArray2","default","_default"],"sources":["apiMiddleware.ts"],"sourcesContent":["import { Middleware } from '@reduxjs/toolkit';\nimport {\n  showErrorNotification,\n  showSuccessNotification,\n} from '../slices/uiSlice';\n\n// API中间件 - 统一处理API请求和响应\nexport const apiMiddleware: Middleware = (store) => (next) => (action: any) => {\n  // 检查是否是异步action\n  if (action.type && typeof action.type === 'string') {\n    const { type } = action;\n\n    // 处理pending状态\n    if (type.endsWith('/pending')) {\n      // 可以在这里添加全局loading逻辑\n      console.log('API请求开始:', type);\n    }\n\n    // 处理fulfilled状态\n    if (type.endsWith('/fulfilled')) {\n      console.log('API请求成功:', type);\n\n      // 对于某些操作显示成功通知\n      if (shouldShowSuccessNotification(type)) {\n        const message = getSuccessMessage(type);\n        if (message) {\n          store.dispatch(showSuccessNotification(message));\n        }\n      }\n    }\n\n    // 处理rejected状态\n    if (type.endsWith('/rejected')) {\n      console.error('API请求失败:', type, action.payload);\n\n      // 显示错误通知\n      const errorMessage = action.payload || '操作失败，请稍后重试';\n      store.dispatch(showErrorNotification(errorMessage));\n    }\n  }\n\n  return next(action);\n};\n\n// 判断是否应该显示成功通知\nfunction shouldShowSuccessNotification(actionType: string): boolean {\n  const successNotificationActions = [\n    'auth/login/fulfilled',\n    'auth/register/fulfilled',\n    'user/updateProfile/fulfilled',\n    'diagnosis/completeSession/fulfilled',\n    'health/syncData/fulfilled',\n  ];\n\n  return successNotificationActions.some((pattern) =>\n    actionType.includes(pattern.split('/')[0])\n  );\n}\n\n// 获取成功消息\nfunction getSuccessMessage(actionType: string): string | null {\n  const messageMap: Record<string, string> = {\n    'auth/login/fulfilled': '登录成功',\n    'auth/register/fulfilled': '注册成功',\n    'auth/logout/fulfilled': '退出登录成功',\n    'user/updateProfile/fulfilled': '资料更新成功',\n    'diagnosis/completeSession/fulfilled': '诊断完成',\n    'health/syncData/fulfilled': '健康数据同步成功',\n  };\n\n  for (const [pattern, message] of Object.entries(messageMap)) {\n    if (actionType.includes(pattern)) {\n      return message;\n    }\n  }\n\n  return null;\n}\n\nexport default apiMiddleware;\n"],"mappings":";;;;;;AACA,IAAAA,QAAA,GAAAC,OAAA;AAG2B,SAAAC,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;MAAA;QAAAC,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAO,SAAA;MAAA;QAAAD,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;IAAA;IAAAW,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,eAAA;IAAArB,IAAA;EAAA;EAAA,IAAAsB,QAAA,GAAArB,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAmB,QAAA,CAAAvB,IAAA,KAAAuB,QAAA,CAAAvB,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAAsB,QAAA,CAAAvB,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAmB,cAAA,GAAAD,QAAA,CAAAvB,IAAA;EAAA;IAAAD,aAAA,YAAAA,CAAA;MAAA,OAAAyB,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAzB,aAAA;AAAAA,aAAA,GAAAoB,CAAA;AAGpB,IAAMM,aAAyB,GAAAC,OAAA,CAAAD,aAAA,GAAG,SAA5BA,aAAyBA,CAAIE,KAAK,EAAK;EAAA5B,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAoB,CAAA;EAAA,iBAACS,IAAI,EAAK;IAAA7B,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAAA,iBAACU,MAAW,EAAK;MAAA9B,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAE7E,IAAI,CAAApB,aAAA,GAAAsB,CAAA,UAAAQ,MAAM,CAACb,IAAI,MAAAjB,aAAA,GAAAsB,CAAA,UAAI,OAAOQ,MAAM,CAACb,IAAI,KAAK,QAAQ,GAAE;QAAAjB,aAAA,GAAAsB,CAAA;QAClD,IAAAS,IAAA,IAAA/B,aAAA,GAAAoB,CAAA,OAAiBU,MAAM;UAAfb,IAAI,GAAAc,IAAA,CAAJd,IAAI;QAAYjB,aAAA,GAAAoB,CAAA;QAGxB,IAAIH,IAAI,CAACe,QAAQ,CAAC,UAAU,CAAC,EAAE;UAAAhC,aAAA,GAAAsB,CAAA;UAAAtB,aAAA,GAAAoB,CAAA;UAE7Ba,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEjB,IAAI,CAAC;QAC/B,CAAC;UAAAjB,aAAA,GAAAsB,CAAA;QAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAGD,IAAIH,IAAI,CAACe,QAAQ,CAAC,YAAY,CAAC,EAAE;UAAAhC,aAAA,GAAAsB,CAAA;UAAAtB,aAAA,GAAAoB,CAAA;UAC/Ba,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEjB,IAAI,CAAC;UAACjB,aAAA,GAAAoB,CAAA;UAG9B,IAAIe,6BAA6B,CAAClB,IAAI,CAAC,EAAE;YAAAjB,aAAA,GAAAsB,CAAA;YACvC,IAAMc,OAAO,IAAApC,aAAA,GAAAoB,CAAA,QAAGiB,iBAAiB,CAACpB,IAAI,CAAC;YAACjB,aAAA,GAAAoB,CAAA;YACxC,IAAIgB,OAAO,EAAE;cAAApC,aAAA,GAAAsB,CAAA;cAAAtB,aAAA,GAAAoB,CAAA;cACXQ,KAAK,CAACU,QAAQ,CAAC,IAAAC,gCAAuB,EAACH,OAAO,CAAC,CAAC;YAClD,CAAC;cAAApC,aAAA,GAAAsB,CAAA;YAAA;UACH,CAAC;YAAAtB,aAAA,GAAAsB,CAAA;UAAA;QACH,CAAC;UAAAtB,aAAA,GAAAsB,CAAA;QAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAGD,IAAIH,IAAI,CAACe,QAAQ,CAAC,WAAW,CAAC,EAAE;UAAAhC,aAAA,GAAAsB,CAAA;UAAAtB,aAAA,GAAAoB,CAAA;UAC9Ba,OAAO,CAACO,KAAK,CAAC,UAAU,EAAEvB,IAAI,EAAEa,MAAM,CAACW,OAAO,CAAC;UAG/C,IAAMC,YAAY,IAAA1C,aAAA,GAAAoB,CAAA,QAAG,CAAApB,aAAA,GAAAsB,CAAA,UAAAQ,MAAM,CAACW,OAAO,MAAAzC,aAAA,GAAAsB,CAAA,UAAI,YAAY;UAACtB,aAAA,GAAAoB,CAAA;UACpDQ,KAAK,CAACU,QAAQ,CAAC,IAAAK,8BAAqB,EAACD,YAAY,CAAC,CAAC;QACrD,CAAC;UAAA1C,aAAA,GAAAsB,CAAA;QAAA;MACH,CAAC;QAAAtB,aAAA,GAAAsB,CAAA;MAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAED,OAAOS,IAAI,CAACC,MAAM,CAAC;IACrB,CAAC;EAAD,CAAC;AAAD,CAAC;AAGD,SAASK,6BAA6BA,CAACS,UAAkB,EAAW;EAAA5C,aAAA,GAAAqB,CAAA;EAClE,IAAMwB,0BAA0B,IAAA7C,aAAA,GAAAoB,CAAA,QAAG,CACjC,sBAAsB,EACtB,yBAAyB,EACzB,8BAA8B,EAC9B,qCAAqC,EACrC,2BAA2B,CAC5B;EAACpB,aAAA,GAAAoB,CAAA;EAEF,OAAOyB,0BAA0B,CAACC,IAAI,CAAC,UAACC,OAAO,EAC7C;IAAA/C,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAAA,OAAAwB,UAAU,CAACI,QAAQ,CAACD,OAAO,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAAD,CAC3C,CAAC;AACH;AAGA,SAASZ,iBAAiBA,CAACO,UAAkB,EAAiB;EAAA5C,aAAA,GAAAqB,CAAA;EAC5D,IAAM6B,UAAkC,IAAAlD,aAAA,GAAAoB,CAAA,QAAG;IACzC,sBAAsB,EAAE,MAAM;IAC9B,yBAAyB,EAAE,MAAM;IACjC,uBAAuB,EAAE,QAAQ;IACjC,8BAA8B,EAAE,QAAQ;IACxC,qCAAqC,EAAE,MAAM;IAC7C,2BAA2B,EAAE;EAC/B,CAAC;EAACpB,aAAA,GAAAoB,CAAA;EAEF,SAAA+B,KAAA,IAAiCC,MAAM,CAACC,OAAO,CAACH,UAAU,CAAC,EAAE;IAAA,IAAAI,KAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAL,KAAA;IAAA,IAAjDJ,OAAO,GAAAO,KAAA;IAAA,IAAElB,OAAO,GAAAkB,KAAA;IAAAtD,aAAA,GAAAoB,CAAA;IAC1B,IAAIwB,UAAU,CAACI,QAAQ,CAACD,OAAO,CAAC,EAAE;MAAA/C,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAChC,OAAOgB,OAAO;IAChB,CAAC;MAAApC,aAAA,GAAAsB,CAAA;IAAA;EACH;EAACtB,aAAA,GAAAoB,CAAA;EAED,OAAO,IAAI;AACb;AAAC,IAAAqC,QAAA,GAAA9B,OAAA,CAAA6B,OAAA,GAEc9B,aAAa","ignoreList":[]}