2772848d8ae163377fa7adc54711f275
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SearchBar = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _Icon = _interopRequireDefault(require("../../components/common/Icon"));
var _theme = require("../../constants/theme");
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function cov_12s2ekbhwv() {
  var path = "/Users/songxu/Developer/suoke_life/src/screens/components/SearchBar.tsx";
  var hash = "82a9c9c8a13182b3b932a492bb98578b1074f203";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/songxu/Developer/suoke_life/src/screens/components/SearchBar.tsx",
    statementMap: {
      "0": {
        start: {
          line: 22,
          column: 25
        },
        end: {
          line: 97,
          column: 2
        }
      },
      "1": {
        start: {
          line: 31,
          column: 19
        },
        end: {
          line: 31,
          column: 42
        }
      },
      "2": {
        start: {
          line: 32,
          column: 20
        },
        end: {
          line: 32,
          column: 57
        }
      },
      "3": {
        start: {
          line: 34,
          column: 2
        },
        end: {
          line: 40,
          column: 18
        }
      },
      "4": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "5": {
        start: {
          line: 36,
          column: 6
        },
        end: {
          line: 38,
          column: 14
        }
      },
      "6": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 34
        }
      },
      "7": {
        start: {
          line: 42,
          column: 22
        },
        end: {
          line: 48,
          column: 3
        }
      },
      "8": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 46,
          column: 15
        }
      },
      "9": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 16
        }
      },
      "10": {
        start: {
          line: 50,
          column: 21
        },
        end: {
          line: 56,
          column: 3
        }
      },
      "11": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 54,
          column: 15
        }
      },
      "12": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 15
        }
      },
      "13": {
        start: {
          line: 58,
          column: 22
        },
        end: {
          line: 61,
          column: 3
        }
      },
      "14": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 21
        }
      },
      "15": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 30
        }
      },
      "16": {
        start: {
          line: 63,
          column: 2
        },
        end: {
          line: 96,
          column: 4
        }
      },
      "17": {
        start: {
          line: 99,
          column: 0
        },
        end: {
          line: 99,
          column: 36
        }
      },
      "18": {
        start: {
          line: 101,
          column: 15
        },
        end: {
          line: 127,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 22,
            column: 46
          },
          end: {
            line: 22,
            column: 47
          }
        },
        loc: {
          start: {
            line: 30,
            column: 6
          },
          end: {
            line: 97,
            column: 1
          }
        },
        line: 30
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 34,
            column: 13
          }
        },
        loc: {
          start: {
            line: 34,
            column: 18
          },
          end: {
            line: 40,
            column: 3
          }
        },
        line: 34
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 36,
            column: 17
          },
          end: {
            line: 36,
            column: 18
          }
        },
        loc: {
          start: {
            line: 36,
            column: 23
          },
          end: {
            line: 38,
            column: 7
          }
        },
        line: 36
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 42,
            column: 22
          },
          end: {
            line: 42,
            column: 23
          }
        },
        loc: {
          start: {
            line: 42,
            column: 28
          },
          end: {
            line: 48,
            column: 3
          }
        },
        line: 42
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 50,
            column: 21
          },
          end: {
            line: 50,
            column: 22
          }
        },
        loc: {
          start: {
            line: 50,
            column: 27
          },
          end: {
            line: 56,
            column: 3
          }
        },
        line: 50
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 58,
            column: 22
          },
          end: {
            line: 58,
            column: 23
          }
        },
        loc: {
          start: {
            line: 58,
            column: 28
          },
          end: {
            line: 61,
            column: 3
          }
        },
        line: 58
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 2
          },
          end: {
            line: 25,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 25,
            column: 27
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 2
          },
          end: {
            line: 26,
            column: 19
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 26,
            column: 14
          },
          end: {
            line: 26,
            column: 19
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 90,
            column: 7
          },
          end: {
            line: 94,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 7
          },
          end: {
            line: 90,
            column: 23
          }
        }, {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 93,
            column: 27
          }
        }],
        line: 90
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "82a9c9c8a13182b3b932a492bb98578b1074f203"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_12s2ekbhwv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_12s2ekbhwv();
var SearchBar = exports.SearchBar = (cov_12s2ekbhwv().s[0]++, (0, _react.memo)(function (_ref) {
  var value = _ref.value,
    onChangeText = _ref.onChangeText,
    _ref$placeholder = _ref.placeholder,
    placeholder = _ref$placeholder === void 0 ? (cov_12s2ekbhwv().b[0][0]++, '搜索聊天记录...') : _ref$placeholder,
    _ref$autoFocus = _ref.autoFocus,
    autoFocus = _ref$autoFocus === void 0 ? (cov_12s2ekbhwv().b[1][0]++, false) : _ref$autoFocus,
    onFocus = _ref.onFocus,
    onBlur = _ref.onBlur,
    style = _ref.style;
  cov_12s2ekbhwv().f[0]++;
  var inputRef = (cov_12s2ekbhwv().s[1]++, (0, _react.useRef)(null));
  var scaleAnim = (cov_12s2ekbhwv().s[2]++, (0, _react.useRef)(new _reactNative.Animated.Value(1)).current);
  cov_12s2ekbhwv().s[3]++;
  (0, _react.useEffect)(function () {
    cov_12s2ekbhwv().f[1]++;
    cov_12s2ekbhwv().s[4]++;
    if (autoFocus) {
      cov_12s2ekbhwv().b[2][0]++;
      cov_12s2ekbhwv().s[5]++;
      setTimeout(function () {
        var _inputRef$current;
        cov_12s2ekbhwv().f[2]++;
        cov_12s2ekbhwv().s[6]++;
        (_inputRef$current = inputRef.current) == null || _inputRef$current.focus();
      }, 100);
    } else {
      cov_12s2ekbhwv().b[2][1]++;
    }
  }, [autoFocus]);
  cov_12s2ekbhwv().s[7]++;
  var handleFocus = function handleFocus() {
    cov_12s2ekbhwv().f[3]++;
    cov_12s2ekbhwv().s[8]++;
    _reactNative.Animated.spring(scaleAnim, {
      toValue: 1.02,
      useNativeDriver: true
    }).start();
    cov_12s2ekbhwv().s[9]++;
    onFocus == null || onFocus();
  };
  cov_12s2ekbhwv().s[10]++;
  var handleBlur = function handleBlur() {
    cov_12s2ekbhwv().f[4]++;
    cov_12s2ekbhwv().s[11]++;
    _reactNative.Animated.spring(scaleAnim, {
      toValue: 1,
      useNativeDriver: true
    }).start();
    cov_12s2ekbhwv().s[12]++;
    onBlur == null || onBlur();
  };
  cov_12s2ekbhwv().s[13]++;
  var handleClear = function handleClear() {
    var _inputRef$current2;
    cov_12s2ekbhwv().f[5]++;
    cov_12s2ekbhwv().s[14]++;
    onChangeText('');
    cov_12s2ekbhwv().s[15]++;
    (_inputRef$current2 = inputRef.current) == null || _inputRef$current2.focus();
  };
  cov_12s2ekbhwv().s[16]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.Animated.View, {
    style: [styles.container, style, {
      transform: [{
        scale: scaleAnim
      }]
    }],
    children: [(0, _jsxRuntime.jsx)(_Icon.default, {
      name: "search",
      size: 20,
      color: _theme.colors.textSecondary,
      style: styles.searchIcon
    }), (0, _jsxRuntime.jsx)(_reactNative.TextInput, {
      ref: inputRef,
      style: styles.input,
      value: value,
      onChangeText: onChangeText,
      placeholder: placeholder,
      placeholderTextColor: _theme.colors.textSecondary,
      onFocus: handleFocus,
      onBlur: handleBlur,
      returnKeyType: "search",
      clearButtonMode: "never",
      autoCorrect: false,
      autoCapitalize: "none"
    }), (cov_12s2ekbhwv().b[3][0]++, value.length > 0) && (cov_12s2ekbhwv().b[3][1]++, (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
      onPress: handleClear,
      style: styles.clearButton,
      children: (0, _jsxRuntime.jsx)(_Icon.default, {
        name: "close-circle",
        size: 20,
        color: _theme.colors.textSecondary
      })
    }))]
  });
}));
cov_12s2ekbhwv().s[17]++;
SearchBar.displayName = 'SearchBar';
var styles = (cov_12s2ekbhwv().s[18]++, _reactNative.StyleSheet.create({
  container: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: _theme.colors.surface,
    borderRadius: _theme.borderRadius.lg,
    paddingHorizontal: _theme.spacing.md,
    paddingVertical: _theme.spacing.sm,
    marginHorizontal: _theme.spacing.md,
    marginVertical: _theme.spacing.sm,
    borderWidth: 1,
    borderColor: _theme.colors.border
  },
  searchIcon: {
    marginRight: _theme.spacing.sm
  },
  input: {
    flex: 1,
    fontSize: _theme.fonts.size.md,
    color: _theme.colors.text,
    paddingVertical: 0
  },
  clearButton: {
    marginLeft: _theme.spacing.sm,
    padding: _theme.spacing.xs
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfcmVhY3ROYXRpdmUiLCJfSWNvbiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfdGhlbWUiLCJfanN4UnVudGltZSIsImUiLCJ0IiwiV2Vha01hcCIsInIiLCJuIiwiX19lc01vZHVsZSIsIm8iLCJpIiwiZiIsIl9fcHJvdG9fXyIsImRlZmF1bHQiLCJoYXMiLCJnZXQiLCJzZXQiLCJfdCIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiY292XzEyczJla2Jod3YiLCJwYXRoIiwiaGFzaCIsImdsb2JhbCIsIkZ1bmN0aW9uIiwiZ2N2IiwiY292ZXJhZ2VEYXRhIiwic3RhdGVtZW50TWFwIiwic3RhcnQiLCJsaW5lIiwiY29sdW1uIiwiZW5kIiwiZm5NYXAiLCJuYW1lIiwiZGVjbCIsImxvYyIsImJyYW5jaE1hcCIsInR5cGUiLCJsb2NhdGlvbnMiLCJ1bmRlZmluZWQiLCJzIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJTZWFyY2hCYXIiLCJleHBvcnRzIiwibWVtbyIsIl9yZWYiLCJ2YWx1ZSIsIm9uQ2hhbmdlVGV4dCIsIl9yZWYkcGxhY2Vob2xkZXIiLCJwbGFjZWhvbGRlciIsIl9yZWYkYXV0b0ZvY3VzIiwiYXV0b0ZvY3VzIiwib25Gb2N1cyIsIm9uQmx1ciIsInN0eWxlIiwiaW5wdXRSZWYiLCJ1c2VSZWYiLCJzY2FsZUFuaW0iLCJBbmltYXRlZCIsIlZhbHVlIiwiY3VycmVudCIsInVzZUVmZmVjdCIsInNldFRpbWVvdXQiLCJfaW5wdXRSZWYkY3VycmVudCIsImZvY3VzIiwiaGFuZGxlRm9jdXMiLCJzcHJpbmciLCJ0b1ZhbHVlIiwidXNlTmF0aXZlRHJpdmVyIiwiaGFuZGxlQmx1ciIsImhhbmRsZUNsZWFyIiwiX2lucHV0UmVmJGN1cnJlbnQyIiwianN4cyIsIlZpZXciLCJzdHlsZXMiLCJjb250YWluZXIiLCJ0cmFuc2Zvcm0iLCJzY2FsZSIsImNoaWxkcmVuIiwianN4Iiwic2l6ZSIsImNvbG9yIiwiY29sb3JzIiwidGV4dFNlY29uZGFyeSIsInNlYXJjaEljb24iLCJUZXh0SW5wdXQiLCJyZWYiLCJpbnB1dCIsInBsYWNlaG9sZGVyVGV4dENvbG9yIiwicmV0dXJuS2V5VHlwZSIsImNsZWFyQnV0dG9uTW9kZSIsImF1dG9Db3JyZWN0IiwiYXV0b0NhcGl0YWxpemUiLCJsZW5ndGgiLCJUb3VjaGFibGVPcGFjaXR5Iiwib25QcmVzcyIsImNsZWFyQnV0dG9uIiwiZGlzcGxheU5hbWUiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiZmxleERpcmVjdGlvbiIsImFsaWduSXRlbXMiLCJiYWNrZ3JvdW5kQ29sb3IiLCJzdXJmYWNlIiwiYm9yZGVyUmFkaXVzIiwibGciLCJwYWRkaW5nSG9yaXpvbnRhbCIsInNwYWNpbmciLCJtZCIsInBhZGRpbmdWZXJ0aWNhbCIsInNtIiwibWFyZ2luSG9yaXpvbnRhbCIsIm1hcmdpblZlcnRpY2FsIiwiYm9yZGVyV2lkdGgiLCJib3JkZXJDb2xvciIsImJvcmRlciIsIm1hcmdpblJpZ2h0IiwiZmxleCIsImZvbnRTaXplIiwiZm9udHMiLCJ0ZXh0IiwibWFyZ2luTGVmdCIsInBhZGRpbmciLCJ4cyJdLCJzb3VyY2VzIjpbIlNlYXJjaEJhci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IG1lbW8sIHVzZVJlZiwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtcbiAgVmlldyxcbiAgVGV4dElucHV0LFxuICBTdHlsZVNoZWV0LFxuICBUb3VjaGFibGVPcGFjaXR5LFxuICBBbmltYXRlZCxcbn0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCBJY29uIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvY29tbW9uL0ljb24nO1xuaW1wb3J0IHsgY29sb3JzLCBzcGFjaW5nLCBmb250cywgYm9yZGVyUmFkaXVzIH0gZnJvbSAnLi4vLi4vY29uc3RhbnRzL3RoZW1lJztcblxuaW50ZXJmYWNlIFNlYXJjaEJhclByb3BzIHtcbiAgdmFsdWU6IHN0cmluZztcbiAgb25DaGFuZ2VUZXh0OiAodGV4dDogc3RyaW5nKSA9PiB2b2lkO1xuICBwbGFjZWhvbGRlcj86IHN0cmluZztcbiAgYXV0b0ZvY3VzPzogYm9vbGVhbjtcbiAgb25Gb2N1cz86ICgpID0+IHZvaWQ7XG4gIG9uQmx1cj86ICgpID0+IHZvaWQ7XG4gIHN0eWxlPzogYW55O1xufVxuXG5leHBvcnQgY29uc3QgU2VhcmNoQmFyID0gbWVtbzxTZWFyY2hCYXJQcm9wcz4oKHtcbiAgdmFsdWUsXG4gIG9uQ2hhbmdlVGV4dCxcbiAgcGxhY2Vob2xkZXIgPSAn5pCc57Si6IGK5aSp6K6w5b2VLi4uJyxcbiAgYXV0b0ZvY3VzID0gZmFsc2UsXG4gIG9uRm9jdXMsXG4gIG9uQmx1cixcbiAgc3R5bGUsXG59KSA9PiB7XG4gIGNvbnN0IGlucHV0UmVmID0gdXNlUmVmPFRleHRJbnB1dD4obnVsbCk7XG4gIGNvbnN0IHNjYWxlQW5pbSA9IHVzZVJlZihuZXcgQW5pbWF0ZWQuVmFsdWUoMSkpLmN1cnJlbnQ7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoYXV0b0ZvY3VzKSB7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgaW5wdXRSZWYuY3VycmVudD8uZm9jdXMoKTtcbiAgICAgIH0sIDEwMCk7XG4gICAgfVxuICB9LCBbYXV0b0ZvY3VzXSk7XG5cbiAgY29uc3QgaGFuZGxlRm9jdXMgPSAoKSA9PiB7XG4gICAgQW5pbWF0ZWQuc3ByaW5nKHNjYWxlQW5pbSwge1xuICAgICAgdG9WYWx1ZTogMS4wMixcbiAgICAgIHVzZU5hdGl2ZURyaXZlcjogdHJ1ZSxcbiAgICB9KS5zdGFydCgpO1xuICAgIG9uRm9jdXM/LigpO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZUJsdXIgPSAoKSA9PiB7XG4gICAgQW5pbWF0ZWQuc3ByaW5nKHNjYWxlQW5pbSwge1xuICAgICAgdG9WYWx1ZTogMSxcbiAgICAgIHVzZU5hdGl2ZURyaXZlcjogdHJ1ZSxcbiAgICB9KS5zdGFydCgpO1xuICAgIG9uQmx1cj8uKCk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlQ2xlYXIgPSAoKSA9PiB7XG4gICAgb25DaGFuZ2VUZXh0KCcnKTtcbiAgICBpbnB1dFJlZi5jdXJyZW50Py5mb2N1cygpO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPEFuaW1hdGVkLlZpZXdcbiAgICAgIHN0eWxlPXtbXG4gICAgICAgIHN0eWxlcy5jb250YWluZXIsXG4gICAgICAgIHN0eWxlLFxuICAgICAgICB7XG4gICAgICAgICAgdHJhbnNmb3JtOiBbeyBzY2FsZTogc2NhbGVBbmltIH1dLFxuICAgICAgICB9LFxuICAgICAgXX1cbiAgICA+XG4gICAgICA8SWNvbiBuYW1lPVwic2VhcmNoXCIgc2l6ZT17MjB9IGNvbG9yPXtjb2xvcnMudGV4dFNlY29uZGFyeX0gc3R5bGU9e3N0eWxlcy5zZWFyY2hJY29ufSAvPlxuICAgICAgXG4gICAgICA8VGV4dElucHV0XG4gICAgICAgIHJlZj17aW5wdXRSZWZ9XG4gICAgICAgIHN0eWxlPXtzdHlsZXMuaW5wdXR9XG4gICAgICAgIHZhbHVlPXt2YWx1ZX1cbiAgICAgICAgb25DaGFuZ2VUZXh0PXtvbkNoYW5nZVRleHR9XG4gICAgICAgIHBsYWNlaG9sZGVyPXtwbGFjZWhvbGRlcn1cbiAgICAgICAgcGxhY2Vob2xkZXJUZXh0Q29sb3I9e2NvbG9ycy50ZXh0U2Vjb25kYXJ5fVxuICAgICAgICBvbkZvY3VzPXtoYW5kbGVGb2N1c31cbiAgICAgICAgb25CbHVyPXtoYW5kbGVCbHVyfVxuICAgICAgICByZXR1cm5LZXlUeXBlPVwic2VhcmNoXCJcbiAgICAgICAgY2xlYXJCdXR0b25Nb2RlPVwibmV2ZXJcIlxuICAgICAgICBhdXRvQ29ycmVjdD17ZmFsc2V9XG4gICAgICAgIGF1dG9DYXBpdGFsaXplPVwibm9uZVwiXG4gICAgICAvPlxuXG4gICAgICB7dmFsdWUubGVuZ3RoID4gMCAmJiAoXG4gICAgICAgIDxUb3VjaGFibGVPcGFjaXR5IG9uUHJlc3M9e2hhbmRsZUNsZWFyfSBzdHlsZT17c3R5bGVzLmNsZWFyQnV0dG9ufT5cbiAgICAgICAgICA8SWNvbiBuYW1lPVwiY2xvc2UtY2lyY2xlXCIgc2l6ZT17MjB9IGNvbG9yPXtjb2xvcnMudGV4dFNlY29uZGFyeX0gLz5cbiAgICAgICAgPC9Ub3VjaGFibGVPcGFjaXR5PlxuICAgICAgKX1cbiAgICA8L0FuaW1hdGVkLlZpZXc+XG4gICk7XG59KTtcblxuU2VhcmNoQmFyLmRpc3BsYXlOYW1lID0gJ1NlYXJjaEJhcic7XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgY29udGFpbmVyOiB7XG4gICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgYmFja2dyb3VuZENvbG9yOiBjb2xvcnMuc3VyZmFjZSxcbiAgICBib3JkZXJSYWRpdXM6IGJvcmRlclJhZGl1cy5sZyxcbiAgICBwYWRkaW5nSG9yaXpvbnRhbDogc3BhY2luZy5tZCxcbiAgICBwYWRkaW5nVmVydGljYWw6IHNwYWNpbmcuc20sXG4gICAgbWFyZ2luSG9yaXpvbnRhbDogc3BhY2luZy5tZCxcbiAgICBtYXJnaW5WZXJ0aWNhbDogc3BhY2luZy5zbSxcbiAgICBib3JkZXJXaWR0aDogMSxcbiAgICBib3JkZXJDb2xvcjogY29sb3JzLmJvcmRlcixcbiAgfSxcbiAgc2VhcmNoSWNvbjoge1xuICAgIG1hcmdpblJpZ2h0OiBzcGFjaW5nLnNtLFxuICB9LFxuICBpbnB1dDoge1xuICAgIGZsZXg6IDEsXG4gICAgZm9udFNpemU6IGZvbnRzLnNpemUubWQsXG4gICAgY29sb3I6IGNvbG9ycy50ZXh0LFxuICAgIHBhZGRpbmdWZXJ0aWNhbDogMCxcbiAgfSxcbiAgY2xlYXJCdXR0b246IHtcbiAgICBtYXJnaW5MZWZ0OiBzcGFjaW5nLnNtLFxuICAgIHBhZGRpbmc6IHNwYWNpbmcueHMsXG4gIH0sXG59KTsgIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFlBQUEsR0FBQUQsT0FBQTtBQU9BLElBQUFFLEtBQUEsR0FBQUMsc0JBQUEsQ0FBQUgsT0FBQTtBQUNBLElBQUFJLE1BQUEsR0FBQUosT0FBQTtBQUE2RSxJQUFBSyxXQUFBLEdBQUFMLE9BQUE7QUFBQSxTQUFBRCx3QkFBQU8sQ0FBQSxFQUFBQyxDQUFBLDZCQUFBQyxPQUFBLE1BQUFDLENBQUEsT0FBQUQsT0FBQSxJQUFBRSxDQUFBLE9BQUFGLE9BQUEsWUFBQVQsdUJBQUEsWUFBQUEsd0JBQUFPLENBQUEsRUFBQUMsQ0FBQSxTQUFBQSxDQUFBLElBQUFELENBQUEsSUFBQUEsQ0FBQSxDQUFBSyxVQUFBLFNBQUFMLENBQUEsTUFBQU0sQ0FBQSxFQUFBQyxDQUFBLEVBQUFDLENBQUEsS0FBQUMsU0FBQSxRQUFBQyxPQUFBLEVBQUFWLENBQUEsaUJBQUFBLENBQUEsdUJBQUFBLENBQUEseUJBQUFBLENBQUEsU0FBQVEsQ0FBQSxNQUFBRixDQUFBLEdBQUFMLENBQUEsR0FBQUcsQ0FBQSxHQUFBRCxDQUFBLFFBQUFHLENBQUEsQ0FBQUssR0FBQSxDQUFBWCxDQUFBLFVBQUFNLENBQUEsQ0FBQU0sR0FBQSxDQUFBWixDQUFBLEdBQUFNLENBQUEsQ0FBQU8sR0FBQSxDQUFBYixDQUFBLEVBQUFRLENBQUEsY0FBQU0sRUFBQSxJQUFBZCxDQUFBLGdCQUFBYyxFQUFBLE9BQUFDLGNBQUEsQ0FBQUMsSUFBQSxDQUFBaEIsQ0FBQSxFQUFBYyxFQUFBLE9BQUFQLENBQUEsSUFBQUQsQ0FBQSxHQUFBVyxNQUFBLENBQUFDLGNBQUEsS0FBQUQsTUFBQSxDQUFBRSx3QkFBQSxDQUFBbkIsQ0FBQSxFQUFBYyxFQUFBLE9BQUFQLENBQUEsQ0FBQUssR0FBQSxJQUFBTCxDQUFBLENBQUFNLEdBQUEsSUFBQVAsQ0FBQSxDQUFBRSxDQUFBLEVBQUFNLEVBQUEsRUFBQVAsQ0FBQSxJQUFBQyxDQUFBLENBQUFNLEVBQUEsSUFBQWQsQ0FBQSxDQUFBYyxFQUFBLFdBQUFOLENBQUEsS0FBQVIsQ0FBQSxFQUFBQyxDQUFBO0FBQUEsU0FBQW1CLGVBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLE1BQUEsT0FBQUMsUUFBQTtFQUFBLElBQUFDLEdBQUE7RUFBQSxJQUFBQyxZQUFBO0lBQUFMLElBQUE7SUFBQU0sWUFBQTtNQUFBO1FBQUFDLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtNQUFBO1FBQUFDLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFPLFNBQUE7TUFBQTtRQUFBRCxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQVcsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQWhDLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBaUMsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsZUFBQTtJQUFBcEIsSUFBQTtFQUFB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