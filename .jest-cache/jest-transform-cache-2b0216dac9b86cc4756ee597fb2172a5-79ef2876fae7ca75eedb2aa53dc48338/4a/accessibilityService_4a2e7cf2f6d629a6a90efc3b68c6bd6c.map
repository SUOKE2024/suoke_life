{"version":3,"names":["AccessibilityService","exports","config","_classCallCheck2","default","cov_3ym1c0xd6","f","s","_createClass2","key","value","_blindAssistance","_asyncToGenerator2","request","response","makeRequest","error","console","Error","blindAssistance","_x","apply","arguments","_signLanguageRecognition","signLanguageRecognition","_x2","_screenReading","screenReading","_x3","_voiceAssistance","voiceAssistance","_x4","_accessibleContent","accessibleContent","_x5","_speechTranslation","speechTranslation","_x6","_configureBackgroundCollection","configureBackgroundCollection","_x7","_triggerHealthAlert","triggerHealthAlert","_x8","_getUserPreferences","userId","action","preferences","fontSize","highContrast","voiceType","speechRate","language","screenReader","signLanguage","enabledFeatures","getUserPreferences","_x9","_updateUserPreferences","success","updateUserPreferences","_x0","_x1","_getSupportedLanguages","languages","code","name","dialects","getSupportedLanguages","_makeRequest","endpoint","data","_this","url","serviceUrl","_loop","attempt","controller","AbortController","timeoutId","setTimeout","abort","timeout","fetch","method","headers","Object","assign","b","apiKey","body","JSON","stringify","signal","clearTimeout","ok","status","statusText","v","json","retryAttempts","Promise","resolve","Math","pow","_ret","_x10","_x11","defaultAccessibilityConfig","accessibilityService","AgentAccessibilityHelper","service","agentType","_processVoiceInput","audioData","length","undefined","context","recognizedText","processVoiceInput","_x12","_x13","_generateVoiceOutput","text","generateVoiceOutput","_x14","_x15","_translateMessage","targetLanguage","translateMessage","_x16","_x17","_x18","_makeContentAccessible","content","targetFormat","contentId","Date","now","contentType","makeContentAccessible","_x19","_x20","_x21","_monitorHealthData","dataTypes","collectionInterval","privacyLevel","collectionId","monitorHealthData","_x22","_x23","_checkHealthAlert","healthData","hasAbnormalData","detectAbnormalHealthData","alertType","checkHealthAlert","_x24","_x25"],"sources":["accessibilityService.ts"],"sourcesContent":["/**\n * 无障碍服务集成模块\n * 为四个智能体提供accessibility-service的各种功能\n */\n\n// 无障碍服务配置\nexport interface AccessibilityConfig {\n  serviceUrl: string;\n  apiKey?: string;\n  timeout: number;\n  retryAttempts: number;\n}\n\n// 用户偏好设置\nexport interface UserPreferences {\n  fontSize: 'small' | 'medium' | 'large' | 'extra-large';\n  highContrast: boolean;\n  voiceType: 'male' | 'female' | 'child';\n  speechRate: number; // 0.5 - 2.0\n  language: string;\n  dialect?: string;\n  screenReader: boolean;\n  signLanguage: boolean;\n  enabledFeatures: string[];\n}\n\n// 导盲服务接口\nexport interface BlindAssistanceRequest {\n  imageData: string; // base64编码的图像数据\n  userId: string;\n  preferences?: UserPreferences;\n  location?: {\n    latitude: number;\n    longitude: number;\n  };\n}\n\nexport interface BlindAssistanceResponse {\n  sceneDescription: string;\n  obstacles: Array<{\n    type: string;\n    distance: number;\n    direction: string;\n    confidence: number;\n  }>;\n  navigationGuidance: string;\n  confidence: number;\n  audioGuidance?: string; // base64编码的音频数据\n}\n\n// 手语识别接口\nexport interface SignLanguageRequest {\n  videoData: string; // base64编码的视频数据\n  userId: string;\n  language: string;\n}\n\nexport interface SignLanguageResponse {\n  text: string;\n  confidence: number;\n  segments: Array<{\n    text: string;\n    startTimeMs: number;\n    endTimeMs: number;\n    confidence: number;\n  }>;\n}\n\n// 屏幕阅读接口\nexport interface ScreenReadingRequest {\n  screenData: string; // base64编码的屏幕截图\n  userId: string;\n  context?: string;\n  preferences?: UserPreferences;\n}\n\nexport interface ScreenReadingResponse {\n  screenDescription: string;\n  elements: Array<{\n    elementType: string;\n    content: string;\n    action: string;\n    location: {\n      x: number;\n      y: number;\n      width: number;\n      height: number;\n    };\n  }>;\n  audioDescription?: string; // base64编码的音频数据\n}\n\n// 语音辅助接口\nexport interface VoiceAssistanceRequest {\n  audioData: string; // base64编码的音频数据\n  userId: string;\n  context?: string;\n  language: string;\n  dialect?: string;\n}\n\nexport interface VoiceAssistanceResponse {\n  recognizedText: string;\n  responseText: string;\n  responseAudio?: string; // base64编码的音频数据\n  confidence: number;\n}\n\n// 内容转换接口\nexport interface AccessibleContentRequest {\n  contentId: string;\n  contentType: string;\n  userId: string;\n  targetFormat: 'audio' | 'braille' | 'large-text' | 'high-contrast';\n  preferences?: UserPreferences;\n}\n\nexport interface AccessibleContentResponse {\n  accessibleContent: string;\n  contentUrl?: string;\n  audioContent?: string; // base64编码的音频数据\n  tactileContent?: string; // 盲文等触觉内容\n}\n\n// 语音翻译接口\nexport interface SpeechTranslationRequest {\n  audioData: string; // base64编码的音频数据\n  userId: string;\n  sourceLanguage: string;\n  targetLanguage: string;\n  context?: string;\n}\n\nexport interface SpeechTranslationResponse {\n  originalText: string;\n  translatedText: string;\n  translatedAudio?: string; // base64编码的音频数据\n  confidence: number;\n}\n\n// 健康数据收集接口\nexport interface BackgroundCollectionRequest {\n  userId: string;\n  dataTypes: string[];\n  collectionInterval: number;\n  privacyLevel: 'minimal' | 'standard' | 'comprehensive';\n}\n\nexport interface BackgroundCollectionResponse {\n  success: boolean;\n  message: string;\n  collectionId: string;\n}\n\n// 危机报警接口\nexport interface HealthAlertRequest {\n  userId: string;\n  alertType: 'emergency' | 'warning' | 'info';\n  healthData: Record<string, any>;\n  location?: {\n    latitude: number;\n    longitude: number;\n  };\n}\n\nexport interface HealthAlertResponse {\n  alertId: string;\n  alertLevel: 'critical' | 'high' | 'medium' | 'low';\n  message: string;\n  recommendedActions: Array<{\n    action: string;\n    priority: number;\n    description: string;\n  }>;\n  agentActions: Array<{\n    agentType: string;\n    action: string;\n    parameters: Record<string, any>;\n  }>;\n}\n\n// 无障碍服务类\nexport class AccessibilityService {\n  private config: AccessibilityConfig;\n\n  constructor(config: AccessibilityConfig) {\n    this.config = config;\n  }\n\n  /**\n   * 导盲服务 - 为视障用户提供环境描述和导航指引\n   */\n  async blindAssistance(request: BlindAssistanceRequest): Promise<BlindAssistanceResponse> {\n    try {\n      const response = await this.makeRequest('/api/blind-assistance', request);\n      return response;\n    } catch (error) {\n      console.error('导盲服务调用失败:', error);\n      throw new Error('导盲服务暂时不可用，请稍后重试');\n    }\n  }\n\n  /**\n   * 手语识别 - 将手语视频转换为文本\n   */\n  async signLanguageRecognition(request: SignLanguageRequest): Promise<SignLanguageResponse> {\n    try {\n      const response = await this.makeRequest('/api/sign-language', request);\n      return response;\n    } catch (error) {\n      console.error('手语识别服务调用失败:', error);\n      throw new Error('手语识别服务暂时不可用，请稍后重试');\n    }\n  }\n\n  /**\n   * 屏幕阅读 - 提供屏幕内容的语音描述\n   */\n  async screenReading(request: ScreenReadingRequest): Promise<ScreenReadingResponse> {\n    try {\n      const response = await this.makeRequest('/api/screen-reading', request);\n      return response;\n    } catch (error) {\n      console.error('屏幕阅读服务调用失败:', error);\n      throw new Error('屏幕阅读服务暂时不可用，请稍后重试');\n    }\n  }\n\n  /**\n   * 语音辅助 - 提供语音控制和语音响应\n   */\n  async voiceAssistance(request: VoiceAssistanceRequest): Promise<VoiceAssistanceResponse> {\n    try {\n      const response = await this.makeRequest('/api/voice-assistance', request);\n      return response;\n    } catch (error) {\n      console.error('语音辅助服务调用失败:', error);\n      throw new Error('语音辅助服务暂时不可用，请稍后重试');\n    }\n  }\n\n  /**\n   * 健康内容无障碍转换\n   */\n  async accessibleContent(request: AccessibleContentRequest): Promise<AccessibleContentResponse> {\n    try {\n      const response = await this.makeRequest('/api/accessible-content', request);\n      return response;\n    } catch (error) {\n      console.error('内容转换服务调用失败:', error);\n      throw new Error('内容转换服务暂时不可用，请稍后重试');\n    }\n  }\n\n  /**\n   * 语音翻译服务\n   */\n  async speechTranslation(request: SpeechTranslationRequest): Promise<SpeechTranslationResponse> {\n    try {\n      const response = await this.makeRequest('/api/speech-translation', request);\n      return response;\n    } catch (error) {\n      console.error('语音翻译服务调用失败:', error);\n      throw new Error('语音翻译服务暂时不可用，请稍后重试');\n    }\n  }\n\n  /**\n   * 配置后台健康数据收集\n   */\n  async configureBackgroundCollection(request: BackgroundCollectionRequest): Promise<BackgroundCollectionResponse> {\n    try {\n      const response = await this.makeRequest('/api/background-collection', request);\n      return response;\n    } catch (error) {\n      console.error('后台数据收集配置失败:', error);\n      throw new Error('后台数据收集服务暂时不可用，请稍后重试');\n    }\n  }\n\n  /**\n   * 触发健康危机报警\n   */\n  async triggerHealthAlert(request: HealthAlertRequest): Promise<HealthAlertResponse> {\n    try {\n      const response = await this.makeRequest('/api/health-alert', request);\n      return response;\n    } catch (error) {\n      console.error('健康报警服务调用失败:', error);\n      throw new Error('健康报警服务暂时不可用，请稍后重试');\n    }\n  }\n\n  /**\n   * 获取用户无障碍设置\n   */\n  async getUserPreferences(userId: string): Promise<UserPreferences> {\n    try {\n      const response = await this.makeRequest('/api/user-preferences', { userId, action: 'get' });\n      return response.preferences;\n    } catch (error) {\n      console.error('获取用户设置失败:', error);\n      // 返回默认设置\n      return {\n        fontSize: 'medium',\n        highContrast: false,\n        voiceType: 'female',\n        speechRate: 1.0,\n        language: 'zh_CN',\n        screenReader: false,\n        signLanguage: false,\n        enabledFeatures: [],\n      };\n    }\n  }\n\n  /**\n   * 更新用户无障碍设置\n   */\n  async updateUserPreferences(userId: string, preferences: Partial<UserPreferences>): Promise<boolean> {\n    try {\n      const response = await this.makeRequest('/api/user-preferences', {\n        userId,\n        action: 'update',\n        preferences,\n      });\n      return response.success;\n    } catch (error) {\n      console.error('更新用户设置失败:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 获取支持的语言和方言列表\n   */\n  async getSupportedLanguages(): Promise<Array<{ code: string; name: string; dialects?: string[] }>> {\n    try {\n      const response = await this.makeRequest('/api/supported-languages', {});\n      return response.languages;\n    } catch (error) {\n      console.error('获取支持语言列表失败:', error);\n      // 返回默认支持的语言\n      return [\n        { code: 'zh_CN', name: '中文（简体）', dialects: ['普通话', '粤语', '闽南语', '上海话'] },\n        { code: 'en_US', name: 'English (US)' },\n        { code: 'ja_JP', name: '日本語' },\n        { code: 'ko_KR', name: '한국어' },\n      ];\n    }\n  }\n\n  /**\n   * 通用请求方法\n   */\n  private async makeRequest(endpoint: string, data: any): Promise<any> {\n    const url = `${this.config.serviceUrl}${endpoint}`;\n    \n    for (let attempt = 0; attempt < this.config.retryAttempts; attempt++) {\n      try {\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), this.config.timeout);\n        \n        const response = await fetch(url, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            ...(this.config.apiKey && { 'Authorization': `Bearer ${this.config.apiKey}` }),\n          },\n          body: JSON.stringify(data),\n          signal: controller.signal,\n        });\n        \n        clearTimeout(timeoutId);\n\n        if (!response.ok) {\n          throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n        }\n\n        return await response.json();\n      } catch (error) {\n        console.error(`请求失败 (尝试 ${attempt + 1}/${this.config.retryAttempts}):`, error);\n        \n        if (attempt === this.config.retryAttempts - 1) {\n          throw error;\n        }\n        \n        // 指数退避重试\n        await new Promise<void>(resolve => setTimeout(() => resolve(), Math.pow(2, attempt) * 1000));\n      }\n    }\n  }\n}\n\n// 默认配置\nexport const defaultAccessibilityConfig: AccessibilityConfig = {\n  serviceUrl: 'http://localhost:50051', // accessibility-service的默认地址\n  timeout: 30000, // 30秒超时\n  retryAttempts: 3,\n};\n\n// 创建默认实例\nexport const accessibilityService = new AccessibilityService(defaultAccessibilityConfig);\n\n// 智能体专用的无障碍功能封装\nexport class AgentAccessibilityHelper {\n  private service: AccessibilityService;\n  private agentType: string;\n\n  constructor(service: AccessibilityService, agentType: string) {\n    this.service = service;\n    this.agentType = agentType;\n  }\n\n  /**\n   * 为智能体提供语音输入处理\n   */\n  async processVoiceInput(audioData: string, userId: string, language: string = 'zh_CN'): Promise<string> {\n    try {\n      const response = await this.service.voiceAssistance({\n        audioData,\n        userId,\n        language,\n        context: `agent_${this.agentType}`,\n      });\n      return response.recognizedText;\n    } catch (error) {\n      console.error(`${this.agentType}语音输入处理失败:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * 为智能体提供语音输出生成\n   */\n  async generateVoiceOutput(text: string, userId: string, language: string = 'zh_CN'): Promise<string | null> {\n    try {\n      const preferences = await this.service.getUserPreferences(userId);\n      \n      // 这里可以调用TTS服务或使用accessibility-service的语音合成功能\n      // 暂时返回null，表示使用系统默认TTS\n      return null;\n    } catch (error) {\n      console.error(`${this.agentType}语音输出生成失败:`, error);\n      return null;\n    }\n  }\n\n  /**\n   * 为智能体提供多语言翻译\n   */\n  async translateMessage(text: string, userId: string, targetLanguage: string): Promise<string> {\n    try {\n      // 如果目标语言是中文，直接返回\n      if (targetLanguage === 'zh_CN') {\n        return text;\n      }\n\n      // 这里可以集成翻译服务\n      // 暂时返回原文\n      return text;\n    } catch (error) {\n      console.error(`${this.agentType}消息翻译失败:`, error);\n      return text;\n    }\n  }\n\n  /**\n   * 为智能体提供内容无障碍转换\n   */\n  async makeContentAccessible(\n    content: string,\n    userId: string,\n    targetFormat: 'audio' | 'braille' | 'large-text' | 'high-contrast'\n  ): Promise<AccessibleContentResponse> {\n    try {\n      const response = await this.service.accessibleContent({\n        contentId: `${this.agentType}_${Date.now()}`,\n        contentType: 'text',\n        userId,\n        targetFormat,\n      });\n      return response;\n    } catch (error) {\n      console.error(`${this.agentType}内容无障碍转换失败:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * 为智能体提供健康数据监控\n   */\n  async monitorHealthData(userId: string, dataTypes: string[]): Promise<string> {\n    try {\n      const response = await this.service.configureBackgroundCollection({\n        userId,\n        dataTypes,\n        collectionInterval: 300000, // 5分钟\n        privacyLevel: 'standard',\n      });\n      \n      return response.collectionId;\n    } catch (error) {\n      console.error(`${this.agentType}健康数据监控配置失败:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * 为智能体提供危机报警功能\n   */\n  async checkHealthAlert(userId: string, healthData: Record<string, any>): Promise<HealthAlertResponse | null> {\n    try {\n      // 只有在检测到异常时才触发报警\n      const hasAbnormalData = this.detectAbnormalHealthData(healthData);\n      \n      if (hasAbnormalData) {\n        const response = await this.service.triggerHealthAlert({\n          userId,\n          alertType: 'warning',\n          healthData,\n        });\n        return response;\n      }\n      \n      return null;\n    } catch (error) {\n      console.error(`${this.agentType}健康报警检查失败:`, error);\n      return null;\n    }\n  }\n\n  /**\n   * 检测异常健康数据（简单实现）\n   */\n  private detectAbnormalHealthData(healthData: Record<string, any>): boolean {\n    // 这里可以实现更复杂的异常检测逻辑\n    // 暂时返回false，表示没有异常\n    return false;\n  }\n} "],"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","ignoreList":[]}