{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactNative2","_jsxRuntime","mockHealthData","bloodPressure","systolic","diastolic","timestamp","trend","heartRate","value","weight","steps","goal","sleep","duration","quality","MockHealthDashboard","_React$useState","React","useState","_React$useState2","_slicedToArray2","default","selectedMetric","setSelectedMetric","_React$useState3","_React$useState4","timeRange","setTimeRange","_React$useState5","_React$useState6","refreshing","setRefreshing","handleRefresh","setTimeout","handleMetricPress","metric","handleTimeRangeChange","range","jsxs","ScrollView","testID","children","View","jsx","Text","TouchableOpacity","onPress","map","style","fontWeight","Math","round","describe","it","_render","render","getByTestId","getByText","expect","toBeTruthy","_render2","_render3","_render4","_render5","_render6","monthButton","fireEvent","press","bloodPressureCard","_asyncToGenerator2","_render7","refreshButton","waitFor","timeout","_render8","queryByTestId","toBeNull","_render9","heartRateCard","closeButton","_render0","testCases","card","title","forEach","_ref2","cardElement","_render1","_render10","_render11","_render12","scrollView","scroll","nativeEvent","contentOffset","y","contentSize","height","layoutMeasurement"],"sources":["HealthDashboard.integration.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, fireEvent, waitFor } from '@testing-library/react-native';\nimport { View, Text, ScrollView, TouchableOpacity } from 'react-native';\n\n// Mock健康数据\nconst mockHealthData = {\n  bloodPressure: {\n    systolic: 120,\n    diastolic: 80,\n    timestamp: '2024-01-15T10:00:00Z',\n    trend: 'stable',\n  },\n  heartRate: {\n    value: 72,\n    timestamp: '2024-01-15T10:00:00Z',\n    trend: 'up',\n  },\n  weight: {\n    value: 70,\n    timestamp: '2024-01-15T10:00:00Z',\n    trend: 'down',\n  },\n  steps: {\n    value: 8500,\n    goal: 10000,\n    timestamp: '2024-01-15T10:00:00Z',\n  },\n  sleep: {\n    duration: 7.5,\n    quality: 'good',\n    timestamp: '2024-01-15T06:00:00Z',\n  },\n};\n\n// Mock健康仪表板组件\nconst MockHealthDashboard = () => {\n  const [selectedMetric, setSelectedMetric] = React.useState<string | null>(null);\n  const [timeRange, setTimeRange] = React.useState('week');\n  const [refreshing, setRefreshing] = React.useState(false);\n\n  const handleRefresh = () => {\n    setRefreshing(true);\n    setTimeout(() => setRefreshing(false), 1000);\n  };\n\n  const handleMetricPress = (metric: string) => {\n    setSelectedMetric(metric);\n  };\n\n  const handleTimeRangeChange = (range: string) => {\n    setTimeRange(range);\n  };\n\n  return (\n    <ScrollView testID=\"health-dashboard\">\n      {/* 头部控制 */}\n      <View testID=\"dashboard-header\">\n        <Text testID=\"dashboard-title\">健康仪表板</Text>\n        <TouchableOpacity testID=\"refresh-button\" onPress={handleRefresh}>\n          <Text>{refreshing ? '刷新中...' : '刷新'}</Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* 时间范围选择 */}\n      <View testID=\"time-range-selector\">\n        {['day', 'week', 'month', 'year'].map(range => (\n          <TouchableOpacity\n            key={range}\n            testID={`time-range-${range}`}\n            onPress={() => handleTimeRangeChange(range)}\n          >\n            <Text style={{ \n              fontWeight: timeRange === range ? 'bold' : 'normal' \n            }}>\n              {range === 'day' ? '日' : range === 'week' ? '周' : \n               range === 'month' ? '月' : '年'}\n            </Text>\n          </TouchableOpacity>\n        ))}\n      </View>\n\n      {/* 健康指标卡片 */}\n      <View testID=\"health-metrics\">\n        {/* 血压卡片 */}\n        <TouchableOpacity\n          testID=\"blood-pressure-card\"\n          onPress={() => handleMetricPress('bloodPressure')}\n        >\n          <View testID=\"blood-pressure-content\">\n            <Text testID=\"blood-pressure-title\">血压</Text>\n            <Text testID=\"blood-pressure-value\">\n              {mockHealthData.bloodPressure.systolic}/{mockHealthData.bloodPressure.diastolic}\n            </Text>\n            <Text testID=\"blood-pressure-trend\">\n              {mockHealthData.bloodPressure.trend === 'stable' ? '稳定' : '变化'}\n            </Text>\n          </View>\n        </TouchableOpacity>\n\n        {/* 心率卡片 */}\n        <TouchableOpacity\n          testID=\"heart-rate-card\"\n          onPress={() => handleMetricPress('heartRate')}\n        >\n          <View testID=\"heart-rate-content\">\n            <Text testID=\"heart-rate-title\">心率</Text>\n            <Text testID=\"heart-rate-value\">{mockHealthData.heartRate.value} bpm</Text>\n            <Text testID=\"heart-rate-trend\">\n              {mockHealthData.heartRate.trend === 'up' ? '上升' : '下降'}\n            </Text>\n          </View>\n        </TouchableOpacity>\n\n        {/* 体重卡片 */}\n        <TouchableOpacity\n          testID=\"weight-card\"\n          onPress={() => handleMetricPress('weight')}\n        >\n          <View testID=\"weight-content\">\n            <Text testID=\"weight-title\">体重</Text>\n            <Text testID=\"weight-value\">{mockHealthData.weight.value} kg</Text>\n            <Text testID=\"weight-trend\">\n              {mockHealthData.weight.trend === 'down' ? '下降' : '上升'}\n            </Text>\n          </View>\n        </TouchableOpacity>\n\n        {/* 步数卡片 */}\n        <TouchableOpacity\n          testID=\"steps-card\"\n          onPress={() => handleMetricPress('steps')}\n        >\n          <View testID=\"steps-content\">\n            <Text testID=\"steps-title\">步数</Text>\n            <Text testID=\"steps-value\">{mockHealthData.steps.value}</Text>\n            <Text testID=\"steps-goal\">目标: {mockHealthData.steps.goal}</Text>\n            <Text testID=\"steps-progress\">\n              {Math.round((mockHealthData.steps.value / mockHealthData.steps.goal) * 100)}%\n            </Text>\n          </View>\n        </TouchableOpacity>\n\n        {/* 睡眠卡片 */}\n        <TouchableOpacity\n          testID=\"sleep-card\"\n          onPress={() => handleMetricPress('sleep')}\n        >\n          <View testID=\"sleep-content\">\n            <Text testID=\"sleep-title\">睡眠</Text>\n            <Text testID=\"sleep-value\">{mockHealthData.sleep.duration} 小时</Text>\n            <Text testID=\"sleep-quality\">\n              质量: {mockHealthData.sleep.quality === 'good' ? '良好' : '一般'}\n            </Text>\n          </View>\n        </TouchableOpacity>\n      </View>\n\n      {/* 详细视图 */}\n      {selectedMetric && (\n        <View testID=\"metric-detail-view\">\n          <Text testID=\"detail-title\">\n            {selectedMetric === 'bloodPressure' ? '血压详情' :\n             selectedMetric === 'heartRate' ? '心率详情' :\n             selectedMetric === 'weight' ? '体重详情' :\n             selectedMetric === 'steps' ? '步数详情' :\n             selectedMetric === 'sleep' ? '睡眠详情' : '详情'}\n          </Text>\n          <Text testID=\"detail-time-range\">时间范围: {timeRange}</Text>\n          <TouchableOpacity\n            testID=\"close-detail\"\n            onPress={() => setSelectedMetric(null)}\n          >\n            <Text>关闭</Text>\n          </TouchableOpacity>\n        </View>\n      )}\n\n      {/* 健康建议 */}\n      <View testID=\"health-recommendations\">\n        <Text testID=\"recommendations-title\">健康建议</Text>\n        <Text testID=\"recommendation-1\">保持规律的运动习惯</Text>\n        <Text testID=\"recommendation-2\">注意饮食均衡</Text>\n        <Text testID=\"recommendation-3\">保证充足的睡眠</Text>\n      </View>\n    </ScrollView>\n  );\n};\n\ndescribe('HealthDashboard Integration', () => {\n  it('应该正确渲染健康仪表板', () => {\n    const { getByTestId, getByText } = render(<MockHealthDashboard />);\n\n    expect(getByTestId('health-dashboard')).toBeTruthy();\n    expect(getByTestId('dashboard-header')).toBeTruthy();\n    expect(getByText('健康仪表板')).toBeTruthy();\n    expect(getByTestId('health-metrics')).toBeTruthy();\n  });\n\n  it('应该显示所有健康指标卡片', () => {\n    const { getByTestId, getByText } = render(<MockHealthDashboard />);\n\n    // 验证所有指标卡片存在\n    expect(getByTestId('blood-pressure-card')).toBeTruthy();\n    expect(getByTestId('heart-rate-card')).toBeTruthy();\n    expect(getByTestId('weight-card')).toBeTruthy();\n    expect(getByTestId('steps-card')).toBeTruthy();\n    expect(getByTestId('sleep-card')).toBeTruthy();\n\n    // 验证指标值显示\n    expect(getByText('120/80')).toBeTruthy();\n    expect(getByText('72 bpm')).toBeTruthy();\n    expect(getByText('70 kg')).toBeTruthy();\n    expect(getByText('8500')).toBeTruthy();\n    expect(getByText('7.5 小时')).toBeTruthy();\n  });\n\n  it('应该显示健康指标趋势', () => {\n    const { getByText } = render(<MockHealthDashboard />);\n\n    expect(getByText('稳定')).toBeTruthy(); // 血压趋势\n    expect(getByText('上升')).toBeTruthy(); // 心率趋势\n    expect(getByText('下降')).toBeTruthy(); // 体重趋势\n  });\n\n  it('应该显示步数进度', () => {\n    const { getByText } = render(<MockHealthDashboard />);\n\n    expect(getByText('目标: 10000')).toBeTruthy();\n    expect(getByText('85%')).toBeTruthy(); // 8500/10000 = 85%\n  });\n\n  it('应该支持时间范围选择', () => {\n    const { getByTestId } = render(<MockHealthDashboard />);\n\n    expect(getByTestId('time-range-selector')).toBeTruthy();\n    expect(getByTestId('time-range-day')).toBeTruthy();\n    expect(getByTestId('time-range-week')).toBeTruthy();\n    expect(getByTestId('time-range-month')).toBeTruthy();\n    expect(getByTestId('time-range-year')).toBeTruthy();\n  });\n\n  it('应该能够切换时间范围', () => {\n    const { getByTestId } = render(<MockHealthDashboard />);\n\n    const monthButton = getByTestId('time-range-month');\n    fireEvent.press(monthButton);\n\n    // 验证时间范围已切换（通过详细视图验证）\n    const bloodPressureCard = getByTestId('blood-pressure-card');\n    fireEvent.press(bloodPressureCard);\n\n    expect(getByTestId('detail-time-range')).toBeTruthy();\n  });\n\n  it('应该支持刷新功能', async () => {\n    const { getByTestId, getByText } = render(<MockHealthDashboard />);\n\n    const refreshButton = getByTestId('refresh-button');\n    expect(getByText('刷新')).toBeTruthy();\n\n    fireEvent.press(refreshButton);\n\n    // 验证刷新状态\n    expect(getByText('刷新中...')).toBeTruthy();\n\n    // 等待刷新完成\n    await waitFor(() => {\n      expect(getByText('刷新')).toBeTruthy();\n    }, { timeout: 2000 });\n  });\n\n  it('应该能够查看指标详情', () => {\n    const { getByTestId, queryByTestId } = render(<MockHealthDashboard />);\n\n    // 初始状态不显示详情\n    expect(queryByTestId('metric-detail-view')).toBeNull();\n\n    // 点击血压卡片\n    const bloodPressureCard = getByTestId('blood-pressure-card');\n    fireEvent.press(bloodPressureCard);\n\n    // 验证详情视图显示\n    expect(getByTestId('metric-detail-view')).toBeTruthy();\n    expect(getByTestId('detail-title')).toBeTruthy();\n  });\n\n  it('应该能够关闭指标详情', () => {\n    const { getByTestId, queryByTestId } = render(<MockHealthDashboard />);\n\n    // 打开详情\n    const heartRateCard = getByTestId('heart-rate-card');\n    fireEvent.press(heartRateCard);\n\n    expect(getByTestId('metric-detail-view')).toBeTruthy();\n\n    // 关闭详情\n    const closeButton = getByTestId('close-detail');\n    fireEvent.press(closeButton);\n\n    expect(queryByTestId('metric-detail-view')).toBeNull();\n  });\n\n  it('应该显示不同指标的详情标题', () => {\n    const { getByTestId, getByText } = render(<MockHealthDashboard />);\n\n    // 测试不同指标的详情标题\n    const testCases = [\n      { card: 'blood-pressure-card', title: '血压详情' },\n      { card: 'heart-rate-card', title: '心率详情' },\n      { card: 'weight-card', title: '体重详情' },\n      { card: 'steps-card', title: '步数详情' },\n      { card: 'sleep-card', title: '睡眠详情' },\n    ];\n\n    testCases.forEach(({ card, title }) => {\n      const cardElement = getByTestId(card);\n      fireEvent.press(cardElement);\n\n      expect(getByText(title)).toBeTruthy();\n\n      // 关闭详情\n      const closeButton = getByTestId('close-detail');\n      fireEvent.press(closeButton);\n    });\n  });\n\n  it('应该显示健康建议', () => {\n    const { getByTestId, getByText } = render(<MockHealthDashboard />);\n\n    expect(getByTestId('health-recommendations')).toBeTruthy();\n    expect(getByText('健康建议')).toBeTruthy();\n    expect(getByText('保持规律的运动习惯')).toBeTruthy();\n    expect(getByText('注意饮食均衡')).toBeTruthy();\n    expect(getByText('保证充足的睡眠')).toBeTruthy();\n  });\n\n  it('应该正确计算和显示步数完成百分比', () => {\n    const { getByText } = render(<MockHealthDashboard />);\n\n    // 8500 / 10000 = 85%\n    expect(getByText('85%')).toBeTruthy();\n  });\n\n  it('应该显示睡眠质量状态', () => {\n    const { getByText } = render(<MockHealthDashboard />);\n\n    expect(getByText('质量: 良好')).toBeTruthy();\n  });\n\n  it('应该支持滚动查看所有内容', () => {\n    const { getByTestId } = render(<MockHealthDashboard />);\n\n    const scrollView = getByTestId('health-dashboard');\n    expect(scrollView).toBeTruthy();\n\n    // 验证ScrollView可以滚动\n    fireEvent.scroll(scrollView, {\n      nativeEvent: {\n        contentOffset: { y: 100 },\n        contentSize: { height: 1000 },\n        layoutMeasurement: { height: 500 },\n      },\n    });\n  });\n}); "],"mappings":"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","ignoreList":[]}