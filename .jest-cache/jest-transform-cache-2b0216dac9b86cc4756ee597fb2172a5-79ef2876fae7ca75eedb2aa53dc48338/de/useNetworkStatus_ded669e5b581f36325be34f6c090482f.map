{"version":3,"names":["_react","require","cov_9roie0dkc","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","s","f","b","_coverageSchema","coverage","actualCoverage","useNetworkStatus","exports","_ref","useState","isConnected","isInternetReachable","type","_ref2","_slicedToArray2","default","networkStatus","setNetworkStatus","useEffect","checkNetworkStatus","_default"],"sources":["useNetworkStatus.ts"],"sourcesContent":["/**\n * 网络状态监控Hook (简化版)\n */\n\nimport { useState, useEffect } from 'react';\n\nexport interface NetworkStatus {\n  isConnected: boolean;\n  isInternetReachable: boolean | null;\n  type: string | null;\n}\n\nexport const useNetworkStatus = () => {\n  const [networkStatus, setNetworkStatus] = useState<NetworkStatus>({\n    isConnected: true,\n    isInternetReachable: true,\n    type: 'wifi',\n  });\n\n  useEffect(() => {\n    // 简化版本，实际项目中应该使用@react-native-community/netinfo\n    const checkNetworkStatus = () => {\n      setNetworkStatus({\n        isConnected: true,\n        isInternetReachable: true,\n        type: 'wifi',\n      });\n    };\n\n    checkNetworkStatus();\n  }, []);\n\n  return networkStatus;\n};\n\nexport default useNetworkStatus;\n"],"mappings":"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","ignoreList":[]}