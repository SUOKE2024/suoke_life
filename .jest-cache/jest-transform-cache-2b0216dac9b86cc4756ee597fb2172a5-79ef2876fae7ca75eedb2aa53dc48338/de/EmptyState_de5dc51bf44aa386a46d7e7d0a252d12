841beefd20bbd5c2073cb57f8bcea803
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EmptyState = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _Icon = _interopRequireDefault(require("./Icon"));
var _theme = require("../../constants/theme");
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function cov_42va3nim4() {
  var path = "/Users/songxu/Developer/suoke_life/src/components/common/EmptyState.tsx";
  var hash = "b1886d30ef78997193d7b36b952adc4dc4dd8076";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/songxu/Developer/suoke_life/src/components/common/EmptyState.tsx",
    statementMap: {
      "0": {
        start: {
          line: 17,
          column: 26
        },
        end: {
          line: 30,
          column: 2
        }
      },
      "1": {
        start: {
          line: 23,
          column: 2
        },
        end: {
          line: 29,
          column: 4
        }
      },
      "2": {
        start: {
          line: 32,
          column: 0
        },
        end: {
          line: 32,
          column: 38
        }
      },
      "3": {
        start: {
          line: 34,
          column: 15
        },
        end: {
          line: 56,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 48
          },
          end: {
            line: 17,
            column: 49
          }
        },
        loc: {
          start: {
            line: 22,
            column: 6
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 22
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 7
          },
          end: {
            line: 27,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 7
          },
          end: {
            line: 27,
            column: 15
          }
        }, {
          start: {
            line: 27,
            column: 19
          },
          end: {
            line: 27,
            column: 66
          }
        }],
        line: 27
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b1886d30ef78997193d7b36b952adc4dc4dd8076"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_42va3nim4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_42va3nim4();
var EmptyState = exports.EmptyState = (cov_42va3nim4().s[0]++, (0, _react.memo)(function (_ref) {
  var icon = _ref.icon,
    title = _ref.title,
    subtitle = _ref.subtitle,
    style = _ref.style;
  cov_42va3nim4().f[0]++;
  cov_42va3nim4().s[1]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: [styles.container, style],
    children: [(0, _jsxRuntime.jsx)(_Icon.default, {
      name: icon,
      size: 64,
      color: _theme.colors.textSecondary
    }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: styles.title,
      children: title
    }), (cov_42va3nim4().b[0][0]++, subtitle) && (cov_42va3nim4().b[0][1]++, (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: styles.subtitle,
      children: subtitle
    }))]
  });
}));
cov_42va3nim4().s[2]++;
EmptyState.displayName = 'EmptyState';
var styles = (cov_42va3nim4().s[3]++, _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    paddingHorizontal: _theme.spacing.xl,
    paddingVertical: _theme.spacing.xxl
  },
  title: {
    fontSize: _theme.fonts.size.lg,
    fontWeight: '600',
    color: _theme.colors.text,
    textAlign: 'center',
    marginTop: _theme.spacing.lg,
    marginBottom: _theme.spacing.sm
  },
  subtitle: {
    fontSize: _theme.fonts.size.md,
    color: _theme.colors.textSecondary,
    textAlign: 'center',
    lineHeight: _theme.fonts.lineHeight.md
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,