493cf650f07bf9bfc776737937e05ed6
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useNetworkStatus = exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
function cov_9roie0dkc() {
  var path = "/Users/songxu/Developer/suoke_life/src/hooks/useNetworkStatus.ts";
  var hash = "91a7dc3a07b43026677e37af507856fe2573aa5c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/songxu/Developer/suoke_life/src/hooks/useNetworkStatus.ts",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 32
        },
        end: {
          line: 34,
          column: 1
        }
      },
      "1": {
        start: {
          line: 14,
          column: 44
        },
        end: {
          line: 18,
          column: 4
        }
      },
      "2": {
        start: {
          line: 20,
          column: 2
        },
        end: {
          line: 31,
          column: 9
        }
      },
      "3": {
        start: {
          line: 22,
          column: 31
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "4": {
        start: {
          line: 23,
          column: 6
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "5": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 25
        }
      },
      "6": {
        start: {
          line: 33,
          column: 2
        },
        end: {
          line: 33,
          column: 23
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 32
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 38
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 12
          },
          end: {
            line: 20,
            column: 13
          }
        },
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 31,
            column: 3
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 31
          },
          end: {
            line: 22,
            column: 32
          }
        },
        loc: {
          start: {
            line: 22,
            column: 37
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 22
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "91a7dc3a07b43026677e37af507856fe2573aa5c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_9roie0dkc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_9roie0dkc();
cov_9roie0dkc().s[0]++;
var useNetworkStatus = exports.useNetworkStatus = function useNetworkStatus() {
  cov_9roie0dkc().f[0]++;
  var _ref = (cov_9roie0dkc().s[1]++, (0, _react.useState)({
      isConnected: true,
      isInternetReachable: true,
      type: 'wifi'
    })),
    _ref2 = (0, _slicedToArray2.default)(_ref, 2),
    networkStatus = _ref2[0],
    setNetworkStatus = _ref2[1];
  cov_9roie0dkc().s[2]++;
  (0, _react.useEffect)(function () {
    cov_9roie0dkc().f[1]++;
    cov_9roie0dkc().s[3]++;
    var checkNetworkStatus = function checkNetworkStatus() {
      cov_9roie0dkc().f[2]++;
      cov_9roie0dkc().s[4]++;
      setNetworkStatus({
        isConnected: true,
        isInternetReachable: true,
        type: 'wifi'
      });
    };
    cov_9roie0dkc().s[5]++;
    checkNetworkStatus();
  }, []);
  cov_9roie0dkc().s[6]++;
  return networkStatus;
};
var _default = exports.default = useNetworkStatus;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJyZXF1aXJlIiwiY292Xzlyb2llMGRrYyIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwicyIsImYiLCJiIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsInVzZU5ldHdvcmtTdGF0dXMiLCJleHBvcnRzIiwiX3JlZiIsInVzZVN0YXRlIiwiaXNDb25uZWN0ZWQiLCJpc0ludGVybmV0UmVhY2hhYmxlIiwidHlwZSIsIl9yZWYyIiwiX3NsaWNlZFRvQXJyYXkyIiwiZGVmYXVsdCIsIm5ldHdvcmtTdGF0dXMiLCJzZXROZXR3b3JrU3RhdHVzIiwidXNlRWZmZWN0IiwiY2hlY2tOZXR3b3JrU3RhdHVzIiwiX2RlZmF1bHQiXSwic291cmNlcyI6WyJ1c2VOZXR3b3JrU3RhdHVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICog572R57uc54q25oCB55uR5o6nSG9vayAo566A5YyW54mIKVxuICovXG5cbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmV0d29ya1N0YXR1cyB7XG4gIGlzQ29ubmVjdGVkOiBib29sZWFuO1xuICBpc0ludGVybmV0UmVhY2hhYmxlOiBib29sZWFuIHwgbnVsbDtcbiAgdHlwZTogc3RyaW5nIHwgbnVsbDtcbn1cblxuZXhwb3J0IGNvbnN0IHVzZU5ldHdvcmtTdGF0dXMgPSAoKSA9PiB7XG4gIGNvbnN0IFtuZXR3b3JrU3RhdHVzLCBzZXROZXR3b3JrU3RhdHVzXSA9IHVzZVN0YXRlPE5ldHdvcmtTdGF0dXM+KHtcbiAgICBpc0Nvbm5lY3RlZDogdHJ1ZSxcbiAgICBpc0ludGVybmV0UmVhY2hhYmxlOiB0cnVlLFxuICAgIHR5cGU6ICd3aWZpJyxcbiAgfSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyDnroDljJbniYjmnKzvvIzlrp7pmYXpobnnm67kuK3lupTor6Xkvb/nlKhAcmVhY3QtbmF0aXZlLWNvbW11bml0eS9uZXRpbmZvXG4gICAgY29uc3QgY2hlY2tOZXR3b3JrU3RhdHVzID0gKCkgPT4ge1xuICAgICAgc2V0TmV0d29ya1N0YXR1cyh7XG4gICAgICAgIGlzQ29ubmVjdGVkOiB0cnVlLFxuICAgICAgICBpc0ludGVybmV0UmVhY2hhYmxlOiB0cnVlLFxuICAgICAgICB0eXBlOiAnd2lmaScsXG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgY2hlY2tOZXR3b3JrU3RhdHVzKCk7XG4gIH0sIFtdKTtcblxuICByZXR1cm4gbmV0d29ya1N0YXR1cztcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZU5ldHdvcmtTdGF0dXM7XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUlBLElBQUFBLE1BQUEsR0FBQUMsT0FBQTtBQUE0QyxTQUFBQyxjQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtJQUFBO0lBQUFFLEtBQUE7TUFBQTtRQUFBQyxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBTyxTQUFBO0lBQUFDLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO0lBQUFDLGVBQUE7SUFBQWxCLElBQUE7RUFBQTtFQUFBLElBQUFtQixRQUFBLEdBQUFsQixNQUFBLENBQUFFLEdBQUEsTUFBQUYsTUFBQSxDQUFBRSxHQUFBO0VBQUEsS0FBQWdCLFFBQUEsQ0FBQXBCLElBQUEsS0FBQW9CLFFBQUEsQ0FBQXBCLElBQUEsRUFBQUMsSUFBQSxLQUFBQSxJQUFBO0lBQUFtQixRQUFBLENBQUFwQixJQUFBLElBQUFLLFlBQUE7RUFBQTtFQUFBLElBQUFnQixjQUFBLEdBQUFELFFBQUEsQ0FBQXBCLElBQUE7RUFBQTtJQUFBRCxhQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBc0IsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQXRCLGFBQUE7QUFBQUEsYUFBQSxHQUFBaUIsQ0FBQTtBQVFyQyxJQUFNTSxnQkFBZ0IsR0FBQUMsT0FBQSxDQUFBRCxnQkFBQSxHQUFHLFNBQW5CQSxnQkFBZ0JBLENBQUEsRUFBUztFQUFBdkIsYUFBQSxHQUFBa0IsQ0FBQTtFQUNwQyxJQUFBTyxJQUFBLElBQUF6QixhQUFBLEdBQUFpQixDQUFBLE9BQTBDLElBQUFTLGVBQVEsRUFBZ0I7TUFDaEVDLFdBQVcsRUFBRSxJQUFJO01BQ2pCQyxtQkFBbUIsRUFBRSxJQUFJO01BQ3pCQyxJQUFJLEVBQUU7SUFDUixDQUFDLENBQUM7SUFBQUMsS0FBQSxPQUFBQyxlQUFBLENBQUFDLE9BQUEsRUFBQVAsSUFBQTtJQUpLUSxhQUFhLEdBQUFILEtBQUE7SUFBRUksZ0JBQWdCLEdBQUFKLEtBQUE7RUFJbkM5QixhQUFBLEdBQUFpQixDQUFBO0VBRUgsSUFBQWtCLGdCQUFTLEVBQUMsWUFBTTtJQUFBbkMsYUFBQSxHQUFBa0IsQ0FBQTtJQUFBbEIsYUFBQSxHQUFBaUIsQ0FBQTtJQUVkLElBQU1tQixrQkFBa0IsR0FBRyxTQUFyQkEsa0JBQWtCQSxDQUFBLEVBQVM7TUFBQXBDLGFBQUEsR0FBQWtCLENBQUE7TUFBQWxCLGFBQUEsR0FBQWlCLENBQUE7TUFDL0JpQixnQkFBZ0IsQ0FBQztRQUNmUCxXQUFXLEVBQUUsSUFBSTtRQUNqQkMsbUJBQW1CLEVBQUUsSUFBSTtRQUN6QkMsSUFBSSxFQUFFO01BQ1IsQ0FBQyxDQUFDO0lBQ0osQ0FBQztJQUFDN0IsYUFBQSxHQUFBaUIsQ0FBQTtJQUVGbUIsa0JBQWtCLENBQUMsQ0FBQztFQUN0QixDQUFDLEVBQUUsRUFBRSxDQUFDO0VBQUNwQyxhQUFBLEdBQUFpQixDQUFBO0VBRVAsT0FBT2dCLGFBQWE7QUFDdEIsQ0FBQztBQUFDLElBQUFJLFFBQUEsR0FBQWIsT0FBQSxDQUFBUSxPQUFBLEdBRWFULGdCQUFnQiIsImlnbm9yZUxpc3QiOltdfQ==