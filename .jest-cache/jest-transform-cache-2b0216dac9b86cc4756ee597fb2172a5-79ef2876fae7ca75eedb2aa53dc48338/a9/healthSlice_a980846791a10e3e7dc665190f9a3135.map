{"version":3,"names":["_toolkit","require","_apiClient","initialState","data","summary","overallScore","constitution","recommendations","trends","heart_rate","blood_pressure","body_temperature","sleep_quality","stress_level","mood","exercise","nutrition","loading","error","undefined","fetchHealthSummary","exports","createAsyncThunk","_ref2","_asyncToGenerator2","default","_","_ref","rejectWithValue","response","apiClient","get","success","_response$error","Error","message","_x","_x2","apply","arguments","fetchHealthTrends","_ref4","params","_ref3","queryParams","URLSearchParams","type","append","days","toString","_response$error2","_x3","_x4","syncHealthData","_ref6","_ref5","post","_response$error3","_x5","_x6","analyzeHealthData","_ref9","_ref7","_ref8","dataIds","_response$error4","_x7","_x8","generateHealthReport","_ref10","_ref0","_ref1","startDate","endDate","_response$error5","_x9","_x0","healthSlice","createSlice","name","reducers","addHealthDataLocal","state","action","unshift","payload","updateHealthDataLocal","index","findIndex","item","id","removeHealthDataLocal","filter","updateSummary","Object","assign","clearError","setHealthDataFilter","_state","_action","extraReducers","builder","addCase","pending","fulfilled","rejected","existingIds","Set","map","newData","has","concat","_toConsumableArray2","_healthSlice$actions","actions","selectHealth","health","selectHealthData","selectHealthSummary","selectHealthLoading","selectHealthError","selectHealthDataByType","selectRecentHealthData","length","cutoffDate","Date","setDate","getDate","timestamp","sort","a","b","getTime","_default","reducer"],"sources":["healthSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\nimport {\n  HealthState,\n  HealthData,\n  HealthSummary,\n  HealthDataType,\n  ApiResponse,\n} from \"../../types\";\nimport { apiClient } from \"../../services/apiClient\";\n\n// 初始状态\nconst initialState: HealthState = {\n  data: [],\n  summary: {\n    overallScore: 0,\n    constitution: \"balanced\",\n    recommendations: [],\n    trends: {\n      heart_rate: \"stable\",\n      blood_pressure: \"stable\",\n      body_temperature: \"stable\",\n      sleep_quality: \"stable\",\n      stress_level: \"stable\",\n      mood: \"stable\",\n      exercise: \"stable\",\n      nutrition: \"stable\",\n    },\n  },\n  loading: false,\n  error: undefined,\n};\n\n// 异步thunk actions\nexport const fetchHealthSummary = createAsyncThunk<\n  HealthSummary,\n  void,\n  { rejectValue: string }\n>(\"health/fetchSummary\", async (_, { rejectWithValue }) => {\n  try {\n    const response: ApiResponse<HealthSummary> = await apiClient.get(\n      \"/health/summary\"\n    );\n\n    if (!response.success) {\n      throw new Error(response.error?.message || \"获取健康概况失败\");\n    }\n\n    return response.data!;\n  } catch (error: any) {\n    return rejectWithValue(error.message || \"获取健康概况失败\");\n  }\n});\n\nexport const fetchHealthTrends = createAsyncThunk<\n  HealthData[],\n  { type?: HealthDataType; days?: number },\n  { rejectValue: string }\n>(\"health/fetchTrends\", async (params, { rejectWithValue }) => {\n  try {\n    const queryParams = new URLSearchParams();\n    if (params.type) {\n      queryParams.append('type', params.type);\n    }\n    if (params.days) {\n      queryParams.append('days', params.days.toString());\n    }\n\n    const response: ApiResponse<HealthData[]> = await apiClient.get(\n      `/health/trends?${queryParams.toString()}`\n    );\n\n    if (!response.success) {\n      throw new Error(response.error?.message || \"获取健康趋势失败\");\n    }\n\n    return response.data!;\n  } catch (error: any) {\n    return rejectWithValue(error.message || \"获取健康趋势失败\");\n  }\n});\n\nexport const syncHealthData = createAsyncThunk<\n  HealthData[],\n  void,\n  { rejectValue: string }\n>(\"health/syncData\", async (_, { rejectWithValue }) => {\n  try {\n    const response: ApiResponse<HealthData[]> = await apiClient.post(\n      \"/health/sync\"\n    );\n\n    if (!response.success) {\n      throw new Error(response.error?.message || \"同步健康数据失败\");\n    }\n\n    return response.data!;\n  } catch (error: any) {\n    return rejectWithValue(error.message || \"同步健康数据失败\");\n  }\n});\n\nexport const analyzeHealthData = createAsyncThunk<\n  HealthSummary,\n  { dataIds: string[] },\n  { rejectValue: string }\n>(\"health/analyzeData\", async ({ dataIds }, { rejectWithValue }) => {\n  try {\n    const response: ApiResponse<HealthSummary> = await apiClient.post(\n      \"/health/analyze\",\n      {\n        dataIds,\n      }\n    );\n\n    if (!response.success) {\n      throw new Error(response.error?.message || \"分析健康数据失败\");\n    }\n\n    return response.data!;\n  } catch (error: any) {\n    return rejectWithValue(error.message || \"分析健康数据失败\");\n  }\n});\n\nexport const generateHealthReport = createAsyncThunk<\n  { reportUrl: string; reportData: any },\n  { startDate: string; endDate: string },\n  { rejectValue: string }\n>(\n  \"health/generateReport\",\n  async ({ startDate, endDate }, { rejectWithValue }) => {\n    try {\n      const response: ApiResponse<{ reportUrl: string; reportData: any }> =\n        await apiClient.post(\"/health/report\", { startDate, endDate });\n\n      if (!response.success) {\n        throw new Error(response.error?.message || \"生成健康报告失败\");\n      }\n\n      return response.data!;\n    } catch (error: any) {\n      return rejectWithValue(error.message || \"生成健康报告失败\");\n    }\n  }\n);\n\n// 创建slice\nconst healthSlice = createSlice({\n  name: \"health\",\n  initialState,\n  reducers: {\n    addHealthDataLocal: (state, action: PayloadAction<HealthData>) => {\n      state.data.unshift(action.payload);\n    },\n    updateHealthDataLocal: (state, action: PayloadAction<HealthData>) => {\n      const index = state.data.findIndex(\n        (item) => item.id === action.payload.id\n      );\n      if (index >= 0) {\n        state.data[index] = action.payload;\n      }\n    },\n    removeHealthDataLocal: (state, action: PayloadAction<string>) => {\n      state.data = state.data.filter((item) => item.id !== action.payload);\n    },\n    updateSummary: (state, action: PayloadAction<Partial<HealthSummary>>) => {\n      state.summary = { ...state.summary, ...action.payload };\n    },\n    clearError: (state) => {\n      state.error = undefined;\n    },\n    setHealthDataFilter: (\n      _state,\n      _action: PayloadAction<{\n        type?: HealthDataType;\n        dateRange?: { start: string; end: string };\n      }>\n    ) => {\n      // 这里可以添加过滤逻辑\n      // 暂时只是存储过滤器状态，实际过滤在组件中处理\n    },\n  },\n  extraReducers: (builder) => {\n    // 获取健康概况\n    builder\n      .addCase(fetchHealthSummary.pending, (state) => {\n        state.loading = true;\n        state.error = undefined;\n      })\n      .addCase(fetchHealthSummary.fulfilled, (state, action) => {\n        state.loading = false;\n        state.summary = action.payload;\n        state.error = undefined;\n      })\n      .addCase(fetchHealthSummary.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      });\n\n    // 获取健康趋势\n    builder\n      .addCase(fetchHealthTrends.pending, (state) => {\n        state.loading = true;\n        state.error = undefined;\n      })\n      .addCase(fetchHealthTrends.fulfilled, (state, action) => {\n        state.loading = false;\n        state.data = action.payload;\n        state.error = undefined;\n      })\n      .addCase(fetchHealthTrends.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      });\n\n    // 同步健康数据\n    builder\n      .addCase(syncHealthData.pending, (state) => {\n        state.loading = true;\n        state.error = undefined;\n      })\n      .addCase(syncHealthData.fulfilled, (state, action) => {\n        state.loading = false;\n        // 合并新数据，避免重复\n        const existingIds = new Set(state.data.map((item) => item.id));\n        const newData = action.payload.filter(\n          (item) => !existingIds.has(item.id)\n        );\n        state.data = [...newData, ...state.data];\n        state.error = undefined;\n      })\n      .addCase(syncHealthData.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      });\n\n    // 分析健康数据\n    builder\n      .addCase(analyzeHealthData.pending, (state) => {\n        state.loading = true;\n        state.error = undefined;\n      })\n      .addCase(analyzeHealthData.fulfilled, (state, action) => {\n        state.loading = false;\n        state.summary = action.payload;\n        state.error = undefined;\n      })\n      .addCase(analyzeHealthData.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      });\n\n    // 生成健康报告\n    builder\n      .addCase(generateHealthReport.pending, (state) => {\n        state.loading = true;\n        state.error = undefined;\n      })\n      .addCase(generateHealthReport.fulfilled, (state, _action) => {\n        state.loading = false;\n        state.error = undefined;\n      })\n      .addCase(generateHealthReport.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      });\n  },\n});\n\n// 导出actions\nexport const {\n  addHealthDataLocal,\n  updateHealthDataLocal,\n  removeHealthDataLocal,\n  updateSummary,\n  clearError,\n  setHealthDataFilter,\n} = healthSlice.actions;\n\n// 选择器\nexport const selectHealth = (state: { health: HealthState }) => state.health;\nexport const selectHealthData = (state: { health: HealthState }) =>\n  state.health.data;\nexport const selectHealthSummary = (state: { health: HealthState }) =>\n  state.health.summary;\nexport const selectHealthLoading = (state: { health: HealthState }) =>\n  state.health.loading;\nexport const selectHealthError = (state: { health: HealthState }) =>\n  state.health.error;\n\n// 获取特定类型的健康数据\nexport const selectHealthDataByType =\n  (type: HealthDataType) => (state: { health: HealthState }) =>\n    state.health.data.filter((item) => item.type === type);\n\n// 获取最近的健康数据\nexport const selectRecentHealthData =\n  (days: number = 7) =>\n  (state: { health: HealthState }) => {\n    const cutoffDate = new Date();\n    cutoffDate.setDate(cutoffDate.getDate() - days);\n    return state.health.data\n      .filter((item) => new Date(item.timestamp) >= cutoffDate)\n      .sort(\n        (a, b) =>\n          new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()\n      );\n  };\n\n// 导出reducer\nexport default healthSlice.reducer;\n"],"mappings":"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","ignoreList":[]}