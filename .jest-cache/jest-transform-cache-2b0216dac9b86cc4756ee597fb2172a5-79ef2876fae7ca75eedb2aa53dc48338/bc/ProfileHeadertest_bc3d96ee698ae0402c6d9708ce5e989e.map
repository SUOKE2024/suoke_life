{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_ProfileHeader","_jsxRuntime","mockUserProfile","id","name","avatar","age","gender","constitution","memberLevel","joinDate","healthScore","totalDiagnosis","consecutiveDays","healthPoints","email","phone","location","bio","mockGetHealthScoreColor","score","mockGetMemberLevelText","level","levelMap","bronze","silver","gold","platinum","diamond","describe","mockOnEditPress","jest","fn","beforeEach","clearAllMocks","it","_render","render","jsx","default","userProfile","onEditPress","getHealthScoreColor","getMemberLevelText","getByText","expect","toBeTruthy","_render2","_render3","getByTestId","highScoreProfile","Object","assign","_render4","rerender","toBe","mediumScoreProfile","lowScoreProfile","levels","expectedTexts","forEach","index"],"sources":["ProfileHeader.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport ProfileHeader from '../../screens/components/ProfileHeader';\nimport { UserProfile } from '../../types/profile';\n\n// Mock数据\nconst mockUserProfile: UserProfile = {\n  id: 'test_user',\n  name: '测试用户',\n  avatar: '👤',\n  age: 28,\n  gender: 'male',\n  constitution: '气虚质',\n  memberLevel: 'gold',\n  joinDate: '2023-03-15',\n  healthScore: 85,\n  totalDiagnosis: 24,\n  consecutiveDays: 15,\n  healthPoints: 1280,\n  email: 'test@example.com',\n  phone: '+86 138 0013 8000',\n  location: '北京市朝阳区',\n  bio: '测试用户简介',\n};\n\nconst mockGetHealthScoreColor = (score: number) => {\n  if (score >= 80) return '#34C759';\n  if (score >= 60) return '#FF9500';\n  return '#FF3B30';\n};\n\nconst mockGetMemberLevelText = (level: string) => {\n  const levelMap = {\n    bronze: '青铜会员',\n    silver: '白银会员',\n    gold: '黄金会员',\n    platinum: '铂金会员',\n    diamond: '钻石会员',\n  };\n  return levelMap[level as keyof typeof levelMap] || '普通会员';\n};\n\ndescribe('ProfileHeader', () => {\n  const mockOnEditPress = jest.fn();\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it('应该正确渲染用户信息', () => {\n    const { getByText } = render(\n      <ProfileHeader\n        userProfile={mockUserProfile}\n        onEditPress={mockOnEditPress}\n        getHealthScoreColor={mockGetHealthScoreColor}\n        getMemberLevelText={mockGetMemberLevelText}\n      />\n    );\n\n    expect(getByText('测试用户')).toBeTruthy();\n    expect(getByText('黄金会员')).toBeTruthy();\n    expect(getByText('加入时间：2023-03-15')).toBeTruthy();\n  });\n\n  it('应该正确显示统计数据', () => {\n    const { getByText } = render(\n      <ProfileHeader\n        userProfile={mockUserProfile}\n        onEditPress={mockOnEditPress}\n        getHealthScoreColor={mockGetHealthScoreColor}\n        getMemberLevelText={mockGetMemberLevelText}\n      />\n    );\n\n    expect(getByText('85')).toBeTruthy();\n    expect(getByText('24')).toBeTruthy();\n    expect(getByText('15')).toBeTruthy();\n    expect(getByText('1280')).toBeTruthy();\n    expect(getByText('健康分数')).toBeTruthy();\n    expect(getByText('诊断次数')).toBeTruthy();\n    expect(getByText('连续天数')).toBeTruthy();\n    expect(getByText('健康积分')).toBeTruthy();\n  });\n\n  it('应该在点击编辑按钮时调用onEditPress', () => {\n    const { getByTestId } = render(\n      <ProfileHeader\n        userProfile={mockUserProfile}\n        onEditPress={mockOnEditPress}\n        getHealthScoreColor={mockGetHealthScoreColor}\n        getMemberLevelText={mockGetMemberLevelText}\n      />\n    );\n\n    // 需要在组件中添加testID\n    // fireEvent.press(getByTestId('edit-button'));\n    // expect(mockOnEditPress).toHaveBeenCalledTimes(1);\n  });\n\n  it('应该根据健康分数显示正确的颜色', () => {\n    const highScoreProfile = { ...mockUserProfile, healthScore: 90 };\n    const { rerender } = render(\n      <ProfileHeader\n        userProfile={highScoreProfile}\n        onEditPress={mockOnEditPress}\n        getHealthScoreColor={mockGetHealthScoreColor}\n        getMemberLevelText={mockGetMemberLevelText}\n      />\n    );\n\n    // 测试高分数颜色\n    expect(mockGetHealthScoreColor(90)).toBe('#34C759');\n\n    // 测试中等分数\n    const mediumScoreProfile = { ...mockUserProfile, healthScore: 70 };\n    rerender(\n      <ProfileHeader\n        userProfile={mediumScoreProfile}\n        onEditPress={mockOnEditPress}\n        getHealthScoreColor={mockGetHealthScoreColor}\n        getMemberLevelText={mockGetMemberLevelText}\n      />\n    );\n    expect(mockGetHealthScoreColor(70)).toBe('#FF9500');\n\n    // 测试低分数\n    const lowScoreProfile = { ...mockUserProfile, healthScore: 50 };\n    rerender(\n      <ProfileHeader\n        userProfile={lowScoreProfile}\n        onEditPress={mockOnEditPress}\n        getHealthScoreColor={mockGetHealthScoreColor}\n        getMemberLevelText={mockGetMemberLevelText}\n      />\n    );\n    expect(mockGetHealthScoreColor(50)).toBe('#FF3B30');\n  });\n\n  it('应该正确显示不同会员等级', () => {\n    const levels = ['bronze', 'silver', 'gold', 'platinum', 'diamond'];\n    const expectedTexts = ['青铜会员', '白银会员', '黄金会员', '铂金会员', '钻石会员'];\n\n    levels.forEach((level, index) => {\n      expect(mockGetMemberLevelText(level)).toBe(expectedTexts[index]);\n    });\n  });\n}); "],"mappings":"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","ignoreList":[]}