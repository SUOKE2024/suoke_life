{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_Checkbox","_jsxRuntime","describe","it","mockOnPress","jest","fn","_render","render","jsx","default","checked","onPress","testID","getByTestId","expect","toBeTruthy","_render2","label","getByText","_render3","fireEvent","press","toHaveBeenCalledWith","_render4","_render5","disabled","not","toHaveBeenCalled","_render6","indeterminate"],"sources":["Checkbox.test.tsx"],"sourcesContent":["/**\n * Checkbox组件单元测试\n */\n\nimport React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport Checkbox from '../../../components/ui/Checkbox';\n\ndescribe('Checkbox组件', () => {\n  it('应该正确渲染', () => {\n    const mockOnPress = jest.fn();\n    const { getByTestId } = render(\n      <Checkbox\n        checked={false}\n        onPress={mockOnPress}\n        testID=\"test-checkbox\"\n      />\n    );\n\n    expect(getByTestId('test-checkbox')).toBeTruthy();\n  });\n\n  it('应该显示标签', () => {\n    const mockOnPress = jest.fn();\n    const { getByText } = render(\n      <Checkbox\n        checked={false}\n        onPress={mockOnPress}\n        label=\"测试标签\"\n      />\n    );\n\n    expect(getByText('测试标签')).toBeTruthy();\n  });\n\n  it('应该处理点击事件', () => {\n    const mockOnPress = jest.fn();\n    const { getByTestId } = render(\n      <Checkbox\n        checked={false}\n        onPress={mockOnPress}\n        testID=\"test-checkbox\"\n      />\n    );\n\n    fireEvent.press(getByTestId('test-checkbox'));\n    expect(mockOnPress).toHaveBeenCalledWith(true);\n  });\n\n  it('选中状态下点击应该取消选中', () => {\n    const mockOnPress = jest.fn();\n    const { getByTestId } = render(\n      <Checkbox\n        checked={true}\n        onPress={mockOnPress}\n        testID=\"test-checkbox\"\n      />\n    );\n\n    fireEvent.press(getByTestId('test-checkbox'));\n    expect(mockOnPress).toHaveBeenCalledWith(false);\n  });\n\n  it('禁用状态下不应该响应点击', () => {\n    const mockOnPress = jest.fn();\n    const { getByTestId } = render(\n      <Checkbox\n        checked={false}\n        onPress={mockOnPress}\n        disabled={true}\n        testID=\"test-checkbox\"\n      />\n    );\n\n    fireEvent.press(getByTestId('test-checkbox'));\n    expect(mockOnPress).not.toHaveBeenCalled();\n  });\n\n  it('应该支持不确定状态', () => {\n    const mockOnPress = jest.fn();\n    const { getByTestId } = render(\n      <Checkbox\n        checked={false}\n        onPress={mockOnPress}\n        indeterminate={true}\n        testID=\"test-checkbox\"\n      />\n    );\n\n    expect(getByTestId('test-checkbox')).toBeTruthy();\n  });\n}); "],"mappings":"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","ignoreList":[]}