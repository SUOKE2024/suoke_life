{"version":3,"names":["ACCESSIBILITY_API_CONFIG","cov_275t1qu2hp","s","baseUrl","timeout","AccessibilityServiceClient","exports","_classCallCheck2","default","f","_createClass2","key","value","_processVoiceInput","_asyncToGenerator2","audioData","userId","context","arguments","length","undefined","b","language","dialect","formData","FormData","base64","append","response","fetch","uri","blob","method","body","headers","ok","Error","status","result","json","recognized_text","response_text","response_audio","confidence","success","error","console","message","processVoiceInput","_x","_x2","apply","_processImageInput","imageData","imageType","JSON","stringify","detail_level","medical_context","scene_description","medical_features","navigation_guidance","audio_guidance","processImageInput","_x3","_x4","_processSignLanguageInput","videoData","segments","processSignLanguageInput","_x5","_x6","_generateAccessibleHealthContent","content","contentType","targetFormat","user_id","content_type","target_format","preferences","voice_type","speech_rate","high_contrast","accessible_content","content_url","audio_content","tactile_content","generateAccessibleHealthContent","_x7","_x8","_provideScreenReading","screenData","screen_data","screen_description","ui_elements","audio_description","provideScreenReading","_x9","_x0","_manageAccessibilitySettings","action","current_preferences","screen_reader","font_size","manageAccessibilitySettings","_x1","_x10","_healthCheck","controller","AbortController","timeoutId","setTimeout","abort","signal","clearTimeout","healthCheck","_adaptInterfaceForAccessibility","accessibilityNeeds","adaptations","visual","hearing","motor","cognitive","fontSize","highContrast","screenReader","voiceOutput","magnification","colorAdjustment","captions","visualIndicators","vibrationFeedback","signLanguageSupport","largeButtons","voiceControl","eyeTracking","switchControl","gestureAlternatives","simplifiedInterface","stepByStep","reminders","navigationAssist","clearInstructions","adaptInterfaceForAccessibility","_x11","accessibilityServiceClient"],"sources":["AccessibilityServiceClient.ts"],"sourcesContent":["import {\n  AccessibilityNeeds,\n  UserProfile,\n  ImageData,\n  AudioData\n} from '../types';\n\n// 无障碍服务配置\nconst ACCESSIBILITY_API_CONFIG = {\n  baseUrl: 'http://localhost:50051', // 无障碍服务地址\n  timeout: 30000\n};\n\n// 无障碍服务响应类型\nexport interface AccessibilityResponse {\n  success: boolean;\n  data?: any;\n  error?: string;\n}\n\nexport interface VoiceAssistanceResponse {\n  recognized_text: string;\n  response_text: string;\n  response_audio: string; // base64编码的音频\n  confidence: number;\n  success: boolean;\n  error?: string;\n}\n\nexport interface ImageAssistanceResponse {\n  scene_description: string;\n  medical_features: Array<{\n    type: string;\n    description: string;\n    confidence: number;\n  }>;\n  navigation_guidance: string;\n  confidence: number;\n  audio_guidance: string; // base64编码的音频\n  success: boolean;\n  error?: string;\n}\n\nexport interface SignLanguageResponse {\n  recognized_text: string;\n  confidence: number;\n  segments: Array<{\n    text: string;\n    start_time_ms: number;\n    end_time_ms: number;\n    confidence: number;\n  }>;\n  success: boolean;\n  error?: string;\n}\n\nexport interface AccessibleContentResponse {\n  accessible_content: string;\n  content_url: string;\n  audio_content: string; // base64编码的音频\n  tactile_content: string; // 盲文内容\n  success: boolean;\n  error?: string;\n}\n\nexport interface ScreenReadingResponse {\n  screen_description: string;\n  ui_elements: Array<{\n    element_type: string;\n    content: string;\n    action: string;\n    location: {\n      x: number;\n      y: number;\n      width: number;\n      height: number;\n    };\n  }>;\n  audio_description: string; // base64编码的音频\n  success: boolean;\n  error?: string;\n}\n\nexport interface AccessibilitySettingsResponse {\n  current_preferences: {\n    language: string;\n    voice_type: string;\n    speech_rate: number;\n    high_contrast: boolean;\n    screen_reader: boolean;\n    font_size: string;\n    [key: string]: any;\n  };\n  success: boolean;\n  message: string;\n  error?: string;\n}\n\n/**\n * 无障碍服务客户端\n * 对应后端Python的AccessibilityClient实现\n */\nexport class AccessibilityServiceClient {\n  private baseUrl: string;\n  private timeout: number;\n\n  constructor() {\n    this.baseUrl = ACCESSIBILITY_API_CONFIG.baseUrl;\n    this.timeout = ACCESSIBILITY_API_CONFIG.timeout;\n  }\n\n  /**\n   * 处理语音输入，支持语音识别和语音辅助\n   */\n  async processVoiceInput(\n    audioData: AudioData,\n    userId: string,\n    context: string = 'diagnosis',\n    language: string = 'zh-CN',\n    dialect: string = 'standard'\n  ): Promise<VoiceAssistanceResponse> {\n    try {\n      const formData = new FormData();\n      \n      // 处理音频数据\n      if (audioData.base64) {\n        formData.append('audio_data', audioData.base64);\n      } else {\n        const response = await fetch(audioData.uri);\n        const blob = await response.blob();\n        formData.append('audio_file', blob);\n      }\n      \n      formData.append('user_id', userId);\n      formData.append('context', context);\n      formData.append('language', language);\n      formData.append('dialect', dialect);\n\n      const response = await fetch(`${this.baseUrl}/api/v1/accessibility/voice-assistance`, {\n        method: 'POST',\n        body: formData,\n        headers: {\n          'Accept': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const result = await response.json();\n      \n      return {\n        recognized_text: result.recognized_text || '',\n        response_text: result.response_text || '',\n        response_audio: result.response_audio || '',\n        confidence: result.confidence || 0.0,\n        success: true\n      };\n\n    } catch (error) {\n      console.error('语音输入处理失败:', error);\n      return {\n        recognized_text: '',\n        response_text: `语音处理失败: ${(error as Error).message}`,\n        response_audio: '',\n        confidence: 0.0,\n        success: false,\n        error: (error as Error).message\n      };\n    }\n  }\n\n  /**\n   * 处理图像输入，支持图像识别和描述\n   */\n  async processImageInput(\n    imageData: ImageData,\n    userId: string,\n    imageType: string = 'tongue',\n    context: string = 'looking_diagnosis'\n  ): Promise<ImageAssistanceResponse> {\n    try {\n      const formData = new FormData();\n      \n      // 处理图像数据\n      if (imageData.base64) {\n        formData.append('image_data', imageData.base64);\n      } else {\n        const response = await fetch(imageData.uri);\n        const blob = await response.blob();\n        formData.append('image_file', blob);\n      }\n      \n      formData.append('user_id', userId);\n      formData.append('image_type', imageType);\n      formData.append('context', context);\n      formData.append('preferences', JSON.stringify({\n        language: 'zh-CN',\n        detail_level: 'high',\n        medical_context: true\n      }));\n\n      const response = await fetch(`${this.baseUrl}/api/v1/accessibility/image-assistance`, {\n        method: 'POST',\n        body: formData,\n        headers: {\n          'Accept': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const result = await response.json();\n      \n      return {\n        scene_description: result.scene_description || '',\n        medical_features: result.medical_features || [],\n        navigation_guidance: result.navigation_guidance || '',\n        confidence: result.confidence || 0.0,\n        audio_guidance: result.audio_guidance || '',\n        success: true\n      };\n\n    } catch (error) {\n      console.error('图像输入处理失败:', error);\n      return {\n        scene_description: `图像处理失败: ${(error as Error).message}`,\n        medical_features: [],\n        navigation_guidance: '',\n        confidence: 0.0,\n        audio_guidance: '',\n        success: false,\n        error: (error as Error).message\n      };\n    }\n  }\n\n  /**\n   * 处理手语输入，支持手语识别\n   */\n  async processSignLanguageInput(\n    videoData: Blob,\n    userId: string,\n    language: string = 'csl'\n  ): Promise<SignLanguageResponse> {\n    try {\n      const formData = new FormData();\n      formData.append('video_file', videoData);\n      formData.append('user_id', userId);\n      formData.append('language', language);\n\n      const response = await fetch(`${this.baseUrl}/api/v1/accessibility/sign-language`, {\n        method: 'POST',\n        body: formData,\n        headers: {\n          'Accept': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const result = await response.json();\n      \n      return {\n        recognized_text: result.recognized_text || '',\n        confidence: result.confidence || 0.0,\n        segments: result.segments || [],\n        success: true\n      };\n\n    } catch (error) {\n      console.error('手语输入处理失败:', error);\n      return {\n        recognized_text: `手语处理失败: ${(error as Error).message}`,\n        confidence: 0.0,\n        segments: [],\n        success: false,\n        error: (error as Error).message\n      };\n    }\n  }\n\n  /**\n   * 生成无障碍健康内容\n   */\n  async generateAccessibleHealthContent(\n    content: string,\n    userId: string,\n    contentType: string = 'diagnosis_result',\n    targetFormat: string = 'audio'\n  ): Promise<AccessibleContentResponse> {\n    try {\n      const response = await fetch(`${this.baseUrl}/api/v1/accessibility/accessible-content`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n        },\n        body: JSON.stringify({\n          content,\n          user_id: userId,\n          content_type: contentType,\n          target_format: targetFormat,\n          preferences: {\n            language: 'zh-CN',\n            voice_type: 'female',\n            speech_rate: 1.0,\n            high_contrast: false\n          }\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const result = await response.json();\n      \n      return {\n        accessible_content: result.accessible_content || '',\n        content_url: result.content_url || '',\n        audio_content: result.audio_content || '',\n        tactile_content: result.tactile_content || '',\n        success: true\n      };\n\n    } catch (error) {\n      console.error('无障碍内容生成失败:', error);\n      return {\n        accessible_content: `内容转换失败: ${(error as Error).message}`,\n        content_url: '',\n        audio_content: '',\n        tactile_content: '',\n        success: false,\n        error: (error as Error).message\n      };\n    }\n  }\n\n  /**\n   * 提供屏幕阅读服务\n   */\n  async provideScreenReading(\n    screenData: string, // base64编码的屏幕截图\n    userId: string,\n    context: string = 'diagnosis_interface'\n  ): Promise<ScreenReadingResponse> {\n    try {\n      const response = await fetch(`${this.baseUrl}/api/v1/accessibility/screen-reading`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n        },\n        body: JSON.stringify({\n          screen_data: screenData,\n          user_id: userId,\n          context,\n          preferences: {\n            language: 'zh-CN',\n            detail_level: 'medium',\n            medical_context: true\n          }\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const result = await response.json();\n      \n      return {\n        screen_description: result.screen_description || '',\n        ui_elements: result.ui_elements || [],\n        audio_description: result.audio_description || '',\n        success: true\n      };\n\n    } catch (error) {\n      console.error('屏幕阅读失败:', error);\n      return {\n        screen_description: `屏幕阅读失败: ${(error as Error).message}`,\n        ui_elements: [],\n        audio_description: '',\n        success: false,\n        error: (error as Error).message\n      };\n    }\n  }\n\n  /**\n   * 管理用户的无障碍设置\n   */\n  async manageAccessibilitySettings(\n    userId: string,\n    preferences: any,\n    action: string = 'update'\n  ): Promise<AccessibilitySettingsResponse> {\n    try {\n      const response = await fetch(`${this.baseUrl}/api/v1/accessibility/settings`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n        },\n        body: JSON.stringify({\n          user_id: userId,\n          preferences,\n          action\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const result = await response.json();\n      \n      return {\n        current_preferences: result.current_preferences || {},\n        success: result.success || false,\n        message: result.message || '',\n      };\n\n    } catch (error) {\n      console.error('无障碍设置管理失败:', error);\n      return {\n        current_preferences: {\n          language: 'zh-CN',\n          voice_type: 'female',\n          speech_rate: 1.0,\n          high_contrast: false,\n          screen_reader: false,\n          font_size: 'medium'\n        },\n        success: false,\n        message: `设置管理失败: ${(error as Error).message}`,\n        error: (error as Error).message\n      };\n    }\n  }\n\n  /**\n   * 健康检查\n   */\n  async healthCheck(): Promise<boolean> {\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 5000);\n      \n      const response = await fetch(`${this.baseUrl}/health`, {\n        method: 'GET',\n        signal: controller.signal\n      });\n      \n      clearTimeout(timeoutId);\n      return response.ok;\n    } catch (error) {\n      console.error('无障碍服务健康检查失败:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 根据用户的无障碍需求适配界面\n   */\n  async adaptInterfaceForAccessibility(\n    accessibilityNeeds: AccessibilityNeeds\n  ): Promise<any> {\n    const adaptations: any = {\n      visual: {},\n      hearing: {},\n      motor: {},\n      cognitive: {}\n    };\n\n    // 视觉障碍适配\n    if (accessibilityNeeds.visual) {\n      adaptations.visual = {\n        fontSize: accessibilityNeeds.preferences.fontSize,\n        highContrast: accessibilityNeeds.preferences.highContrast,\n        screenReader: accessibilityNeeds.preferences.voiceOutput,\n        magnification: true,\n        colorAdjustment: true\n      };\n    }\n\n    // 听觉障碍适配\n    if (accessibilityNeeds.hearing) {\n      adaptations.hearing = {\n        captions: true,\n        visualIndicators: true,\n        vibrationFeedback: true,\n        signLanguageSupport: true\n      };\n    }\n\n    // 运动障碍适配\n    if (accessibilityNeeds.motor) {\n      adaptations.motor = {\n        largeButtons: true,\n        voiceControl: true,\n        eyeTracking: true,\n        switchControl: true,\n        gestureAlternatives: true\n      };\n    }\n\n    // 认知障碍适配\n    if (accessibilityNeeds.cognitive) {\n      adaptations.cognitive = {\n        simplifiedInterface: accessibilityNeeds.preferences.simplifiedInterface,\n        stepByStep: true,\n        reminders: true,\n        navigationAssist: true,\n        clearInstructions: true\n      };\n    }\n\n    return adaptations;\n  }\n}\n\n// 创建单例实例\nexport const accessibilityServiceClient = new AccessibilityServiceClient(); "],"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","ignoreList":[]}