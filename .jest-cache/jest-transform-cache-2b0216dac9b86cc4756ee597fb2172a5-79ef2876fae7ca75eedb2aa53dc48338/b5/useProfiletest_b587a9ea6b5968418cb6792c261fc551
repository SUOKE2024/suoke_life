364c222e9ce87a1fea71660aeea395af
_getJestObj().mock('react-native', function () {
  return {
    Alert: {
      alert: jest.fn()
    }
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _reactNative = require("@testing-library/react-native");
var _reactNative2 = require("react-native");
var _useProfile = require("../../hooks/useProfile");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
var mockAlert = _reactNative2.Alert.alert;
describe('useProfile', function () {
  beforeEach(function () {
    jest.clearAllMocks();
  });
  it('应该初始化默认状态', function () {
    var _renderHook = (0, _reactNative.renderHook)(function () {
        return (0, _useProfile.useProfile)();
      }),
      result = _renderHook.result;
    expect(result.current.userProfile).toBeDefined();
    expect(result.current.agentInteractions).toHaveLength(4);
    expect(result.current.achievements).toBeDefined();
    expect(result.current.benefits).toBeDefined();
    expect(result.current.activeTab).toBe('agents');
    expect(result.current.loading).toBe(false);
  });
  it('应该正确切换活动标签', function () {
    var _renderHook2 = (0, _reactNative.renderHook)(function () {
        return (0, _useProfile.useProfile)();
      }),
      result = _renderHook2.result;
    (0, _reactNative.act)(function () {
      result.current.setActiveTab('achievements');
    });
    expect(result.current.activeTab).toBe('achievements');
    (0, _reactNative.act)(function () {
      result.current.setActiveTab('benefits');
    });
    expect(result.current.activeTab).toBe('benefits');
  });
  it('应该正确处理与智能体聊天', function () {
    var _renderHook3 = (0, _reactNative.renderHook)(function () {
        return (0, _useProfile.useProfile)();
      }),
      result = _renderHook3.result;
    var agent = result.current.agentInteractions[0];
    (0, _reactNative.act)(function () {
      result.current.chatWithAgent(agent);
    });
    expect(mockAlert).toHaveBeenCalledWith(`与${agent.agentName}聊天`, expect.stringContaining(agent.agentName), expect.any(Array));
  });
  it('应该正确查看成就详情', function () {
    var _renderHook4 = (0, _reactNative.renderHook)(function () {
        return (0, _useProfile.useProfile)();
      }),
      result = _renderHook4.result;
    var achievement = result.current.achievements[0];
    (0, _reactNative.act)(function () {
      result.current.viewAchievement(achievement);
    });
    expect(mockAlert).toHaveBeenCalledWith(achievement.title, expect.stringContaining(achievement.description), expect.any(Array));
  });
  it('应该正确使用会员特权', function () {
    var _renderHook5 = (0, _reactNative.renderHook)(function () {
        return (0, _useProfile.useProfile)();
      }),
      result = _renderHook5.result;
    var benefit = result.current.benefits[0];
    (0, _reactNative.act)(function () {
      result.current.useBenefit(benefit);
    });
    expect(mockAlert).toHaveBeenCalled();
  });
  it('应该正确处理设置项点击', function () {
    var _renderHook6 = (0, _reactNative.renderHook)(function () {
        return (0, _useProfile.useProfile)();
      }),
      result = _renderHook6.result;
    (0, _reactNative.act)(function () {
      result.current.handleSettingPress('logout');
    });
    expect(mockAlert).toHaveBeenCalledWith('退出登录', '确定要退出登录吗？', expect.any(Array));
  });
  it('应该正确更新用户资料', (0, _asyncToGenerator2.default)(function* () {
    var _renderHook7 = (0, _reactNative.renderHook)(function () {
        return (0, _useProfile.useProfile)();
      }),
      result = _renderHook7.result;
    var updates = {
      name: '新用户名'
    };
    yield (0, _reactNative.act)((0, _asyncToGenerator2.default)(function* () {
      yield result.current.updateProfile(updates);
    }));
    expect(result.current.userProfile.name).toBe('新用户名');
    expect(mockAlert).toHaveBeenCalledWith('更新成功', '个人资料已更新');
  }));
  it('应该正确获取健康分数颜色', function () {
    var _renderHook8 = (0, _reactNative.renderHook)(function () {
        return (0, _useProfile.useProfile)();
      }),
      result = _renderHook8.result;
    expect(result.current.getHealthScoreColor(90)).toBe('#34C759');
    expect(result.current.getHealthScoreColor(70)).toBe('#FF9500');
    expect(result.current.getHealthScoreColor(50)).toBe('#FF3B30');
  });
  it('应该正确获取会员等级文本', function () {
    var _renderHook9 = (0, _reactNative.renderHook)(function () {
        return (0, _useProfile.useProfile)();
      }),
      result = _renderHook9.result;
    expect(result.current.getMemberLevelText('gold')).toBe('黄金会员');
    expect(result.current.getMemberLevelText('silver')).toBe('白银会员');
    expect(result.current.getMemberLevelText('unknown')).toBe('普通会员');
  });
  it('应该正确计算统计数据', function () {
    var _renderHook0 = (0, _reactNative.renderHook)(function () {
        return (0, _useProfile.useProfile)();
      }),
      result = _renderHook0.result;
    expect(result.current.stats.totalAchievements).toBeGreaterThan(0);
    expect(result.current.stats.unlockedAchievements).toBeGreaterThanOrEqual(0);
    expect(result.current.stats.achievementProgress).toBeGreaterThanOrEqual(0);
    expect(result.current.stats.availableBenefits).toBeGreaterThanOrEqual(0);
  });
  it('应该正确过滤成就', function () {
    var _renderHook1 = (0, _reactNative.renderHook)(function () {
        return (0, _useProfile.useProfile)();
      }),
      result = _renderHook1.result;
    var unlockedAchievements = result.current.filterAchievements(undefined, true);
    expect(unlockedAchievements.every(function (a) {
      return a.unlocked;
    })).toBe(true);
    var lockedAchievements = result.current.filterAchievements(undefined, false);
    expect(lockedAchievements.every(function (a) {
      return !a.unlocked;
    })).toBe(true);
    var healthAchievements = result.current.filterAchievements('health');
    expect(healthAchievements.every(function (a) {
      return a.category === 'health';
    })).toBe(true);
  });
  it('应该正确获取推荐操作', function () {
    var _renderHook10 = (0, _reactNative.renderHook)(function () {
        return (0, _useProfile.useProfile)();
      }),
      result = _renderHook10.result;
    var recommendations = result.current.getRecommendedActions();
    expect(Array.isArray(recommendations)).toBe(true);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,