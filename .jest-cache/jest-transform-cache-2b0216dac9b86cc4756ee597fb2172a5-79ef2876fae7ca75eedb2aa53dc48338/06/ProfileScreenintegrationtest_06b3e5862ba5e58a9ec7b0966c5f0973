2d9a616bf58c2f004d8f4f57df1e892f
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _reactNative2 = require("react-native");
var _jsxRuntime = require("react/jsx-runtime");
var mockUser = {
  id: '1',
  name: '张三',
  email: 'zhangsan@example.com',
  phone: '13812345678',
  avatar: 'https://example.com/avatar.jpg',
  age: 30,
  gender: '男',
  height: 175,
  weight: 70,
  bloodType: 'A'
};
var MockProfileScreen = function MockProfileScreen() {
  var _React$useState = _react.default.useState(mockUser),
    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
    user = _React$useState2[0],
    setUser = _React$useState2[1];
  var _React$useState3 = _react.default.useState(false),
    _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),
    isEditing = _React$useState4[0],
    setIsEditing = _React$useState4[1];
  var _React$useState5 = _react.default.useState(mockUser),
    _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2),
    editForm = _React$useState6[0],
    setEditForm = _React$useState6[1];
  var handleEdit = function handleEdit() {
    setIsEditing(true);
    setEditForm(user);
  };
  var handleSave = function handleSave() {
    setUser(editForm);
    setIsEditing(false);
  };
  var handleCancel = function handleCancel() {
    setEditForm(user);
    setIsEditing(false);
  };
  return (0, _jsxRuntime.jsxs)(_reactNative2.ScrollView, {
    testID: "profile-screen",
    children: [(0, _jsxRuntime.jsxs)(_reactNative2.View, {
      testID: "profile-header",
      children: [(0, _jsxRuntime.jsx)(_reactNative2.Text, {
        testID: "profile-title",
        children: "\u4E2A\u4EBA\u8D44\u6599"
      }), !isEditing && (0, _jsxRuntime.jsx)(_reactNative2.TouchableOpacity, {
        testID: "edit-button",
        onPress: handleEdit,
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\u7F16\u8F91"
        })
      })]
    }), isEditing ? (0, _jsxRuntime.jsxs)(_reactNative2.View, {
      testID: "edit-form",
      children: [(0, _jsxRuntime.jsxs)(_reactNative2.View, {
        testID: "form-field-name",
        children: [(0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\u59D3\u540D"
        }), (0, _jsxRuntime.jsx)(_reactNative2.TextInput, {
          testID: "input-name",
          value: editForm.name,
          onChangeText: function onChangeText(text) {
            return setEditForm(Object.assign({}, editForm, {
              name: text
            }));
          }
        })]
      }), (0, _jsxRuntime.jsxs)(_reactNative2.View, {
        testID: "form-field-email",
        children: [(0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\u90AE\u7BB1"
        }), (0, _jsxRuntime.jsx)(_reactNative2.TextInput, {
          testID: "input-email",
          value: editForm.email,
          onChangeText: function onChangeText(text) {
            return setEditForm(Object.assign({}, editForm, {
              email: text
            }));
          }
        })]
      }), (0, _jsxRuntime.jsxs)(_reactNative2.View, {
        testID: "form-field-phone",
        children: [(0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\u624B\u673A\u53F7"
        }), (0, _jsxRuntime.jsx)(_reactNative2.TextInput, {
          testID: "input-phone",
          value: editForm.phone,
          onChangeText: function onChangeText(text) {
            return setEditForm(Object.assign({}, editForm, {
              phone: text
            }));
          }
        })]
      }), (0, _jsxRuntime.jsxs)(_reactNative2.View, {
        testID: "form-actions",
        children: [(0, _jsxRuntime.jsx)(_reactNative2.TouchableOpacity, {
          testID: "save-button",
          onPress: handleSave,
          children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
            children: "\u4FDD\u5B58"
          })
        }), (0, _jsxRuntime.jsx)(_reactNative2.TouchableOpacity, {
          testID: "cancel-button",
          onPress: handleCancel,
          children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
            children: "\u53D6\u6D88"
          })
        })]
      })]
    }) : (0, _jsxRuntime.jsxs)(_reactNative2.View, {
      testID: "profile-info",
      children: [(0, _jsxRuntime.jsxs)(_reactNative2.View, {
        testID: "info-field-name",
        children: [(0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\u59D3\u540D"
        }), (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          testID: "display-name",
          children: user.name
        })]
      }), (0, _jsxRuntime.jsxs)(_reactNative2.View, {
        testID: "info-field-email",
        children: [(0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\u90AE\u7BB1"
        }), (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          testID: "display-email",
          children: user.email
        })]
      }), (0, _jsxRuntime.jsxs)(_reactNative2.View, {
        testID: "info-field-phone",
        children: [(0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\u624B\u673A\u53F7"
        }), (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          testID: "display-phone",
          children: user.phone
        })]
      }), (0, _jsxRuntime.jsxs)(_reactNative2.View, {
        testID: "info-field-age",
        children: [(0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\u5E74\u9F84"
        }), (0, _jsxRuntime.jsxs)(_reactNative2.Text, {
          testID: "display-age",
          children: [user.age, "\u5C81"]
        })]
      }), (0, _jsxRuntime.jsxs)(_reactNative2.View, {
        testID: "info-field-gender",
        children: [(0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\u6027\u522B"
        }), (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          testID: "display-gender",
          children: user.gender
        })]
      })]
    })]
  });
};
describe('ProfileScreen Integration Tests', function () {
  it('应该正确渲染个人资料页面', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(MockProfileScreen, {})),
      getByTestId = _render.getByTestId,
      getByText = _render.getByText;
    expect(getByTestId('profile-screen')).toBeTruthy();
    expect(getByTestId('profile-header')).toBeTruthy();
    expect(getByText('个人资料')).toBeTruthy();
    expect(getByTestId('edit-button')).toBeTruthy();
    expect(getByTestId('profile-info')).toBeTruthy();
  });
  it('应该显示用户基本信息', function () {
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(MockProfileScreen, {})),
      getByTestId = _render2.getByTestId;
    expect(getByTestId('display-name')).toBeTruthy();
    expect(getByTestId('display-email')).toBeTruthy();
    expect(getByTestId('display-phone')).toBeTruthy();
    expect(getByTestId('display-age')).toBeTruthy();
    expect(getByTestId('display-gender')).toBeTruthy();
  });
  it('应该能够进入编辑模式', function () {
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(MockProfileScreen, {})),
      getByTestId = _render3.getByTestId;
    var editButton = getByTestId('edit-button');
    _reactNative.fireEvent.press(editButton);
    expect(getByTestId('edit-form')).toBeTruthy();
    expect(getByTestId('input-name')).toBeTruthy();
    expect(getByTestId('input-email')).toBeTruthy();
    expect(getByTestId('input-phone')).toBeTruthy();
    expect(getByTestId('save-button')).toBeTruthy();
    expect(getByTestId('cancel-button')).toBeTruthy();
  });
  it('应该能够编辑用户信息', function () {
    var _render4 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(MockProfileScreen, {})),
      getByTestId = _render4.getByTestId;
    _reactNative.fireEvent.press(getByTestId('edit-button'));
    var nameInput = getByTestId('input-name');
    _reactNative.fireEvent.changeText(nameInput, '李四');
    var emailInput = getByTestId('input-email');
    _reactNative.fireEvent.changeText(emailInput, 'lisi@example.com');
    _reactNative.fireEvent.press(getByTestId('save-button'));
    expect(getByTestId('display-name')).toBeTruthy();
    expect(getByTestId('display-email')).toBeTruthy();
  });
  it('应该能够取消编辑', function () {
    var _render5 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(MockProfileScreen, {})),
      getByTestId = _render5.getByTestId;
    _reactNative.fireEvent.press(getByTestId('edit-button'));
    var nameInput = getByTestId('input-name');
    _reactNative.fireEvent.changeText(nameInput, '王五');
    _reactNative.fireEvent.press(getByTestId('cancel-button'));
    expect(getByTestId('profile-info')).toBeTruthy();
    expect(getByTestId('display-name')).toBeTruthy();
  });
  it('应该正确处理表单输入', function () {
    var _render6 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(MockProfileScreen, {})),
      getByTestId = _render6.getByTestId;
    _reactNative.fireEvent.press(getByTestId('edit-button'));
    var nameInput = getByTestId('input-name');
    var emailInput = getByTestId('input-email');
    var phoneInput = getByTestId('input-phone');
    expect(nameInput.props.value).toBe('张三');
    expect(emailInput.props.value).toBe('zhangsan@example.com');
    expect(phoneInput.props.value).toBe('13812345678');
    _reactNative.fireEvent.changeText(nameInput, '新姓名');
    _reactNative.fireEvent.changeText(emailInput, 'new@example.com');
    _reactNative.fireEvent.changeText(phoneInput, '13987654321');
    expect(nameInput.props.value).toBe('新姓名');
    expect(emailInput.props.value).toBe('new@example.com');
    expect(phoneInput.props.value).toBe('13987654321');
  });
  it('应该在编辑模式下隐藏编辑按钮', function () {
    var _render7 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(MockProfileScreen, {})),
      getByTestId = _render7.getByTestId,
      queryByTestId = _render7.queryByTestId;
    _reactNative.fireEvent.press(getByTestId('edit-button'));
    expect(queryByTestId('edit-button')).toBeNull();
    expect(getByTestId('edit-form')).toBeTruthy();
  });
  it('应该在查看模式下隐藏编辑表单', function () {
    var _render8 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(MockProfileScreen, {})),
      getByTestId = _render8.getByTestId,
      queryByTestId = _render8.queryByTestId;
    expect(getByTestId('profile-info')).toBeTruthy();
    expect(queryByTestId('edit-form')).toBeNull();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,