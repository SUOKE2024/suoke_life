{"version":3,"names":["formatUtils","formatDate","date","format","d","Date","toISOString","split","month","getMonth","toString","padStart","day","getDate","toLocaleDateString","formatTime","toLocaleTimeString","hour12","formatNumber","num","decimals","arguments","length","undefined","toFixed","formatCurrency","amount","formatPercentage","value","total","percentage","formatFileSize","bytes","k","sizes","i","Math","floor","log","pow","formatPhoneNumber","phone","cleaned","replace","slice","startsWith","number","formatHealthScore","score","formatDuration","minutes","hours","remainingMinutes","formatRelativeTime","now","target","getTime","diffMs","diffMinutes","diffHours","diffDays","describe","it","result","expect","toBe","toMatch","beforeEach","jest","spyOn","mockReturnValue","afterEach","restoreAllMocks"],"sources":["formatUtils.test.ts"],"sourcesContent":["// Mock格式化工具函数\nconst formatUtils = {\n  formatDate: (date: Date | string, format?: string): string => {\n    const d = new Date(date);\n    if (format === 'YYYY-MM-DD') {\n      return d.toISOString().split('T')[0];\n    }\n    if (format === 'MM-DD') {\n      const month = (d.getMonth() + 1).toString().padStart(2, '0');\n      const day = d.getDate().toString().padStart(2, '0');\n      return `${month}-${day}`;\n    }\n    return d.toLocaleDateString('zh-CN');\n  },\n\n  formatTime: (date: Date | string): string => {\n    const d = new Date(date);\n    return d.toLocaleTimeString('zh-CN', { hour12: false });\n  },\n\n  formatNumber: (num: number, decimals: number = 0): string => {\n    return num.toFixed(decimals);\n  },\n\n  formatCurrency: (amount: number): string => {\n    return `¥${amount.toFixed(2)}`;\n  },\n\n  formatPercentage: (value: number, total: number): string => {\n    const percentage = (value / total) * 100;\n    return `${percentage.toFixed(1)}%`;\n  },\n\n  formatFileSize: (bytes: number): string => {\n    if (bytes === 0) return '0 B';\n    const k = 1024;\n    const sizes = ['B', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return `${(bytes / Math.pow(k, i)).toFixed(1)} ${sizes[i]}`;\n  },\n\n  formatPhoneNumber: (phone: string): string => {\n    const cleaned = phone.replace(/\\D/g, '');\n    if (cleaned.length === 11) {\n      return `${cleaned.slice(0, 3)} ${cleaned.slice(3, 7)} ${cleaned.slice(7)}`;\n    }\n    if (cleaned.length === 13 && cleaned.startsWith('86')) {\n      // 处理+86开头的号码\n      const number = cleaned.slice(2);\n      return `${number.slice(0, 3)} ${number.slice(3, 7)} ${number.slice(7)}`;\n    }\n    return phone;\n  },\n\n  formatHealthScore: (score: number): string => {\n    if (score >= 90) return '优秀';\n    if (score >= 80) return '良好';\n    if (score >= 70) return '一般';\n    if (score >= 60) return '较差';\n    return '差';\n  },\n\n  formatDuration: (minutes: number): string => {\n    if (minutes < 60) {\n      return `${minutes}分钟`;\n    }\n    const hours = Math.floor(minutes / 60);\n    const remainingMinutes = minutes % 60;\n    if (remainingMinutes === 0) {\n      return `${hours}小时`;\n    }\n    return `${hours}小时${remainingMinutes}分钟`;\n  },\n\n  formatRelativeTime: (date: Date | string): string => {\n    const now = Date.now();\n    const target = new Date(date).getTime();\n    const diffMs = now - target;\n    const diffMinutes = Math.floor(diffMs / (1000 * 60));\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n\n    if (diffMinutes < 1) return '刚刚';\n    if (diffMinutes < 60) return `${diffMinutes}分钟前`;\n    if (diffHours < 24) return `${diffHours}小时前`;\n    if (diffDays < 7) return `${diffDays}天前`;\n    return formatUtils.formatDate(date);\n  },\n};\n\ndescribe('FormatUtils', () => {\n  describe('日期格式化', () => {\n    it('应该正确格式化日期为YYYY-MM-DD', () => {\n      const date = new Date('2024-01-15T10:30:00');\n      const result = formatUtils.formatDate(date, 'YYYY-MM-DD');\n      expect(result).toBe('2024-01-15');\n    });\n\n    it('应该正确格式化日期为MM-DD', () => {\n      const date = new Date('2024-01-15T10:30:00');\n      const result = formatUtils.formatDate(date, 'MM-DD');\n      expect(result).toBe('01-15');\n    });\n\n    it('应该正确格式化为本地日期', () => {\n      const date = new Date('2024-01-15T10:30:00');\n      const result = formatUtils.formatDate(date);\n      expect(result).toMatch(/2024/);\n    });\n\n    it('应该处理字符串日期', () => {\n      const result = formatUtils.formatDate('2024-01-15', 'YYYY-MM-DD');\n      expect(result).toBe('2024-01-15');\n    });\n  });\n\n  describe('时间格式化', () => {\n    it('应该正确格式化时间', () => {\n      const date = new Date('2024-01-15T10:30:00');\n      const result = formatUtils.formatTime(date);\n      expect(result).toMatch(/10:30:00/);\n    });\n  });\n\n  describe('数字格式化', () => {\n    it('应该正确格式化整数', () => {\n      const result = formatUtils.formatNumber(123);\n      expect(result).toBe('123');\n    });\n\n    it('应该正确格式化小数', () => {\n      const result = formatUtils.formatNumber(123.456, 2);\n      expect(result).toBe('123.46');\n    });\n\n    it('应该处理零值', () => {\n      const result = formatUtils.formatNumber(0, 2);\n      expect(result).toBe('0.00');\n    });\n  });\n\n  describe('货币格式化', () => {\n    it('应该正确格式化货币', () => {\n      const result = formatUtils.formatCurrency(123.45);\n      expect(result).toBe('¥123.45');\n    });\n\n    it('应该处理整数金额', () => {\n      const result = formatUtils.formatCurrency(100);\n      expect(result).toBe('¥100.00');\n    });\n\n    it('应该处理零金额', () => {\n      const result = formatUtils.formatCurrency(0);\n      expect(result).toBe('¥0.00');\n    });\n  });\n\n  describe('百分比格式化', () => {\n    it('应该正确计算百分比', () => {\n      const result = formatUtils.formatPercentage(25, 100);\n      expect(result).toBe('25.0%');\n    });\n\n    it('应该处理小数百分比', () => {\n      const result = formatUtils.formatPercentage(1, 3);\n      expect(result).toBe('33.3%');\n    });\n\n    it('应该处理零值', () => {\n      const result = formatUtils.formatPercentage(0, 100);\n      expect(result).toBe('0.0%');\n    });\n\n    it('应该处理100%', () => {\n      const result = formatUtils.formatPercentage(100, 100);\n      expect(result).toBe('100.0%');\n    });\n  });\n\n  describe('文件大小格式化', () => {\n    it('应该格式化字节', () => {\n      const result = formatUtils.formatFileSize(512);\n      expect(result).toBe('512.0 B');\n    });\n\n    it('应该格式化KB', () => {\n      const result = formatUtils.formatFileSize(1536);\n      expect(result).toBe('1.5 KB');\n    });\n\n    it('应该格式化MB', () => {\n      const result = formatUtils.formatFileSize(1572864);\n      expect(result).toBe('1.5 MB');\n    });\n\n    it('应该格式化GB', () => {\n      const result = formatUtils.formatFileSize(1610612736);\n      expect(result).toBe('1.5 GB');\n    });\n\n    it('应该处理零字节', () => {\n      const result = formatUtils.formatFileSize(0);\n      expect(result).toBe('0 B');\n    });\n  });\n\n  describe('手机号格式化', () => {\n    it('应该正确格式化11位手机号', () => {\n      const result = formatUtils.formatPhoneNumber('13800138000');\n      expect(result).toBe('138 0013 8000');\n    });\n\n    it('应该处理带符号的手机号', () => {\n      const result = formatUtils.formatPhoneNumber('+86-138-0013-8000');\n      expect(result).toBe('138 0013 8000');\n    });\n\n    it('应该保持非11位号码不变', () => {\n      const result = formatUtils.formatPhoneNumber('12345');\n      expect(result).toBe('12345');\n    });\n  });\n\n  describe('健康分数格式化', () => {\n    it('应该返回优秀', () => {\n      expect(formatUtils.formatHealthScore(95)).toBe('优秀');\n      expect(formatUtils.formatHealthScore(90)).toBe('优秀');\n    });\n\n    it('应该返回良好', () => {\n      expect(formatUtils.formatHealthScore(85)).toBe('良好');\n      expect(formatUtils.formatHealthScore(80)).toBe('良好');\n    });\n\n    it('应该返回一般', () => {\n      expect(formatUtils.formatHealthScore(75)).toBe('一般');\n      expect(formatUtils.formatHealthScore(70)).toBe('一般');\n    });\n\n    it('应该返回较差', () => {\n      expect(formatUtils.formatHealthScore(65)).toBe('较差');\n      expect(formatUtils.formatHealthScore(60)).toBe('较差');\n    });\n\n    it('应该返回差', () => {\n      expect(formatUtils.formatHealthScore(55)).toBe('差');\n      expect(formatUtils.formatHealthScore(30)).toBe('差');\n    });\n  });\n\n  describe('时长格式化', () => {\n    it('应该格式化分钟', () => {\n      expect(formatUtils.formatDuration(30)).toBe('30分钟');\n      expect(formatUtils.formatDuration(59)).toBe('59分钟');\n    });\n\n    it('应该格式化整小时', () => {\n      expect(formatUtils.formatDuration(60)).toBe('1小时');\n      expect(formatUtils.formatDuration(120)).toBe('2小时');\n    });\n\n    it('应该格式化小时和分钟', () => {\n      expect(formatUtils.formatDuration(90)).toBe('1小时30分钟');\n      expect(formatUtils.formatDuration(125)).toBe('2小时5分钟');\n    });\n\n    it('应该处理零分钟', () => {\n      expect(formatUtils.formatDuration(0)).toBe('0分钟');\n    });\n  });\n\n  describe('相对时间格式化', () => {\n    beforeEach(() => {\n      // Mock Date.now to return a fixed time\n      jest.spyOn(Date, 'now').mockReturnValue(new Date('2024-01-15T12:00:00').getTime());\n    });\n\n    afterEach(() => {\n      jest.restoreAllMocks();\n    });\n\n    it('应该返回刚刚', () => {\n      const date = new Date('2024-01-15T11:59:30');\n      const result = formatUtils.formatRelativeTime(date);\n      expect(result).toBe('刚刚');\n    });\n\n    it('应该返回分钟前', () => {\n      const date = new Date('2024-01-15T11:55:00');\n      const result = formatUtils.formatRelativeTime(date);\n      expect(result).toBe('5分钟前');\n    });\n\n    it('应该返回小时前', () => {\n      const date = new Date('2024-01-15T10:00:00');\n      const result = formatUtils.formatRelativeTime(date);\n      expect(result).toBe('2小时前');\n    });\n\n    it('应该返回天前', () => {\n      const date = new Date('2024-01-14T12:00:00');\n      const result = formatUtils.formatRelativeTime(date);\n      expect(result).toBe('1天前');\n    });\n\n    it('应该返回格式化日期（超过7天）', () => {\n      const date = new Date('2024-01-01T12:00:00');\n      const result = formatUtils.formatRelativeTime(date);\n      expect(result).toMatch(/2024/);\n    });\n  });\n}); "],"mappings":"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","ignoreList":[]}