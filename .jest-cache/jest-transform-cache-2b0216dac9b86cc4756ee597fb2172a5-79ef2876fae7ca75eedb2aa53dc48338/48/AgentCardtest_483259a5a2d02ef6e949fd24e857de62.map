{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactNative2","_jsxRuntime","MockAgentCard","_ref","agent","onPress","jsx","TouchableOpacity","testID","id","children","jsxs","View","Image","source","uri","avatar","style","width","height","alt","Text","name","specialty","description","status","mockAgent","describe","it","_render","render","getByTestId","getByText","expect","toBeTruthy","_render2","offlineAgent","Object","assign","_render3","mockOnPress","jest","fn","_render4","card","fireEvent","press","toHaveBeenCalledWith","_render5","_render6","not","toThrow","_render7","props","toBe"],"sources":["AgentCard.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport { View, Text, TouchableOpacity, Image } from 'react-native';\n\n// Mock AgentCard组件\nconst MockAgentCard = ({ agent, onPress }: any) => {\n  return (\n    <TouchableOpacity \n      testID={`agent-card-${agent.id}`}\n      onPress={() => onPress && onPress(agent)}\n    >\n      <View testID=\"agent-card-container\">\n        <View>\n          <View />\n          <Image \n            testID=\"agent-avatar\"\n            source={{ uri: agent.avatar }} \n            style={{ width: 50, height: 50 }}\n            alt=\"\"\n          />\n        </View>\n        <View testID=\"agent-info\">\n          <Text testID=\"agent-name\">{agent.name}</Text>\n          <Text testID=\"agent-specialty\">{agent.specialty}</Text>\n          <Text testID=\"agent-description\">{agent.description}</Text>\n        </View>\n        <View testID=\"agent-status\">\n          <Text testID={`status-${agent.status}`}>\n            {agent.status === 'online' ? '在线' : '离线'}\n          </Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\n// Mock数据\nconst mockAgent = {\n  id: 'xiaoai',\n  name: '小艾',\n  specialty: '健康咨询',\n  description: '专业的健康管理顾问',\n  avatar: 'https://example.com/xiaoai.jpg',\n  status: 'online',\n};\n\ndescribe('AgentCard', () => {\n  it('应该正确渲染智能体卡片', () => {\n    const { getByTestId, getByText } = render(\n      <MockAgentCard agent={mockAgent} />\n    );\n\n    expect(getByTestId('agent-card-container')).toBeTruthy();\n    expect(getByTestId('agent-avatar')).toBeTruthy();\n    expect(getByTestId('agent-info')).toBeTruthy();\n    expect(getByText('小艾')).toBeTruthy();\n    expect(getByText('健康咨询')).toBeTruthy();\n    expect(getByText('专业的健康管理顾问')).toBeTruthy();\n  });\n\n  it('应该显示智能体状态', () => {\n    const { getByTestId, getByText } = render(\n      <MockAgentCard agent={mockAgent} />\n    );\n\n    expect(getByTestId('agent-status')).toBeTruthy();\n    expect(getByTestId('status-online')).toBeTruthy();\n    expect(getByText('在线')).toBeTruthy();\n  });\n\n  it('应该显示离线状态', () => {\n    const offlineAgent = { ...mockAgent, status: 'offline' };\n    const { getByTestId, getByText } = render(\n      <MockAgentCard agent={offlineAgent} />\n    );\n\n    expect(getByTestId('status-offline')).toBeTruthy();\n    expect(getByText('离线')).toBeTruthy();\n  });\n\n  it('应该处理点击事件', () => {\n    const mockOnPress = jest.fn();\n    const { getByTestId } = render(\n      <MockAgentCard agent={mockAgent} onPress={mockOnPress} />\n    );\n\n    const card = getByTestId(`agent-card-${mockAgent.id}`);\n    fireEvent.press(card);\n\n    expect(mockOnPress).toHaveBeenCalledWith(mockAgent);\n  });\n\n  it('应该设置正确的testID', () => {\n    const { getByTestId } = render(\n      <MockAgentCard agent={mockAgent} />\n    );\n\n    expect(getByTestId('agent-card-xiaoai')).toBeTruthy();\n    expect(getByTestId('agent-name')).toBeTruthy();\n    expect(getByTestId('agent-specialty')).toBeTruthy();\n    expect(getByTestId('agent-description')).toBeTruthy();\n  });\n\n  it('应该处理缺少onPress的情况', () => {\n    const { getByTestId } = render(\n      <MockAgentCard agent={mockAgent} />\n    );\n\n    const card = getByTestId(`agent-card-${mockAgent.id}`);\n    \n    // 不应该抛出错误\n    expect(() => fireEvent.press(card)).not.toThrow();\n  });\n\n  it('应该正确显示头像', () => {\n    const { getByTestId } = render(\n      <MockAgentCard agent={mockAgent} />\n    );\n\n    const avatar = getByTestId('agent-avatar');\n    expect(avatar.props.source.uri).toBe(mockAgent.avatar);\n  });\n}); "],"mappings":"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","ignoreList":[]}