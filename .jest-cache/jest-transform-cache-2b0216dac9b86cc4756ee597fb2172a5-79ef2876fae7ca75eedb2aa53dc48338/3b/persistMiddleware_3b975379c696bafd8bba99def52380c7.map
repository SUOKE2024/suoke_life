{"version":3,"names":["_asyncStorage","_interopRequireDefault","require","_config","PERSIST_ACTIONS","persistMiddleware","exports","store","next","action","result","type","includes","state","getState","persistState","_x","_x2","_persistState","apply","arguments","_asyncToGenerator2","default","actionType","_state$auth$user","auth","token","AsyncStorage","setItem","STORAGE_CONFIG","KEYS","AUTH_TOKEN","refreshToken","REFRESH_TOKEN","user","id","USER_ID","multiRemove","THEME","ui","theme","LANGUAGE","language","profile","JSON","stringify","error","console","warn","restorePersistedState","_restorePersistedState","_yield$AsyncStorage$m","multiGet","_yield$AsyncStorage$m2","_slicedToArray2","authToken","userId","persistedState","notifications","loading","isAuthenticated","undefined","clearPersistedState","_clearPersistedState","keys","Object","values","_default"],"sources":["persistMiddleware.ts"],"sourcesContent":["import { Middleware } from '@reduxjs/toolkit';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { STORAGE_CONFIG } from '../../constants/config';\n\n// 需要持久化的action类型\nconst PERSIST_ACTIONS = [\n  'auth/login/fulfilled',\n  'auth/logout/fulfilled',\n  'ui/setTheme',\n  'ui/setLanguage',\n  'user/updateProfile/fulfilled',\n];\n\n// 持久化中间件\nexport const persistMiddleware: Middleware =\n  (store) => (next) => (action: any) => {\n    const result = next(action);\n\n    // 检查是否需要持久化\n    if (action.type && PERSIST_ACTIONS.includes(action.type)) {\n      const state = store.getState();\n      persistState(action.type, state);\n    }\n\n    return result;\n  };\n\n// 持久化状态\nasync function persistState(actionType: string, state: any) {\n  try {\n    switch (actionType) {\n      case 'auth/login/fulfilled':\n        // 持久化认证信息\n        if (state.auth.token) {\n          await AsyncStorage.setItem(\n            STORAGE_CONFIG.KEYS.AUTH_TOKEN,\n            state.auth.token\n          );\n        }\n        if (state.auth.refreshToken) {\n          await AsyncStorage.setItem(\n            STORAGE_CONFIG.KEYS.REFRESH_TOKEN,\n            state.auth.refreshToken\n          );\n        }\n        if (state.auth.user?.id) {\n          await AsyncStorage.setItem(\n            STORAGE_CONFIG.KEYS.USER_ID,\n            state.auth.user.id\n          );\n        }\n        break;\n\n      case 'auth/logout/fulfilled':\n        // 清除认证信息\n        await AsyncStorage.multiRemove([\n          STORAGE_CONFIG.KEYS.AUTH_TOKEN,\n          STORAGE_CONFIG.KEYS.REFRESH_TOKEN,\n          STORAGE_CONFIG.KEYS.USER_ID,\n        ]);\n        break;\n\n      case 'ui/setTheme':\n        // 持久化主题设置\n        await AsyncStorage.setItem(STORAGE_CONFIG.KEYS.THEME, state.ui.theme);\n        break;\n\n      case 'ui/setLanguage':\n        // 持久化语言设置\n        await AsyncStorage.setItem(\n          STORAGE_CONFIG.KEYS.LANGUAGE,\n          state.ui.language\n        );\n        break;\n\n      case 'user/updateProfile/fulfilled':\n        // 持久化用户资料（缓存）\n        if (state.user.profile) {\n          await AsyncStorage.setItem(\n            `${STORAGE_CONFIG.KEYS.USER_ID}_profile`,\n            JSON.stringify(state.user.profile)\n          );\n        }\n        break;\n\n      default:\n        break;\n    }\n  } catch (error) {\n    console.warn('持久化状态失败:', error);\n  }\n}\n\n// 恢复持久化状态\nexport async function restorePersistedState() {\n  try {\n    const [theme, language, authToken, refreshToken, userId] =\n      await AsyncStorage.multiGet([\n        STORAGE_CONFIG.KEYS.THEME,\n        STORAGE_CONFIG.KEYS.LANGUAGE,\n        STORAGE_CONFIG.KEYS.AUTH_TOKEN,\n        STORAGE_CONFIG.KEYS.REFRESH_TOKEN,\n        STORAGE_CONFIG.KEYS.USER_ID,\n      ]);\n\n    const persistedState: any = {};\n\n    // 恢复UI状态\n    if (theme[1]) {\n      persistedState.ui = {\n        theme: theme[1] as 'light' | 'dark',\n        language: (language[1] as 'zh' | 'en') || 'zh',\n        notifications: [],\n        loading: false,\n      };\n    }\n\n    // 恢复认证状态\n    if (authToken[1] && userId[1]) {\n      persistedState.auth = {\n        isAuthenticated: true,\n        token: authToken[1],\n        refreshToken: refreshToken[1],\n        loading: false,\n        error: undefined,\n      };\n    }\n\n    return persistedState;\n  } catch (error) {\n    console.warn('恢复持久化状态失败:', error);\n    return {};\n  }\n}\n\n// 清除所有持久化数据\nexport async function clearPersistedState() {\n  try {\n    const keys = Object.values(STORAGE_CONFIG.KEYS);\n    await AsyncStorage.multiRemove(keys);\n  } catch (error) {\n    console.warn('清除持久化状态失败:', error);\n  }\n}\n\nexport default persistMiddleware;\n"],"mappings":"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","ignoreList":[]}