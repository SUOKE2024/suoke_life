{"version":3,"names":["StartupOptimizer","_classCallCheck2","default","tasks","cov_1ked611tpj","s","Map","completed","Set","running","_createClass2","key","value","registerTask","task","f","set","name","_optimize","_asyncToGenerator2","console","log","startTime","Date","now","sortedTasks","getSortedTasks","executeCriticalTasks","executeNonCriticalTasks","duration","optimize","apply","arguments","priorityOrder","critical","high","medium","low","Array","from","values","sort","a","b","priority","_executeCriticalTasks","criticalTasks","filter","canExecuteTask","executeTask","_x","_this","nonCriticalTasks","executeDelayed","requestIdleCallback","executeBatch","setTimeout","_executeBatch","error","_x2","_this2","has","dependencies","every","dep","_executeTask","add","execute","delete","_x3","startupOptimizer","exports","_default"],"sources":["startupOptimizer.ts"],"sourcesContent":["interface StartupTask {\n  name: string;\n  priority: 'critical' | 'high' | 'medium' | 'low';\n  execute: () => Promise<void> | void;\n  dependencies?: string[];\n}\n\nclass StartupOptimizer {\n  private tasks: Map<string, StartupTask> = new Map();\n  private completed: Set<string> = new Set();\n  private running: Set<string> = new Set();\n  \n  /**\n   * Ê≥®ÂÜåÂêØÂä®‰ªªÂä°\n   */\n  registerTask(task: StartupTask) {\n    this.tasks.set(task.name, task);\n  }\n  \n  /**\n   * ÊâßË°åÂêØÂä®‰ºòÂåñ\n   */\n  async optimize() {\n    console.log('üöÄ ÂºÄÂßãÂêØÂä®‰ºòÂåñ...');\n    const startTime = Date.now();\n    \n    // Êåâ‰ºòÂÖàÁ∫ßÊéíÂ∫è‰ªªÂä°\n    const sortedTasks = this.getSortedTasks();\n    \n    // ÊâßË°åÂÖ≥ÈîÆ‰ªªÂä°ÔºàÂêåÊ≠•Ôºâ\n    await this.executeCriticalTasks(sortedTasks);\n    \n    // ÂºÇÊ≠•ÊâßË°åÂÖ∂‰ªñ‰ªªÂä°\n    this.executeNonCriticalTasks(sortedTasks);\n    \n    const duration = Date.now() - startTime;\n    console.log(`‚úÖ ÂêØÂä®‰ºòÂåñÂÆåÊàêÔºåËÄóÊó∂: ${duration}ms`);\n  }\n  \n  private getSortedTasks(): StartupTask[] {\n    const priorityOrder = { critical: 0, high: 1, medium: 2, low: 3 };\n    \n    return Array.from(this.tasks.values()).sort((a, b) => {\n      return priorityOrder[a.priority] - priorityOrder[b.priority];\n    });\n  }\n  \n  private async executeCriticalTasks(tasks: StartupTask[]) {\n    const criticalTasks = tasks.filter(task => task.priority === 'critical');\n    \n    for (const task of criticalTasks) {\n      if (this.canExecuteTask(task)) {\n        await this.executeTask(task);\n      }\n    }\n  }\n  \n  private executeNonCriticalTasks(tasks: StartupTask[]) {\n    const nonCriticalTasks = tasks.filter(task => task.priority !== 'critical');\n    \n    // ‰ΩøÁî®requestIdleCallbackÊàñsetTimeoutÂª∂ËøüÊâßË°å\n    const executeDelayed = () => {\n      if (typeof requestIdleCallback !== 'undefined') {\n        requestIdleCallback(() => this.executeBatch(nonCriticalTasks));\n      } else {\n        setTimeout(() => this.executeBatch(nonCriticalTasks), 100);\n      }\n    };\n    \n    executeDelayed();\n  }\n  \n  private async executeBatch(tasks: StartupTask[]) {\n    for (const task of tasks) {\n      if (this.canExecuteTask(task)) {\n        try {\n          await this.executeTask(task);\n        } catch (error) {\n          console.error(`ÂêØÂä®‰ªªÂä°ÊâßË°åÂ§±Ë¥•: ${task.name}`, error);\n        }\n      }\n    }\n  }\n  \n  private canExecuteTask(task: StartupTask): boolean {\n    if (this.completed.has(task.name) || this.running.has(task.name)) {\n      return false;\n    }\n    \n    if (task.dependencies) {\n      return task.dependencies.every(dep => this.completed.has(dep));\n    }\n    \n    return true;\n  }\n  \n  private async executeTask(task: StartupTask) {\n    this.running.add(task.name);\n    \n    try {\n      const startTime = Date.now();\n      await task.execute();\n      const duration = Date.now() - startTime;\n      \n      console.log(`‚úÖ ÂêØÂä®‰ªªÂä°ÂÆåÊàê: ${task.name} (${duration}ms)`);\n      this.completed.add(task.name);\n    } finally {\n      this.running.delete(task.name);\n    }\n  }\n}\n\nexport const startupOptimizer = new StartupOptimizer();\nexport default startupOptimizer;"],"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","ignoreList":[]}