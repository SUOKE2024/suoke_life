5dbb8556a184733e7b72dfbce30c84dc
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.typography = exports.themePaper = exports.theme = exports.spacing = exports.shadows = exports.screen = exports.layout = exports.default = exports.darkTheme = exports.components = exports.colors = exports.borderRadius = exports.animations = void 0;
var _reactNativePaper = require("react-native-paper");
var _reactNative = require("react-native");
var _Dimensions$get = _reactNative.Dimensions.get('window'),
  screenWidth = _Dimensions$get.width,
  screenHeight = _Dimensions$get.height;
var colors = exports.colors = {
  primary: '#35bb78',
  primaryLight: '#5dd39e',
  primaryDark: '#2a9960',
  secondary: '#ff6800',
  secondaryLight: '#ff8533',
  secondaryDark: '#cc5200',
  success: '#34C759',
  warning: '#FF9500',
  error: '#FF3B30',
  info: '#35bb78',
  white: '#FFFFFF',
  black: '#000000',
  gray50: '#F9FAFB',
  gray100: '#F3F4F6',
  gray200: '#E5E7EB',
  gray300: '#D1D5DB',
  gray400: '#9CA3AF',
  gray500: '#6B7280',
  gray600: '#4B5563',
  gray700: '#374151',
  gray800: '#1F2937',
  gray900: '#111827',
  background: '#FFFFFF',
  surface: '#FFFFFF',
  surfaceSecondary: '#F9FAFB',
  border: '#E5E7EB',
  borderLight: '#F3F4F6',
  textPrimary: '#111827',
  textSecondary: '#6B7280',
  textTertiary: '#9CA3AF',
  textInverse: '#FFFFFF',
  tcm: {
    gold: '#FFD700',
    jade: '#35bb78',
    cinnabar: '#E34234',
    indigo: '#4B0082',
    earth: '#8B4513'
  },
  health: {
    excellent: '#35bb78',
    good: '#32D74B',
    fair: '#FF9500',
    poor: '#FF6B35',
    critical: '#FF3B30'
  }
};
var typography = exports.typography = {
  fontFamily: {
    regular: 'System',
    medium: 'System',
    bold: 'System',
    light: 'System'
  },
  fontSize: {
    xs: 12,
    sm: 14,
    base: 16,
    lg: 18,
    xl: 20,
    '2xl': 24,
    '3xl': 30,
    '4xl': 36,
    '5xl': 48
  },
  lineHeight: {
    tight: 1.25,
    normal: 1.5,
    relaxed: 1.75
  },
  fontWeight: {
    light: '300',
    normal: '400',
    medium: '500',
    semibold: '600',
    bold: '700'
  }
};
var spacing = exports.spacing = {
  xs: 4,
  sm: 8,
  md: 16,
  lg: 24,
  xl: 32,
  '2xl': 48,
  '3xl': 64,
  '4xl': 96
};
var borderRadius = exports.borderRadius = {
  none: 0,
  sm: 4,
  md: 8,
  lg: 12,
  xl: 16,
  '2xl': 24,
  full: 9999
};
var shadows = exports.shadows = {
  none: {
    shadowColor: 'transparent',
    shadowOffset: {
      width: 0,
      height: 0
    },
    shadowOpacity: 0,
    shadowRadius: 0,
    elevation: 0
  },
  sm: {
    shadowColor: colors.black,
    shadowOffset: {
      width: 0,
      height: 1
    },
    shadowOpacity: 0.05,
    shadowRadius: 2,
    elevation: 2
  },
  md: {
    shadowColor: colors.black,
    shadowOffset: {
      width: 0,
      height: 4
    },
    shadowOpacity: 0.1,
    shadowRadius: 6,
    elevation: 4
  },
  lg: {
    shadowColor: colors.black,
    shadowOffset: {
      width: 0,
      height: 10
    },
    shadowOpacity: 0.15,
    shadowRadius: 15,
    elevation: 8
  },
  xl: {
    shadowColor: colors.black,
    shadowOffset: {
      width: 0,
      height: 20
    },
    shadowOpacity: 0.25,
    shadowRadius: 25,
    elevation: 12
  }
};
var animations = exports.animations = {
  duration: {
    fast: 150,
    normal: 300,
    slow: 500
  },
  easing: {
    linear: 'linear',
    ease: 'ease',
    easeIn: 'ease-in',
    easeOut: 'ease-out',
    easeInOut: 'ease-in-out'
  }
};
var layout = exports.layout = {
  maxWidth: {
    sm: 640,
    md: 768,
    lg: 1024,
    xl: 1280
  },
  breakpoints: {
    sm: 640,
    md: 768,
    lg: 1024,
    xl: 1280
  },
  safeArea: {
    top: 44,
    bottom: 34
  }
};
var components = exports.components = {
  button: {
    height: 48,
    borderRadius: borderRadius.md,
    paddingHorizontal: spacing.lg
  },
  input: {
    height: 48,
    borderRadius: borderRadius.md,
    paddingHorizontal: spacing.md,
    borderWidth: 1
  },
  card: Object.assign({
    borderRadius: borderRadius.lg,
    padding: spacing.md,
    backgroundColor: colors.surface
  }, shadows.sm),
  modal: Object.assign({
    borderRadius: borderRadius.xl,
    backgroundColor: colors.surface
  }, shadows.xl)
};
var theme = exports.theme = {
  colors: colors,
  typography: typography,
  spacing: spacing,
  borderRadius: borderRadius,
  shadows: shadows,
  animations: animations,
  layout: layout,
  components: components
};
var darkTheme = exports.darkTheme = Object.assign({}, theme, {
  colors: Object.assign({}, colors, {
    background: colors.gray900,
    surface: colors.gray800,
    surfaceSecondary: colors.gray700,
    border: colors.gray600,
    borderLight: colors.gray700,
    textPrimary: colors.white,
    textSecondary: colors.gray300,
    textTertiary: colors.gray400
  })
});
var screen = exports.screen = {
  width: screenWidth,
  height: screenHeight,
  isSmall: screenWidth < 375,
  isMedium: screenWidth >= 375 && screenWidth < 414,
  isLarge: screenWidth >= 414
};
var themePaper = exports.themePaper = Object.assign({}, _reactNativePaper.DefaultTheme, {
  colors: Object.assign({}, _reactNativePaper.DefaultTheme.colors, {
    primary: colors.primary,
    accent: colors.secondary,
    background: colors.background,
    surface: colors.surface,
    text: colors.textPrimary,
    disabled: colors.gray500,
    placeholder: colors.gray400,
    backdrop: 'rgba(0, 0, 0, 0.5)',
    onSurface: colors.textPrimary,
    notification: colors.primary
  }),
  fonts: Object.assign({}, _reactNativePaper.DefaultTheme.fonts, {
    regular: {
      fontFamily: typography.fontFamily.regular,
      fontWeight: 'normal'
    },
    medium: {
      fontFamily: typography.fontFamily.medium,
      fontWeight: '500'
    },
    light: {
      fontFamily: typography.fontFamily.light,
      fontWeight: '300'
    },
    thin: {
      fontFamily: typography.fontFamily.regular,
      fontWeight: '100'
    }
  }),
  roundness: borderRadius.md
});
var _default = exports.default = {
  colors: colors,
  typography: typography,
  spacing: spacing,
  borderRadius: borderRadius,
  shadows: shadows,
  animations: animations,
  layout: layout,
  components: components,
  screen: screen,
  themePaper: themePaper
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,