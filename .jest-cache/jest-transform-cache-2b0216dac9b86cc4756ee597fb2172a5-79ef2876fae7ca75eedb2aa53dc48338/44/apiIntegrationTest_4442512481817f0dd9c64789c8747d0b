4a56c7726ffaf2ddb7ca4c44589e787b
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.apiIntegrationTest = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _apiClient = require("../services/apiClient");
var _config = require("../constants/config");
var _asyncStorage = _interopRequireDefault(require("@react-native-async-storage/async-storage"));
function cov_29odgxf5ye() {
  var path = "/Users/songxu/Developer/suoke_life/src/utils/apiIntegrationTest.ts";
  var hash = "8f7fbcd57f9e978b2688c3aeda249a4f70c90c72";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/songxu/Developer/suoke_life/src/utils/apiIntegrationTest.ts",
    statementMap: {
      "0": {
        start: {
          line: 32,
          column: 38
        },
        end: {
          line: 32,
          column: 40
        }
      },
      "1": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 29
        }
      },
      "2": {
        start: {
          line: 39,
          column: 34
        },
        end: {
          line: 39,
          column: 36
        }
      },
      "3": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 73
        }
      },
      "4": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 19
        }
      },
      "5": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 29
        }
      },
      "6": {
        start: {
          line: 52,
          column: 34
        },
        end: {
          line: 52,
          column: 36
        }
      },
      "7": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 74
        }
      },
      "8": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 19
        }
      },
      "9": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 31
        }
      },
      "10": {
        start: {
          line: 65,
          column: 34
        },
        end: {
          line: 65,
          column: 36
        }
      },
      "11": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 82
        }
      },
      "12": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 19
        }
      },
      "13": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 77,
          column: 30
        }
      },
      "14": {
        start: {
          line: 78,
          column: 34
        },
        end: {
          line: 78,
          column: 36
        }
      },
      "15": {
        start: {
          line: 81,
          column: 26
        },
        end: {
          line: 81,
          column: 50
        }
      },
      "16": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 82,
          column: 91
        }
      },
      "17": {
        start: {
          line: 85,
          column: 26
        },
        end: {
          line: 85,
          column: 50
        }
      },
      "18": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 86,
          column: 91
        }
      },
      "19": {
        start: {
          line: 89,
          column: 25
        },
        end: {
          line: 89,
          column: 48
        }
      },
      "20": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 90,
          column: 90
        }
      },
      "21": {
        start: {
          line: 93,
          column: 24
        },
        end: {
          line: 93,
          column: 46
        }
      },
      "22": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 94,
          column: 89
        }
      },
      "23": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 96,
          column: 19
        }
      },
      "24": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 103,
          column: 29
        }
      },
      "25": {
        start: {
          line: 104,
          column: 34
        },
        end: {
          line: 104,
          column: 36
        }
      },
      "26": {
        start: {
          line: 107,
          column: 24
        },
        end: {
          line: 107,
          column: 49
        }
      },
      "27": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 108,
          column: 89
        }
      },
      "28": {
        start: {
          line: 111,
          column: 26
        },
        end: {
          line: 111,
          column: 53
        }
      },
      "29": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 112,
          column: 91
        }
      },
      "30": {
        start: {
          line: 115,
          column: 27
        },
        end: {
          line: 115,
          column: 55
        }
      },
      "31": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 116,
          column: 92
        }
      },
      "32": {
        start: {
          line: 119,
          column: 29
        },
        end: {
          line: 119,
          column: 59
        }
      },
      "33": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 120,
          column: 94
        }
      },
      "34": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 122,
          column: 19
        }
      },
      "35": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 134,
          column: 37
        }
      },
      "36": {
        start: {
          line: 135,
          column: 22
        },
        end: {
          line: 135,
          column: 32
        }
      },
      "37": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 169,
          column: 5
        }
      },
      "38": {
        start: {
          line: 138,
          column: 23
        },
        end: {
          line: 140,
          column: 46
        }
      },
      "39": {
        start: {
          line: 142,
          column: 27
        },
        end: {
          line: 142,
          column: 49
        }
      },
      "40": {
        start: {
          line: 144,
          column: 33
        },
        end: {
          line: 150,
          column: 7
        }
      },
      "41": {
        start: {
          line: 152,
          column: 6
        },
        end: {
          line: 152,
          column: 36
        }
      },
      "42": {
        start: {
          line: 153,
          column: 6
        },
        end: {
          line: 153,
          column: 67
        }
      },
      "43": {
        start: {
          line: 154,
          column: 6
        },
        end: {
          line: 154,
          column: 20
        }
      },
      "44": {
        start: {
          line: 156,
          column: 27
        },
        end: {
          line: 156,
          column: 49
        }
      },
      "45": {
        start: {
          line: 158,
          column: 33
        },
        end: {
          line: 164,
          column: 7
        }
      },
      "46": {
        start: {
          line: 166,
          column: 6
        },
        end: {
          line: 166,
          column: 36
        }
      },
      "47": {
        start: {
          line: 167,
          column: 6
        },
        end: {
          line: 167,
          column: 66
        }
      },
      "48": {
        start: {
          line: 168,
          column: 6
        },
        end: {
          line: 168,
          column: 20
        }
      },
      "49": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 182,
          column: 49
        }
      },
      "50": {
        start: {
          line: 183,
          column: 22
        },
        end: {
          line: 183,
          column: 32
        }
      },
      "51": {
        start: {
          line: 185,
          column: 4
        },
        end: {
          line: 225,
          column: 5
        }
      },
      "52": {
        start: {
          line: 186,
          column: 18
        },
        end: {
          line: 186,
          column: 41
        }
      },
      "53": {
        start: {
          line: 187,
          column: 23
        },
        end: {
          line: 194,
          column: 8
        }
      },
      "54": {
        start: {
          line: 196,
          column: 27
        },
        end: {
          line: 196,
          column: 49
        }
      },
      "55": {
        start: {
          line: 197,
          column: 27
        },
        end: {
          line: 197,
          column: 48
        }
      },
      "56": {
        start: {
          line: 199,
          column: 33
        },
        end: {
          line: 206,
          column: 7
        }
      },
      "57": {
        start: {
          line: 208,
          column: 6
        },
        end: {
          line: 208,
          column: 36
        }
      },
      "58": {
        start: {
          line: 209,
          column: 6
        },
        end: {
          line: 209,
          column: 107
        }
      },
      "59": {
        start: {
          line: 210,
          column: 6
        },
        end: {
          line: 210,
          column: 20
        }
      },
      "60": {
        start: {
          line: 212,
          column: 27
        },
        end: {
          line: 212,
          column: 49
        }
      },
      "61": {
        start: {
          line: 214,
          column: 33
        },
        end: {
          line: 220,
          column: 7
        }
      },
      "62": {
        start: {
          line: 222,
          column: 6
        },
        end: {
          line: 222,
          column: 36
        }
      },
      "63": {
        start: {
          line: 223,
          column: 6
        },
        end: {
          line: 223,
          column: 76
        }
      },
      "64": {
        start: {
          line: 224,
          column: 6
        },
        end: {
          line: 224,
          column: 20
        }
      },
      "65": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 232,
          column: 32
        }
      },
      "66": {
        start: {
          line: 233,
          column: 4
        },
        end: {
          line: 233,
          column: 26
        }
      },
      "67": {
        start: {
          line: 236,
          column: 24
        },
        end: {
          line: 236,
          column: 52
        }
      },
      "68": {
        start: {
          line: 237,
          column: 24
        },
        end: {
          line: 237,
          column: 52
        }
      },
      "69": {
        start: {
          line: 238,
          column: 26
        },
        end: {
          line: 238,
          column: 60
        }
      },
      "70": {
        start: {
          line: 239,
          column: 25
        },
        end: {
          line: 239,
          column: 55
        }
      },
      "71": {
        start: {
          line: 240,
          column: 29
        },
        end: {
          line: 240,
          column: 63
        }
      },
      "72": {
        start: {
          line: 243,
          column: 23
        },
        end: {
          line: 249,
          column: 5
        }
      },
      "73": {
        start: {
          line: 252,
          column: 24
        },
        end: {
          line: 252,
          column: 64
        }
      },
      "74": {
        start: {
          line: 252,
          column: 47
        },
        end: {
          line: 252,
          column: 56
        }
      },
      "75": {
        start: {
          line: 253,
          column: 24
        },
        end: {
          line: 253,
          column: 55
        }
      },
      "76": {
        start: {
          line: 256,
          column: 31
        },
        end: {
          line: 262,
          column: 5
        }
      },
      "77": {
        start: {
          line: 265,
          column: 4
        },
        end: {
          line: 265,
          column: 38
        }
      },
      "78": {
        start: {
          line: 267,
          column: 4
        },
        end: {
          line: 267,
          column: 109
        }
      },
      "79": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 269,
          column: 18
        }
      },
      "80": {
        start: {
          line: 276,
          column: 4
        },
        end: {
          line: 291,
          column: 5
        }
      },
      "81": {
        start: {
          line: 278,
          column: 26
        },
        end: {
          line: 278,
          column: 72
        }
      },
      "82": {
        start: {
          line: 279,
          column: 36
        },
        end: {
          line: 279,
          column: 78
        }
      },
      "83": {
        start: {
          line: 282,
          column: 6
        },
        end: {
          line: 282,
          column: 27
        }
      },
      "84": {
        start: {
          line: 285,
          column: 28
        },
        end: {
          line: 285,
          column: 46
        }
      },
      "85": {
        start: {
          line: 288,
          column: 6
        },
        end: {
          line: 288,
          column: 84
        }
      },
      "86": {
        start: {
          line: 290,
          column: 6
        },
        end: {
          line: 290,
          column: 40
        }
      },
      "87": {
        start: {
          line: 298,
          column: 4
        },
        end: {
          line: 304,
          column: 5
        }
      },
      "88": {
        start: {
          line: 299,
          column: 26
        },
        end: {
          line: 299,
          column: 72
        }
      },
      "89": {
        start: {
          line: 300,
          column: 6
        },
        end: {
          line: 300,
          column: 56
        }
      },
      "90": {
        start: {
          line: 302,
          column: 6
        },
        end: {
          line: 302,
          column: 40
        }
      },
      "91": {
        start: {
          line: 303,
          column: 6
        },
        end: {
          line: 303,
          column: 16
        }
      },
      "92": {
        start: {
          line: 311,
          column: 4
        },
        end: {
          line: 344,
          column: 5
        }
      },
      "93": {
        start: {
          line: 313,
          column: 25
        },
        end: {
          line: 313,
          column: 79
        }
      },
      "94": {
        start: {
          line: 314,
          column: 25
        },
        end: {
          line: 314,
          column: 80
        }
      },
      "95": {
        start: {
          line: 317,
          column: 28
        },
        end: {
          line: 317,
          column: 52
        }
      },
      "96": {
        start: {
          line: 318,
          column: 27
        },
        end: {
          line: 318,
          column: 99
        }
      },
      "97": {
        start: {
          line: 320,
          column: 28
        },
        end: {
          line: 320,
          column: 52
        }
      },
      "98": {
        start: {
          line: 321,
          column: 27
        },
        end: {
          line: 321,
          column: 99
        }
      },
      "99": {
        start: {
          line: 324,
          column: 29
        },
        end: {
          line: 329,
          column: 7
        }
      },
      "100": {
        start: {
          line: 331,
          column: 28
        },
        end: {
          line: 331,
          column: 81
        }
      },
      "101": {
        start: {
          line: 331,
          column: 74
        },
        end: {
          line: 331,
          column: 80
        }
      },
      "102": {
        start: {
          line: 333,
          column: 6
        },
        end: {
          line: 337,
          column: 8
        }
      },
      "103": {
        start: {
          line: 339,
          column: 6
        },
        end: {
          line: 343,
          column: 8
        }
      },
      "104": {
        start: {
          line: 349,
          column: 34
        },
        end: {
          line: 349,
          column: 58
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 37,
            column: 2
          },
          end: {
            line: 37,
            column: 3
          }
        },
        loc: {
          start: {
            line: 37,
            column: 49
          },
          end: {
            line: 45,
            column: 3
          }
        },
        line: 37
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 50,
            column: 2
          },
          end: {
            line: 50,
            column: 3
          }
        },
        loc: {
          start: {
            line: 50,
            column: 49
          },
          end: {
            line: 58,
            column: 3
          }
        },
        line: 50
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 63,
            column: 2
          },
          end: {
            line: 63,
            column: 3
          }
        },
        loc: {
          start: {
            line: 63,
            column: 55
          },
          end: {
            line: 71,
            column: 3
          }
        },
        line: 63
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 76,
            column: 2
          },
          end: {
            line: 76,
            column: 3
          }
        },
        loc: {
          start: {
            line: 76,
            column: 51
          },
          end: {
            line: 97,
            column: 3
          }
        },
        line: 76
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 102,
            column: 2
          },
          end: {
            line: 102,
            column: 3
          }
        },
        loc: {
          start: {
            line: 102,
            column: 55
          },
          end: {
            line: 123,
            column: 3
          }
        },
        line: 102
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 128,
            column: 2
          },
          end: {
            line: 128,
            column: 3
          }
        },
        loc: {
          start: {
            line: 133,
            column: 25
          },
          end: {
            line: 170,
            column: 3
          }
        },
        line: 133
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 175,
            column: 2
          },
          end: {
            line: 175,
            column: 3
          }
        },
        loc: {
          start: {
            line: 181,
            column: 25
          },
          end: {
            line: 226,
            column: 3
          }
        },
        line: 181
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 231,
            column: 2
          },
          end: {
            line: 231,
            column: 3
          }
        },
        loc: {
          start: {
            line: 231,
            column: 43
          },
          end: {
            line: 270,
            column: 3
          }
        },
        line: 231
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 252,
            column: 42
          },
          end: {
            line: 252,
            column: 43
          }
        },
        loc: {
          start: {
            line: 252,
            column: 47
          },
          end: {
            line: 252,
            column: 56
          }
        },
        line: 252
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 275,
            column: 2
          },
          end: {
            line: 275,
            column: 3
          }
        },
        loc: {
          start: {
            line: 275,
            column: 66
          },
          end: {
            line: 292,
            column: 3
          }
        },
        line: 275
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 297,
            column: 2
          },
          end: {
            line: 297,
            column: 3
          }
        },
        loc: {
          start: {
            line: 297,
            column: 48
          },
          end: {
            line: 305,
            column: 3
          }
        },
        line: 297
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 310,
            column: 2
          },
          end: {
            line: 310,
            column: 3
          }
        },
        loc: {
          start: {
            line: 310,
            column: 110
          },
          end: {
            line: 345,
            column: 3
          }
        },
        line: 310
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 331,
            column: 64
          },
          end: {
            line: 331,
            column: 65
          }
        },
        loc: {
          start: {
            line: 331,
            column: 74
          },
          end: {
            line: 331,
            column: 80
          }
        },
        line: 331
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 131,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 131,
            column: 29
          },
          end: {
            line: 131,
            column: 34
          }
        }],
        line: 131
      },
      "1": {
        loc: {
          start: {
            line: 138,
            column: 23
          },
          end: {
            line: 140,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 139,
            column: 10
          },
          end: {
            line: 139,
            column: 39
          }
        }, {
          start: {
            line: 140,
            column: 10
          },
          end: {
            line: 140,
            column: 46
          }
        }],
        line: 138
      },
      "2": {
        loc: {
          start: {
            line: 163,
            column: 15
          },
          end: {
            line: 163,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 15
          },
          end: {
            line: 163,
            column: 28
          }
        }, {
          start: {
            line: 163,
            column: 32
          },
          end: {
            line: 163,
            column: 38
          }
        }],
        line: 163
      },
      "3": {
        loc: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 179,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 179,
            column: 29
          },
          end: {
            line: 179,
            column: 34
          }
        }],
        line: 179
      },
      "4": {
        loc: {
          start: {
            line: 193,
            column: 14
          },
          end: {
            line: 193,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 193,
            column: 34
          },
          end: {
            line: 193,
            column: 54
          }
        }, {
          start: {
            line: 193,
            column: 57
          },
          end: {
            line: 193,
            column: 66
          }
        }],
        line: 193
      },
      "5": {
        loc: {
          start: {
            line: 209,
            column: 21
          },
          end: {
            line: 209,
            column: 44
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 209,
            column: 35
          },
          end: {
            line: 209,
            column: 38
          }
        }, {
          start: {
            line: 209,
            column: 41
          },
          end: {
            line: 209,
            column: 44
          }
        }],
        line: 209
      },
      "6": {
        loc: {
          start: {
            line: 219,
            column: 15
          },
          end: {
            line: 219,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 219,
            column: 15
          },
          end: {
            line: 219,
            column: 28
          }
        }, {
          start: {
            line: 219,
            column: 32
          },
          end: {
            line: 219,
            column: 38
          }
        }],
        line: 219
      },
      "7": {
        loc: {
          start: {
            line: 279,
            column: 36
          },
          end: {
            line: 279,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 279,
            column: 50
          },
          end: {
            line: 279,
            column: 73
          }
        }, {
          start: {
            line: 279,
            column: 76
          },
          end: {
            line: 279,
            column: 78
          }
        }],
        line: 279
      },
      "8": {
        loc: {
          start: {
            line: 300,
            column: 13
          },
          end: {
            line: 300,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 300,
            column: 27
          },
          end: {
            line: 300,
            column: 50
          }
        }, {
          start: {
            line: 300,
            column: 53
          },
          end: {
            line: 300,
            column: 55
          }
        }],
        line: 300
      },
      "9": {
        loc: {
          start: {
            line: 335,
            column: 17
          },
          end: {
            line: 335,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 335,
            column: 33
          },
          end: {
            line: 335,
            column: 45
          }
        }, {
          start: {
            line: 335,
            column: 48
          },
          end: {
            line: 335,
            column: 57
          }
        }],
        line: 335
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8f7fbcd57f9e978b2688c3aeda249a4f70c90c72"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_29odgxf5ye = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_29odgxf5ye();
var ApiIntegrationTest = function () {
  function ApiIntegrationTest() {
    (0, _classCallCheck2.default)(this, ApiIntegrationTest);
    this.testResults = (cov_29odgxf5ye().s[0]++, []);
  }
  return (0, _createClass2.default)(ApiIntegrationTest, [{
    key: "testAuthService",
    value: (function () {
      var _testAuthService = (0, _asyncToGenerator2.default)(function* () {
        cov_29odgxf5ye().f[0]++;
        cov_29odgxf5ye().s[1]++;
        console.log('测试认证服务...');
        var results = (cov_29odgxf5ye().s[2]++, []);
        cov_29odgxf5ye().s[3]++;
        results.push(yield this.testEndpoint('认证服务', '/auth/health', 'GET'));
        cov_29odgxf5ye().s[4]++;
        return results;
      });
      function testAuthService() {
        return _testAuthService.apply(this, arguments);
      }
      return testAuthService;
    }())
  }, {
    key: "testUserService",
    value: (function () {
      var _testUserService = (0, _asyncToGenerator2.default)(function* () {
        cov_29odgxf5ye().f[1]++;
        cov_29odgxf5ye().s[5]++;
        console.log('测试用户服务...');
        var results = (cov_29odgxf5ye().s[6]++, []);
        cov_29odgxf5ye().s[7]++;
        results.push(yield this.testEndpoint('用户服务', '/users/health', 'GET'));
        cov_29odgxf5ye().s[8]++;
        return results;
      });
      function testUserService() {
        return _testUserService.apply(this, arguments);
      }
      return testUserService;
    }())
  }, {
    key: "testHealthDataService",
    value: (function () {
      var _testHealthDataService = (0, _asyncToGenerator2.default)(function* () {
        cov_29odgxf5ye().f[2]++;
        cov_29odgxf5ye().s[9]++;
        console.log('测试健康数据服务...');
        var results = (cov_29odgxf5ye().s[10]++, []);
        cov_29odgxf5ye().s[11]++;
        results.push(yield this.testEndpoint('健康数据服务', '/health-data/health', 'GET'));
        cov_29odgxf5ye().s[12]++;
        return results;
      });
      function testHealthDataService() {
        return _testHealthDataService.apply(this, arguments);
      }
      return testHealthDataService;
    }())
  }, {
    key: "testAgentServices",
    value: (function () {
      var _testAgentServices = (0, _asyncToGenerator2.default)(function* () {
        cov_29odgxf5ye().f[3]++;
        cov_29odgxf5ye().s[13]++;
        console.log('测试智能体服务...');
        var results = (cov_29odgxf5ye().s[14]++, []);
        var xiaoaiBaseUrl = (cov_29odgxf5ye().s[15]++, _config.API_CONFIG.AGENTS.XIAOAI);
        cov_29odgxf5ye().s[16]++;
        results.push(yield this.testExternalEndpoint('小艾服务', xiaoaiBaseUrl, '/health', 'GET'));
        var xiaokeBaseUrl = (cov_29odgxf5ye().s[17]++, _config.API_CONFIG.AGENTS.XIAOKE);
        cov_29odgxf5ye().s[18]++;
        results.push(yield this.testExternalEndpoint('小克服务', xiaokeBaseUrl, '/health', 'GET'));
        var laokeBaseUrl = (cov_29odgxf5ye().s[19]++, _config.API_CONFIG.AGENTS.LAOKE);
        cov_29odgxf5ye().s[20]++;
        results.push(yield this.testExternalEndpoint('老克服务', laokeBaseUrl, '/health', 'GET'));
        var soerBaseUrl = (cov_29odgxf5ye().s[21]++, _config.API_CONFIG.AGENTS.SOER);
        cov_29odgxf5ye().s[22]++;
        results.push(yield this.testExternalEndpoint('索儿服务', soerBaseUrl, '/health', 'GET'));
        cov_29odgxf5ye().s[23]++;
        return results;
      });
      function testAgentServices() {
        return _testAgentServices.apply(this, arguments);
      }
      return testAgentServices;
    }())
  }, {
    key: "testDiagnosisServices",
    value: (function () {
      var _testDiagnosisServices = (0, _asyncToGenerator2.default)(function* () {
        cov_29odgxf5ye().f[4]++;
        cov_29odgxf5ye().s[24]++;
        console.log('测试四诊服务...');
        var results = (cov_29odgxf5ye().s[25]++, []);
        var lookBaseUrl = (cov_29odgxf5ye().s[26]++, _config.API_CONFIG.DIAGNOSIS.LOOK);
        cov_29odgxf5ye().s[27]++;
        results.push(yield this.testExternalEndpoint('望诊服务', lookBaseUrl, '/health', 'GET'));
        var listenBaseUrl = (cov_29odgxf5ye().s[28]++, _config.API_CONFIG.DIAGNOSIS.LISTEN);
        cov_29odgxf5ye().s[29]++;
        results.push(yield this.testExternalEndpoint('闻诊服务', listenBaseUrl, '/health', 'GET'));
        var inquiryBaseUrl = (cov_29odgxf5ye().s[30]++, _config.API_CONFIG.DIAGNOSIS.INQUIRY);
        cov_29odgxf5ye().s[31]++;
        results.push(yield this.testExternalEndpoint('问诊服务', inquiryBaseUrl, '/health', 'GET'));
        var palpationBaseUrl = (cov_29odgxf5ye().s[32]++, _config.API_CONFIG.DIAGNOSIS.PALPATION);
        cov_29odgxf5ye().s[33]++;
        results.push(yield this.testExternalEndpoint('切诊服务', palpationBaseUrl, '/health', 'GET'));
        cov_29odgxf5ye().s[34]++;
        return results;
      });
      function testDiagnosisServices() {
        return _testDiagnosisServices.apply(this, arguments);
      }
      return testDiagnosisServices;
    }())
  }, {
    key: "testEndpoint",
    value: (function () {
      var _testEndpoint = (0, _asyncToGenerator2.default)(function* (service, endpoint) {
        var method = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : (cov_29odgxf5ye().b[0][0]++, 'GET');
        var data = arguments.length > 3 ? arguments[3] : undefined;
        cov_29odgxf5ye().f[5]++;
        cov_29odgxf5ye().s[35]++;
        console.log(`测试端点: ${endpoint}`);
        var startTime = (cov_29odgxf5ye().s[36]++, Date.now());
        cov_29odgxf5ye().s[37]++;
        try {
          var response = (cov_29odgxf5ye().s[38]++, method === 'GET' ? (cov_29odgxf5ye().b[1][0]++, yield _apiClient.apiClient.get(endpoint)) : (cov_29odgxf5ye().b[1][1]++, yield _apiClient.apiClient.post(endpoint, data)));
          var responseTime = (cov_29odgxf5ye().s[39]++, Date.now() - startTime);
          var result = (cov_29odgxf5ye().s[40]++, {
            service: service,
            endpoint: endpoint,
            success: response.success,
            responseTime: responseTime,
            data: response.data
          });
          cov_29odgxf5ye().s[41]++;
          this.testResults.push(result);
          cov_29odgxf5ye().s[42]++;
          console.log(`✅ ${service} - ${endpoint}: ${responseTime}ms`);
          cov_29odgxf5ye().s[43]++;
          return result;
        } catch (error) {
          var _responseTime = (cov_29odgxf5ye().s[44]++, Date.now() - startTime);
          var _result = (cov_29odgxf5ye().s[45]++, {
            service: service,
            endpoint: endpoint,
            success: false,
            responseTime: _responseTime,
            error: (cov_29odgxf5ye().b[2][0]++, error.message) || (cov_29odgxf5ye().b[2][1]++, '未知错误')
          });
          cov_29odgxf5ye().s[46]++;
          this.testResults.push(_result);
          cov_29odgxf5ye().s[47]++;
          console.log(`❌ ${service} - ${endpoint}: ${error.message}`);
          cov_29odgxf5ye().s[48]++;
          return _result;
        }
      });
      function testEndpoint(_x, _x2) {
        return _testEndpoint.apply(this, arguments);
      }
      return testEndpoint;
    }())
  }, {
    key: "testExternalEndpoint",
    value: (function () {
      var _testExternalEndpoint = (0, _asyncToGenerator2.default)(function* (service, baseUrl, endpoint) {
        var method = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : (cov_29odgxf5ye().b[3][0]++, 'GET');
        var data = arguments.length > 4 ? arguments[4] : undefined;
        cov_29odgxf5ye().f[6]++;
        cov_29odgxf5ye().s[49]++;
        console.log(`测试外部端点: ${baseUrl}${endpoint}`);
        var startTime = (cov_29odgxf5ye().s[50]++, Date.now());
        cov_29odgxf5ye().s[51]++;
        try {
          var url = (cov_29odgxf5ye().s[52]++, `${baseUrl}${endpoint}`);
          var response = (cov_29odgxf5ye().s[53]++, yield fetch(url, {
            method: method,
            headers: {
              'Content-Type': 'application/json',
              'Accept': 'application/json'
            },
            body: method === 'POST' ? (cov_29odgxf5ye().b[4][0]++, JSON.stringify(data)) : (cov_29odgxf5ye().b[4][1]++, undefined)
          }));
          var responseTime = (cov_29odgxf5ye().s[54]++, Date.now() - startTime);
          var responseData = (cov_29odgxf5ye().s[55]++, yield response.json());
          var result = (cov_29odgxf5ye().s[56]++, {
            service: service,
            endpoint: url,
            success: response.ok,
            status: response.status,
            responseTime: responseTime,
            data: responseData
          });
          cov_29odgxf5ye().s[57]++;
          this.testResults.push(result);
          cov_29odgxf5ye().s[58]++;
          console.log(`${response.ok ? (cov_29odgxf5ye().b[5][0]++, '✅') : (cov_29odgxf5ye().b[5][1]++, '❌')} ${service} - ${url}: ${response.status}, ${responseTime}ms`);
          cov_29odgxf5ye().s[59]++;
          return result;
        } catch (error) {
          var _responseTime2 = (cov_29odgxf5ye().s[60]++, Date.now() - startTime);
          var _result2 = (cov_29odgxf5ye().s[61]++, {
            service: service,
            endpoint: `${baseUrl}${endpoint}`,
            success: false,
            responseTime: _responseTime2,
            error: (cov_29odgxf5ye().b[6][0]++, error.message) || (cov_29odgxf5ye().b[6][1]++, '未知错误')
          });
          cov_29odgxf5ye().s[62]++;
          this.testResults.push(_result2);
          cov_29odgxf5ye().s[63]++;
          console.log(`❌ ${service} - ${baseUrl}${endpoint}: ${error.message}`);
          cov_29odgxf5ye().s[64]++;
          return _result2;
        }
      });
      function testExternalEndpoint(_x3, _x4, _x5) {
        return _testExternalEndpoint.apply(this, arguments);
      }
      return testExternalEndpoint;
    }())
  }, {
    key: "runAllTests",
    value: (function () {
      var _runAllTests = (0, _asyncToGenerator2.default)(function* () {
        cov_29odgxf5ye().f[7]++;
        cov_29odgxf5ye().s[65]++;
        console.log('开始API集成测试...');
        cov_29odgxf5ye().s[66]++;
        this.testResults = [];
        var authResults = (cov_29odgxf5ye().s[67]++, yield this.testAuthService());
        var userResults = (cov_29odgxf5ye().s[68]++, yield this.testUserService());
        var healthResults = (cov_29odgxf5ye().s[69]++, yield this.testHealthDataService());
        var agentResults = (cov_29odgxf5ye().s[70]++, yield this.testAgentServices());
        var diagnosisResults = (cov_29odgxf5ye().s[71]++, yield this.testDiagnosisServices());
        var allResults = (cov_29odgxf5ye().s[72]++, [].concat((0, _toConsumableArray2.default)(authResults), (0, _toConsumableArray2.default)(userResults), (0, _toConsumableArray2.default)(healthResults), (0, _toConsumableArray2.default)(agentResults), (0, _toConsumableArray2.default)(diagnosisResults)));
        var passedTests = (cov_29odgxf5ye().s[73]++, allResults.filter(function (r) {
          cov_29odgxf5ye().f[8]++;
          cov_29odgxf5ye().s[74]++;
          return r.success;
        }).length);
        var failedTests = (cov_29odgxf5ye().s[75]++, allResults.length - passedTests);
        var report = (cov_29odgxf5ye().s[76]++, {
          timestamp: new Date().toISOString(),
          totalTests: allResults.length,
          passedTests: passedTests,
          failedTests: failedTests,
          results: allResults
        });
        cov_29odgxf5ye().s[77]++;
        yield this.saveTestReport(report);
        cov_29odgxf5ye().s[78]++;
        console.log(`API集成测试完成: 总计 ${report.totalTests} 测试, ${report.passedTests} 通过, ${report.failedTests} 失败`);
        cov_29odgxf5ye().s[79]++;
        return report;
      });
      function runAllTests() {
        return _runAllTests.apply(this, arguments);
      }
      return runAllTests;
    }())
  }, {
    key: "saveTestReport",
    value: (function () {
      var _saveTestReport = (0, _asyncToGenerator2.default)(function* (report) {
        cov_29odgxf5ye().f[9]++;
        cov_29odgxf5ye().s[80]++;
        try {
          var reportsJson = (cov_29odgxf5ye().s[81]++, yield _asyncStorage.default.getItem('api_test_reports'));
          var reports = (cov_29odgxf5ye().s[82]++, reportsJson ? (cov_29odgxf5ye().b[7][0]++, JSON.parse(reportsJson)) : (cov_29odgxf5ye().b[7][1]++, []));
          cov_29odgxf5ye().s[83]++;
          reports.push(report);
          var recentReports = (cov_29odgxf5ye().s[84]++, reports.slice(-10));
          cov_29odgxf5ye().s[85]++;
          yield _asyncStorage.default.setItem('api_test_reports', JSON.stringify(recentReports));
        } catch (error) {
          cov_29odgxf5ye().s[86]++;
          console.error('保存测试报告失败:', error);
        }
      });
      function saveTestReport(_x6) {
        return _saveTestReport.apply(this, arguments);
      }
      return saveTestReport;
    }())
  }, {
    key: "getTestReports",
    value: (function () {
      var _getTestReports = (0, _asyncToGenerator2.default)(function* () {
        cov_29odgxf5ye().f[10]++;
        cov_29odgxf5ye().s[87]++;
        try {
          var reportsJson = (cov_29odgxf5ye().s[88]++, yield _asyncStorage.default.getItem('api_test_reports'));
          cov_29odgxf5ye().s[89]++;
          return reportsJson ? (cov_29odgxf5ye().b[8][0]++, JSON.parse(reportsJson)) : (cov_29odgxf5ye().b[8][1]++, []);
        } catch (error) {
          cov_29odgxf5ye().s[90]++;
          console.error('获取测试报告失败:', error);
          cov_29odgxf5ye().s[91]++;
          return [];
        }
      });
      function getTestReports() {
        return _getTestReports.apply(this, arguments);
      }
      return getTestReports;
    }())
  }, {
    key: "quickHealthCheck",
    value: (function () {
      var _quickHealthCheck = (0, _asyncToGenerator2.default)(function* () {
        cov_29odgxf5ye().f[11]++;
        cov_29odgxf5ye().s[92]++;
        try {
          var authHealth = (cov_29odgxf5ye().s[93]++, yield this.testEndpoint('认证服务', '/auth/health', 'GET'));
          var userHealth = (cov_29odgxf5ye().s[94]++, yield this.testEndpoint('用户服务', '/users/health', 'GET'));
          var xiaoaiBaseUrl = (cov_29odgxf5ye().s[95]++, _config.API_CONFIG.AGENTS.XIAOAI);
          var xiaoaiHealth = (cov_29odgxf5ye().s[96]++, yield this.testExternalEndpoint('小艾服务', xiaoaiBaseUrl, '/health', 'GET'));
          var xiaokeBaseUrl = (cov_29odgxf5ye().s[97]++, _config.API_CONFIG.AGENTS.XIAOKE);
          var xiaokeHealth = (cov_29odgxf5ye().s[98]++, yield this.testExternalEndpoint('小克服务', xiaokeBaseUrl, '/health', 'GET'));
          var servicesStatus = (cov_29odgxf5ye().s[99]++, {
            auth: authHealth.success,
            user: userHealth.success,
            xiaoai: xiaoaiHealth.success,
            xiaoke: xiaokeHealth.success
          });
          var allServicesUp = (cov_29odgxf5ye().s[100]++, Object.values(servicesStatus).every(function (status) {
            cov_29odgxf5ye().f[12]++;
            cov_29odgxf5ye().s[101]++;
            return status;
          }));
          cov_29odgxf5ye().s[102]++;
          return {
            success: allServicesUp,
            message: allServicesUp ? (cov_29odgxf5ye().b[9][0]++, '所有核心服务正常运行') : (cov_29odgxf5ye().b[9][1]++, '部分服务不可用'),
            services: servicesStatus
          };
        } catch (error) {
          cov_29odgxf5ye().s[103]++;
          return {
            success: false,
            message: `健康检查失败: ${error.message}`,
            services: {}
          };
        }
      });
      function quickHealthCheck() {
        return _quickHealthCheck.apply(this, arguments);
      }
      return quickHealthCheck;
    }())
  }]);
}();
var apiIntegrationTest = exports.apiIntegrationTest = (cov_29odgxf5ye().s[104]++, new ApiIntegrationTest());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,