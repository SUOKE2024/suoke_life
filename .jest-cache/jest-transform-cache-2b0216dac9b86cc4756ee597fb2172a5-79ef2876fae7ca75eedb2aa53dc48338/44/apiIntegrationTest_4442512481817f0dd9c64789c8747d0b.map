{"version":3,"names":["_apiClient","require","_config","_asyncStorage","_interopRequireDefault","cov_29odgxf5ye","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","_coverageSchema","coverage","actualCoverage","ApiIntegrationTest","_classCallCheck2","default","testResults","_createClass2","key","value","_testAuthService","_asyncToGenerator2","console","log","results","push","testEndpoint","testAuthService","apply","arguments","_testUserService","testUserService","_testHealthDataService","testHealthDataService","_testAgentServices","xiaoaiBaseUrl","API_CONFIG","AGENTS","XIAOAI","testExternalEndpoint","xiaokeBaseUrl","XIAOKE","laokeBaseUrl","LAOKE","soerBaseUrl","SOER","testAgentServices","_testDiagnosisServices","lookBaseUrl","DIAGNOSIS","LOOK","listenBaseUrl","LISTEN","inquiryBaseUrl","INQUIRY","palpationBaseUrl","PALPATION","testDiagnosisServices","_testEndpoint","service","endpoint","method","length","undefined","data","startTime","Date","now","response","apiClient","get","post","responseTime","result","success","error","message","_x","_x2","_testExternalEndpoint","baseUrl","url","fetch","headers","body","JSON","stringify","responseData","json","ok","status","_x3","_x4","_x5","_runAllTests","authResults","userResults","healthResults","agentResults","diagnosisResults","allResults","concat","_toConsumableArray2","passedTests","filter","r","failedTests","report","timestamp","toISOString","totalTests","saveTestReport","runAllTests","_saveTestReport","reportsJson","AsyncStorage","getItem","reports","parse","recentReports","slice","setItem","_x6","_getTestReports","getTestReports","_quickHealthCheck","authHealth","userHealth","xiaoaiHealth","xiaokeHealth","servicesStatus","auth","user","xiaoai","xiaoke","allServicesUp","Object","values","every","services","quickHealthCheck","apiIntegrationTest","exports"],"sources":["apiIntegrationTest.ts"],"sourcesContent":["/**\n * API集成测试工具\n * 用于测试前端与后端API的集成\n */\n\nimport { apiClient } from '../services/apiClient';\nimport { API_CONFIG, STORAGE_CONFIG } from '../constants/config';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\ninterface TestResult {\n  service: string;\n  endpoint: string;\n  success: boolean;\n  status?: number;\n  responseTime: number;\n  error?: string;\n  data?: any;\n}\n\ninterface TestReport {\n  timestamp: string;\n  totalTests: number;\n  passedTests: number;\n  failedTests: number;\n  results: TestResult[];\n}\n\n/**\n * API集成测试类\n */\nclass ApiIntegrationTest {\n  private testResults: TestResult[] = [];\n\n  /**\n   * 测试认证服务\n   */\n  async testAuthService(): Promise<TestResult[]> {\n    console.log('测试认证服务...');\n    const results: TestResult[] = [];\n    \n    // 测试健康检查端点\n    results.push(await this.testEndpoint('认证服务', '/auth/health', 'GET'));\n    \n    return results;\n  }\n\n  /**\n   * 测试用户服务\n   */\n  async testUserService(): Promise<TestResult[]> {\n    console.log('测试用户服务...');\n    const results: TestResult[] = [];\n    \n    // 测试健康检查端点\n    results.push(await this.testEndpoint('用户服务', '/users/health', 'GET'));\n    \n    return results;\n  }\n\n  /**\n   * 测试健康数据服务\n   */\n  async testHealthDataService(): Promise<TestResult[]> {\n    console.log('测试健康数据服务...');\n    const results: TestResult[] = [];\n    \n    // 测试健康检查端点\n    results.push(await this.testEndpoint('健康数据服务', '/health-data/health', 'GET'));\n    \n    return results;\n  }\n\n  /**\n   * 测试智能体服务\n   */\n  async testAgentServices(): Promise<TestResult[]> {\n    console.log('测试智能体服务...');\n    const results: TestResult[] = [];\n    \n    // 测试小艾服务\n    const xiaoaiBaseUrl = API_CONFIG.AGENTS.XIAOAI;\n    results.push(await this.testExternalEndpoint('小艾服务', xiaoaiBaseUrl, '/health', 'GET'));\n    \n    // 测试小克服务\n    const xiaokeBaseUrl = API_CONFIG.AGENTS.XIAOKE;\n    results.push(await this.testExternalEndpoint('小克服务', xiaokeBaseUrl, '/health', 'GET'));\n    \n    // 测试老克服务\n    const laokeBaseUrl = API_CONFIG.AGENTS.LAOKE;\n    results.push(await this.testExternalEndpoint('老克服务', laokeBaseUrl, '/health', 'GET'));\n    \n    // 测试索儿服务\n    const soerBaseUrl = API_CONFIG.AGENTS.SOER;\n    results.push(await this.testExternalEndpoint('索儿服务', soerBaseUrl, '/health', 'GET'));\n    \n    return results;\n  }\n\n  /**\n   * 测试四诊服务\n   */\n  async testDiagnosisServices(): Promise<TestResult[]> {\n    console.log('测试四诊服务...');\n    const results: TestResult[] = [];\n    \n    // 测试望诊服务\n    const lookBaseUrl = API_CONFIG.DIAGNOSIS.LOOK;\n    results.push(await this.testExternalEndpoint('望诊服务', lookBaseUrl, '/health', 'GET'));\n    \n    // 测试闻诊服务\n    const listenBaseUrl = API_CONFIG.DIAGNOSIS.LISTEN;\n    results.push(await this.testExternalEndpoint('闻诊服务', listenBaseUrl, '/health', 'GET'));\n    \n    // 测试问诊服务\n    const inquiryBaseUrl = API_CONFIG.DIAGNOSIS.INQUIRY;\n    results.push(await this.testExternalEndpoint('问诊服务', inquiryBaseUrl, '/health', 'GET'));\n    \n    // 测试切诊服务\n    const palpationBaseUrl = API_CONFIG.DIAGNOSIS.PALPATION;\n    results.push(await this.testExternalEndpoint('切诊服务', palpationBaseUrl, '/health', 'GET'));\n    \n    return results;\n  }\n\n  /**\n   * 测试单个API端点\n   */\n  private async testEndpoint(\n    service: string,\n    endpoint: string,\n    method: 'GET' | 'POST' = 'GET',\n    data?: any\n  ): Promise<TestResult> {\n    console.log(`测试端点: ${endpoint}`);\n    const startTime = Date.now();\n    \n    try {\n      const response = method === 'GET'\n        ? await apiClient.get(endpoint)\n        : await apiClient.post(endpoint, data);\n      \n      const responseTime = Date.now() - startTime;\n      \n      const result: TestResult = {\n        service,\n        endpoint,\n        success: response.success,\n        responseTime,\n        data: response.data,\n      };\n      \n      this.testResults.push(result);\n      console.log(`✅ ${service} - ${endpoint}: ${responseTime}ms`);\n      return result;\n    } catch (error: any) {\n      const responseTime = Date.now() - startTime;\n      \n      const result: TestResult = {\n        service,\n        endpoint,\n        success: false,\n        responseTime,\n        error: error.message || '未知错误',\n      };\n      \n      this.testResults.push(result);\n      console.log(`❌ ${service} - ${endpoint}: ${error.message}`);\n      return result;\n    }\n  }\n\n  /**\n   * 测试外部服务端点\n   */\n  private async testExternalEndpoint(\n    service: string,\n    baseUrl: string,\n    endpoint: string,\n    method: 'GET' | 'POST' = 'GET',\n    data?: any\n  ): Promise<TestResult> {\n    console.log(`测试外部端点: ${baseUrl}${endpoint}`);\n    const startTime = Date.now();\n    \n    try {\n      const url = `${baseUrl}${endpoint}`;\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n        },\n        body: method === 'POST' ? JSON.stringify(data) : undefined,\n      });\n      \n      const responseTime = Date.now() - startTime;\n      const responseData = await response.json();\n      \n      const result: TestResult = {\n        service,\n        endpoint: url,\n        success: response.ok,\n        status: response.status,\n        responseTime,\n        data: responseData,\n      };\n      \n      this.testResults.push(result);\n      console.log(`${response.ok ? '✅' : '❌'} ${service} - ${url}: ${response.status}, ${responseTime}ms`);\n      return result;\n    } catch (error: any) {\n      const responseTime = Date.now() - startTime;\n      \n      const result: TestResult = {\n        service,\n        endpoint: `${baseUrl}${endpoint}`,\n        success: false,\n        responseTime,\n        error: error.message || '未知错误',\n      };\n      \n      this.testResults.push(result);\n      console.log(`❌ ${service} - ${baseUrl}${endpoint}: ${error.message}`);\n      return result;\n    }\n  }\n\n  /**\n   * 运行所有集成测试\n   */\n  async runAllTests(): Promise<TestReport> {\n    console.log('开始API集成测试...');\n    this.testResults = [];\n    \n    // 运行所有测试\n    const authResults = await this.testAuthService();\n    const userResults = await this.testUserService();\n    const healthResults = await this.testHealthDataService();\n    const agentResults = await this.testAgentServices();\n    const diagnosisResults = await this.testDiagnosisServices();\n    \n    // 合并所有测试结果\n    const allResults = [\n      ...authResults,\n      ...userResults,\n      ...healthResults,\n      ...agentResults,\n      ...diagnosisResults,\n    ];\n    \n    // 计算通过和失败的测试数量\n    const passedTests = allResults.filter(r => r.success).length;\n    const failedTests = allResults.length - passedTests;\n    \n    // 创建测试报告\n    const report: TestReport = {\n      timestamp: new Date().toISOString(),\n      totalTests: allResults.length,\n      passedTests,\n      failedTests,\n      results: allResults,\n    };\n    \n    // 保存测试报告\n    await this.saveTestReport(report);\n    \n    console.log(`API集成测试完成: 总计 ${report.totalTests} 测试, ${report.passedTests} 通过, ${report.failedTests} 失败`);\n    \n    return report;\n  }\n\n  /**\n   * 保存测试报告\n   */\n  private async saveTestReport(report: TestReport): Promise<void> {\n    try {\n      // 获取现有报告\n      const reportsJson = await AsyncStorage.getItem('api_test_reports');\n      const reports: TestReport[] = reportsJson ? JSON.parse(reportsJson) : [];\n      \n      // 添加新报告\n      reports.push(report);\n      \n      // 只保留最近的10个报告\n      const recentReports = reports.slice(-10);\n      \n      // 保存报告\n      await AsyncStorage.setItem('api_test_reports', JSON.stringify(recentReports));\n    } catch (error) {\n      console.error('保存测试报告失败:', error);\n    }\n  }\n\n  /**\n   * 获取最近的测试报告\n   */\n  async getTestReports(): Promise<TestReport[]> {\n    try {\n      const reportsJson = await AsyncStorage.getItem('api_test_reports');\n      return reportsJson ? JSON.parse(reportsJson) : [];\n    } catch (error) {\n      console.error('获取测试报告失败:', error);\n      return [];\n    }\n  }\n\n  /**\n   * 快速健康检查\n   */\n  async quickHealthCheck(): Promise<{ success: boolean; message: string; services: Record<string, boolean> }> {\n    try {\n      // 检查主要服务\n      const authHealth = await this.testEndpoint('认证服务', '/auth/health', 'GET');\n      const userHealth = await this.testEndpoint('用户服务', '/users/health', 'GET');\n      \n      // 检查智能体服务\n      const xiaoaiBaseUrl = API_CONFIG.AGENTS.XIAOAI;\n      const xiaoaiHealth = await this.testExternalEndpoint('小艾服务', xiaoaiBaseUrl, '/health', 'GET');\n      \n      const xiaokeBaseUrl = API_CONFIG.AGENTS.XIAOKE;\n      const xiaokeHealth = await this.testExternalEndpoint('小克服务', xiaokeBaseUrl, '/health', 'GET');\n      \n      // 结果\n      const servicesStatus = {\n        auth: authHealth.success,\n        user: userHealth.success,\n        xiaoai: xiaoaiHealth.success,\n        xiaoke: xiaokeHealth.success,\n      };\n      \n      const allServicesUp = Object.values(servicesStatus).every(status => status);\n      \n      return {\n        success: allServicesUp,\n        message: allServicesUp ? '所有核心服务正常运行' : '部分服务不可用',\n        services: servicesStatus,\n      };\n    } catch (error: any) {\n      return {\n        success: false,\n        message: `健康检查失败: ${error.message}`,\n        services: {},\n      };\n    }\n  }\n}\n\n// 导出API集成测试实例\nexport const apiIntegrationTest = new ApiIntegrationTest(); "],"mappings":";;;;;;;;;AAKA,IAAAA,UAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AACA,IAAAE,aAAA,GAAAC,sBAAA,CAAAH,OAAA;AAAqE,SAAAI,eeAAA;IAAApB,IAAA;EAAA;EAAA,IAAAqB,QAAA,GAAApB,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAkB,QAAA,CAAAtB,IAAA,KAAAsB,QAAA,CAAAtB,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAAqB,QAAA,CAAAtB,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAkB,cAAA,GAAAD,QAAA,CAAAtB,IAAA;EAAA;IAAAD,cAAA,YAAAA,CAAA;MAAA,OAAAwB,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAxB,cAAA;AAAA,IAuB/DyB,kBAAkB;EAAA,SAAAA,mBAAA;IAAA,IAAAC,gBAAA,CAAAC,OAAA,QAAAF,kBAAA;IAAA,KACdG,WAAW,IAAA5B,cAAA,GAAAmB,CAAA,OAAiB,EAAE;EAAA;EAAA,WAAAU,aAAA,CAAAF,OAAA,EAAAF,kBAAA;IAAAK,GAAA;IAAAC,KAAA;MAAA,IAAAC,gBAAA,OAAAC,kBAAA,CAAAN,OAAA,EAKtC,aAA+C;QAAA3B,cAAA,GAAAoB,CAAA;QAAApB,cAAA,GAAAmB,CAAA;QAC7Ce,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;QACxB,IAAMC,OAAqB,IAAApC,cAAA,GAAAmB,CAAA,OAAG,EAAE;QAACnB,cAAA,GAAAmB,CAAA;QAGjCiB,OAAO,CAACC,IAAI,OAAO,IAAI,CAACC,YAAY,CAAC,MAAM,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;QAACtC,cAAA,GAAAmB,CAAA;QAErE,OAAOiB,OAAO;MAChB,CAAC;MAAA,SARKG,eAAeA,CAAA;QAAA,OAAAP,gBAAA,CAAAQ,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAfF,eAAe;IAAA;EAAA;IAAAT,GAAA;IAAAC,KAAA;MAAA,IAAAW,gBAAA,OAAAT,kBAAA,CAAAN,OAAA,EAarB,aAA+C;QAAA3B,cAAA,GAAAoB,CAAA;QAAApB,cAAA,GAAAmB,CAAA;QAC7Ce,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;QACxB,IAAMC,OAAqB,IAAApC,cAAA,GAAAmB,CAAA,OAAG,EAAE;QAACnB,cAAA,GAAAmB,CAAA;QAGjCiB,OAAO,CAACC,IAAI,OAAO,IAAI,CAACC,YAAY,CAAC,MAAM,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;QAACtC,cAAA,GAAAmB,CAAA;QAEtE,OAAOiB,OAAO;MAChB,CAAC;MAAA,SARKO,eAAeA,CAAA;QAAA,OAAAD,gBAAA,CAAAF,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAfE,eAAe;IAAA;EAAA;IAAAb,GAAA;IAAAC,KAAA;MAAA,IAAAa,sBAAA,OAAAX,kBAAA,CAAAN,OAAA,EAarB,aAAqD;QAAA3B,cAAA,GAAAoB,CAAA;QAAApB,cAAA,GAAAmB,CAAA;QACnDe,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;QAC1B,IAAMC,OAAqB,IAAApC,cAAA,GAAAmB,CAAA,QAAG,EAAE;QAACnB,cAAA,GAAAmB,CAAA;QAGjCiB,OAAO,CAACC,IAAI,OAAO,IAAI,CAACC,YAAY,CAAC,QAAQ,EAAE,qBAAqB,EAAE,KAAK,CAAC,CAAC;QAACtC,cAAA,GAAAmB,CAAA;QAE9E,OAAOiB,OAAO;MAChB,CAAC;MAAA,SARKS,qBAAqBA,CAAA;QAAA,OAAAD,sBAAA,CAAAJ,KAAA,OAAAC,SAAA;MAAA;MAAA,OAArBI,qBAAqB;IAAA;EAAA;IAAAf,GAAA;IAAAC,KAAA;MAAA,IAAAe,kBAAA,OAAAb,kBAAA,CAAAN,OAAA,EAa3B,aAAiD;QAAA3B,cAAA,GAAAoB,CAAA;QAAApB,cAAA,GAAAmB,CAAA;QAC/Ce,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;QACzB,IAAMC,OAAqB,IAAApC,cAAA,GAAAmB,CAAA,QAAG,EAAE;QAGhC,IAAM4B,aAAa,IAAA/C,cAAA,GAAAmB,CAAA,QAAG6B,kBAAU,CAACC,MAAM,CAACC,MAAM;QAAClD,cAAA,GAAAmB,CAAA;QAC/CiB,OAAO,CAACC,IAAI,OAAO,IAAI,CAACc,oBAAoB,CAAC,MAAM,EAAEJ,aAAa,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;QAGtF,IAAMK,aAAa,IAAApD,cAAA,GAAAmB,CAAA,QAAG6B,kBAAU,CAACC,MAAM,CAACI,MAAM;QAACrD,cAAA,GAAAmB,CAAA;QAC/CiB,OAAO,CAACC,IAAI,OAAO,IAAI,CAACc,oBAAoB,CAAC,MAAM,EAAEC,aAAa,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;QAGtF,IAAME,YAAY,IAAAtD,cAAA,GAAAmB,CAAA,QAAG6B,kBAAU,CAACC,MAAM,CAACM,KAAK;QAACvD,cAAA,GAAAmB,CAAA;QAC7CiB,OAAO,CAACC,IAAI,OAAO,IAAI,CAACc,oBAAoB,CAAC,MAAM,EAAEG,YAAY,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;QAGrF,IAAME,WAAW,IAAAxD,cAAA,GAAAmB,CAAA,QAAG6B,kBAAU,CAACC,MAAM,CAACQ,IAAI;QAACzD,cAAA,GAAAmB,CAAA;QAC3CiB,OAAO,CAACC,IAAI,OAAO,IAAI,CAACc,oBAAoB,CAAC,MAAM,EAAEK,WAAW,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;QAACxD,cAAA,GAAAmB,CAAA;QAErF,OAAOiB,OAAO;MAChB,CAAC;MAAA,SArBKsB,iBAAiBA,CAAA;QAAA,OAAAZ,kBAAA,CAAAN,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAjBiB,iBAAiB;IAAA;EAAA;IAAA5B,GAAA;IAAAC,KAAA;MAAA,IAAA4B,sBAAA,OAAA1B,kBAAA,CAAAN,OAAA,EA0BvB,aAAqD;QAAA3B,cAAA,GAAAoB,CAAA;QAAApB,cAAA,GAAAmB,CAAA;QACnDe,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;QACxB,IAAMC,OAAqB,IAAApC,cAAA,GAAAmB,CAAA,QAAG,EAAE;QAGhC,IAAMyC,WAAW,IAAA5D,cAAA,GAAAmB,CAAA,QAAG6B,kBAAU,CAACa,SAAS,CAACC,IAAI;QAAC9D,cAAA,GAAAmB,CAAA;QAC9CiB,OAAO,CAACC,IAAI,OAAO,IAAI,CAACc,oBAAoB,CAAC,MAAM,EAAES,WAAW,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;QAGpF,IAAMG,aAAa,IAAA/D,cAAA,GAAAmB,CAAA,QAAG6B,kBAAU,CAACa,SAAS,CAACG,MAAM;QAAChE,cAAA,GAAAmB,CAAA;QAClDiB,OAAO,CAACC,IAAI,OAAO,IAAI,CAACc,oBAAoB,CAAC,MAAM,EAAEY,aAAa,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;QAGtF,IAAME,cAAc,IAAAjE,cAAA,GAAAmB,CAAA,QAAG6B,kBAAU,CAACa,SAAS,CAACK,OAAO;QAAClE,cAAA,GAAAmB,CAAA;QACpDiB,OAAO,CAACC,IAAI,OAAO,IAAI,CAACc,oBAAoB,CAAC,MAAM,EAAEc,cAAc,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;QAGvF,IAAME,gBAAgB,IAAAnE,cAAA,GAAAmB,CAAA,QAAG6B,kBAAU,CAACa,SAAS,CAACO,SAAS;QAACpE,cAAA,GAAAmB,CAAA;QACxDiB,OAAO,CAACC,IAAI,OAAO,IAAI,CAACc,oBAAoB,CAAC,MAAM,EAAEgB,gBAAgB,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;QAACnE,cAAA,GAAAmB,CAAA;QAE1F,OAAOiB,OAAO;MAChB,CAAC;MAAA,SArBKiC,qBAAqBA,CAAA;QAAA,OAAAV,sBAAA,CAAAnB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAArB4B,qBAAqB;IAAA;EAAA;IAAAvC,GAAA;IAAAC,KAAA;MAAA,IAAAuC,aAAA,OAAArC,kBAAA,CAAAN,OAAA,EA0B3B,WACE4C,OAAe,EACfC,QAAgB,EAGK;QAAA,IAFrBC,MAAsB,GAAAhC,SAAA,CAAAiC,MAAA,QAAAjC,SAAA,QAAAkC,SAAA,GAAAlC,SAAA,OAAAzC,cAAA,GAAAqB,CAAA,UAAG,KAAK;QAAA,IAC9BuD,IAAU,GAAAnC,SAAA,CAAAiC,MAAA,OAAAjC,SAAA,MAAAkC,SAAA;QAAA3E,cAAA,GAAAoB,CAAA;QAAApB,cAAA,GAAAmB,CAAA;QAEVe,OAAO,CAACC,GAAG,CAAC,SAASqC,QAAQ,EAAE,CAAC;QAChC,IAAMK,SAAS,IAAA7E,cAAA,GAAAmB,CAAA,QAAG2D,IAAI,CAACC,GAAG,CAAC,CAAC;QAAC/E,cAAA,GAAAmB,CAAA;QAE7B,IAAI;UACF,IAAM6D,QAAQ,IAAAhF,cAAA,GAAAmB,CAAA,QAAGsD,MAAM,KAAK,KAAK,IAAAzE,cAAA,GAAAqB,CAAA,gBACvB4D,oBAAS,CAACC,GAAG,CAACV,QAAQ,CAAC,KAAAxE,cAAA,GAAAqB,CAAA,gBACvB4D,oBAAS,CAACE,IAAI,CAACX,QAAQ,EAAEI,IAAI,CAAC;UAExC,IAAMQ,YAAY,IAAApF,cAAA,GAAAmB,CAAA,QAAG2D,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF,SAAS;UAE3C,IAAMQ,MAAkB,IAAArF,cAAA,GAAAmB,CAAA,QAAG;YACzBoD,OAAO,EAAPA,OAAO;YACPC,QAAQ,EAARA,QAAQ;YACRc,OAAO,EAAEN,QAAQ,CAACM,OAAO;YACzBF,YAAY,EAAZA,YAAY;YACZR,IAAI,EAAEI,QAAQ,CAACJ;UACjB,CAAC;UAAC5E,cAAA,GAAAmB,CAAA;UAEF,IAAI,CAACS,WAAW,CAACS,IAAI,CAACgD,MAAM,CAAC;UAACrF,cAAA,GAAAmB,CAAA;UAC9Be,OAAO,CAACC,GAAG,CAAC,KAAKoC,OAAO,MAAMC,QAAQ,KAAKY,YAAY,IAAI,CAAC;UAACpF,cAAA,GAAAmB,CAAA;UAC7D,OAAOkE,MAAM;QACf,CAAC,CAAC,OAAOE,KAAU,EAAE;UACnB,IAAMH,aAAY,IAAApF,cAAA,GAAAmB,CAAA,QAAG2D,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF,SAAS;UAE3C,IAAMQ,OAAkB,IAAArF,cAAA,GAAAmB,CAAA,QAAG;YACzBoD,OAAO,EAAPA,OAAO;YACPC,QAAQ,EAARA,QAAQ;YACRc,OAAO,EAAE,KAAK;YACdF,YAAY,EAAZA,aAAY;YACZG,KAAK,EAAE,CAAAvF,cAAA,GAAAqB,CAAA,UAAAkE,KAAK,CAACC,OAAO,MAAAxF,cAAA,GAAAqB,CAAA,UAAI,MAAM;UAChC,CAAC;UAACrB,cAAA,GAAAmB,CAAA;UAEF,IAAI,CAACS,WAAW,CAACS,IAAI,CAACgD,OAAM,CAAC;UAACrF,cAAA,GAAAmB,CAAA;UAC9Be,OAAO,CAACC,GAAG,CAAC,KAAKoC,OAAO,MAAMC,QAAQ,KAAKe,KAAK,CAACC,OAAO,EAAE,CAAC;UAACxF,cAAA,GAAAmB,CAAA;UAC5D,OAAOkE,OAAM;QACf;MACF,CAAC;MAAA,SA1Ca/C,YAAYA,CAAAmD,EAAA,EAAAC,GAAA;QAAA,OAAApB,aAAA,CAAA9B,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAZH,YAAY;IAAA;EAAA;IAAAR,GAAA;IAAAC,KAAA;MAAA,IAAA4D,qBAAA,OAAA1D,kBAAA,CAAAN,OAAA,EA+C1B,WACE4C,OAAe,EACfqB,OAAe,EACfpB,QAAgB,EAGK;QAAA,IAFrBC,MAAsB,GAAAhC,SAAA,CAAAiC,MAAA,QAAAjC,SAAA,QAAAkC,SAAA,GAAAlC,SAAA,OAAAzC,cAAA,GAAAqB,CAAA,UAAG,KAAK;QAAA,IAC9BuD,IAAU,GAAAnC,SAAA,CAAAiC,MAAA,OAAAjC,SAAA,MAAAkC,SAAA;QAAA3E,cAAA,GAAAoB,CAAA;QAAApB,cAAA,GAAAmB,CAAA;QAEVe,OAAO,CAACC,GAAG,CAAC,WAAWyD,OAAO,GAAGpB,QAAQ,EAAE,CAAC;QAC5C,IAAMK,SAAS,IAAA7E,cAAA,GAAAmB,CAAA,QAAG2D,IAAI,CAACC,GAAG,CAAC,CAAC;QAAC/E,cAAA,GAAAmB,CAAA;QAE7B,IAAI;UACF,IAAM0E,GAAG,IAAA7F,cAAA,GAAAmB,CAAA,QAAG,GAAGyE,OAAO,GAAGpB,QAAQ,EAAE;UACnC,IAAMQ,QAAQ,IAAAhF,cAAA,GAAAmB,CAAA,cAAS2E,KAAK,CAACD,GAAG,EAAE;YAChCpB,MAAM,EAANA,MAAM;YACNsB,OAAO,EAAE;cACP,cAAc,EAAE,kBAAkB;cAClC,QAAQ,EAAE;YACZ,CAAC;YACDC,IAAI,EAAEvB,MAAM,KAAK,MAAM,IAAAzE,cAAA,GAAAqB,CAAA,UAAG4E,IAAI,CAACC,SAAS,CAACtB,IAAI,CAAC,KAAA5E,cAAA,GAAAqB,CAAA,UAAGsD,SAAS;UAC5D,CAAC,CAAC;UAEF,IAAMS,YAAY,IAAApF,cAAA,GAAAmB,CAAA,QAAG2D,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF,SAAS;UAC3C,IAAMsB,YAAY,IAAAnG,cAAA,GAAAmB,CAAA,cAAS6D,QAAQ,CAACoB,IAAI,CAAC,CAAC;UAE1C,IAAMf,MAAkB,IAAArF,cAAA,GAAAmB,CAAA,QAAG;YACzBoD,OAAO,EAAPA,OAAO;YACPC,QAAQ,EAAEqB,GAAG;YACbP,OAAO,EAAEN,QAAQ,CAACqB,EAAE;YACpBC,MAAM,EAAEtB,QAAQ,CAACsB,MAAM;YACvBlB,YAAY,EAAZA,YAAY;YACZR,IAAI,EAAEuB;UACR,CAAC;UAACnG,cAAA,GAAAmB,CAAA;UAEF,IAAI,CAACS,WAAW,CAACS,IAAI,CAACgD,MAAM,CAAC;UAACrF,cAAA,GAAAmB,CAAA;UAC9Be,OAAO,CAACC,GAAG,CAAC,GAAG6C,QAAQ,CAACqB,EAAE,IAAArG,cAAA,GAAAqB,CAAA,UAAG,GAAG,KAAArB,cAAA,GAAAqB,CAAA,UAAG,GAAG,KAAIkD,OAAO,MAAMsB,GAAG,KAAKb,QAAQ,CAACsB,MAAM,KAAKlB,YAAY,IAAI,CAAC;UAACpF,cAAA,GAAAmB,CAAA;UACrG,OAAOkE,MAAM;QACf,CAAC,CAAC,OAAOE,KAAU,EAAE;UACnB,IAAMH,cAAY,IAAApF,cAAA,GAAAmB,CAAA,QAAG2D,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF,SAAS;UAE3C,IAAMQ,QAAkB,IAAArF,cAAA,GAAAmB,CAAA,QAAG;YACzBoD,OAAO,EAAPA,OAAO;YACPC,QAAQ,EAAE,GAAGoB,OAAO,GAAGpB,QAAQ,EAAE;YACjCc,OAAO,EAAE,KAAK;YACdF,YAAY,EAAZA,cAAY;YACZG,KAAK,EAAE,CAAAvF,cAAA,GAAAqB,CAAA,UAAAkE,KAAK,CAACC,OAAO,MAAAxF,cAAA,GAAAqB,CAAA,UAAI,MAAM;UAChC,CAAC;UAACrB,cAAA,GAAAmB,CAAA;UAEF,IAAI,CAACS,WAAW,CAACS,IAAI,CAACgD,QAAM,CAAC;UAACrF,cAAA,GAAAmB,CAAA;UAC9Be,OAAO,CAACC,GAAG,CAAC,KAAKoC,OAAO,MAAMqB,OAAO,GAAGpB,QAAQ,KAAKe,KAAK,CAACC,OAAO,EAAE,CAAC;UAACxF,cAAA,GAAAmB,CAAA;UACtE,OAAOkE,QAAM;QACf;MACF,CAAC;MAAA,SAnDalC,oBAAoBA,CAAAoD,GAAA,EAAAC,GAAA,EAAAC,GAAA;QAAA,OAAAd,qBAAA,CAAAnD,KAAA,OAAAC,SAAA;MAAA;MAAA,OAApBU,oBAAoB;IAAA;EAAA;IAAArB,GAAA;IAAAC,KAAA;MAAA,IAAA2E,YAAA,OAAAzE,kBAAA,CAAAN,OAAA,EAwDlC,aAAyC;QAAA3B,cAAA,GAAAoB,CAAA;QAAApB,cAAA,GAAAmB,CAAA;QACvCe,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAACnC,cAAA,GAAAmB,CAAA;QAC5B,IAAI,CAACS,WAAW,GAAG,EAAE;QAGrB,IAAM+E,WAAW,IAAA3G,cAAA,GAAAmB,CAAA,cAAS,IAAI,CAACoB,eAAe,CAAC,CAAC;QAChD,IAAMqE,WAAW,IAAA5G,cAAA,GAAAmB,CAAA,cAAS,IAAI,CAACwB,eAAe,CAAC,CAAC;QAChD,IAAMkE,aAAa,IAAA7G,cAAA,GAAAmB,CAAA,cAAS,IAAI,CAAC0B,qBAAqB,CAAC,CAAC;QACxD,IAAMiE,YAAY,IAAA9G,cAAA,GAAAmB,CAAA,cAAS,IAAI,CAACuC,iBAAiB,CAAC,CAAC;QACnD,IAAMqD,gBAAgB,IAAA/G,cAAA,GAAAmB,CAAA,cAAS,IAAI,CAACkD,qBAAqB,CAAC,CAAC;QAG3D,IAAM2C,UAAU,IAAAhH,cAAA,GAAAmB,CAAA,WAAA8F,MAAA,KAAAC,mBAAA,CAAAvF,OAAA,EACXgF,WAAW,OAAAO,mBAAA,CAAAvF,OAAA,EACXiF,WAAW,OAAAM,mBAAA,CAAAvF,OAAA,EACXkF,aAAa,OAAAK,mBAAA,CAAAvF,OAAA,EACbmF,YAAY,OAAAI,mBAAA,CAAAvF,OAAA,EACZoF,gBAAgB,GACpB;QAGD,IAAMI,WAAW,IAAAnH,cAAA,GAAAmB,CAAA,QAAG6F,UAAU,CAACI,MAAM,CAAC,UAAAC,CAAC,EAAI;UAAArH,cAAA,GAAAoB,CAAA;UAAApB,cAAA,GAAAmB,CAAA;UAAA,OAAAkG,CAAC,CAAC/B,OAAO;QAAD,CAAC,CAAC,CAACZ,MAAM;QAC5D,IAAM4C,WAAW,IAAAtH,cAAA,GAAAmB,CAAA,QAAG6F,UAAU,CAACtC,MAAM,GAAGyC,WAAW;QAGnD,IAAMI,MAAkB,IAAAvH,cAAA,GAAAmB,CAAA,QAAG;UACzBqG,SAAS,EAAE,IAAI1C,IAAI,CAAC,CAAC,CAAC2C,WAAW,CAAC,CAAC;UACnCC,UAAU,EAAEV,UAAU,CAACtC,MAAM;UAC7ByC,WAAW,EAAXA,WAAW;UACXG,WAAW,EAAXA,WAAW;UACXlF,OAAO,EAAE4E;QACX,CAAC;QAAChH,cAAA,GAAAmB,CAAA;QAGF,MAAM,IAAI,CAACwG,cAAc,CAACJ,MAAM,CAAC;QAACvH,cAAA,GAAAmB,CAAA;QAElCe,OAAO,CAACC,GAAG,CAAC,iBAAiBoF,MAAM,CAACG,UAAU,QAAQH,MAAM,CAACJ,WAAW,QAAQI,MAAM,CAACD,WAAW,KAAK,CAAC;QAACtH,cAAA,GAAAmB,CAAA;QAEzG,OAAOoG,MAAM;MACf,CAAC;MAAA,SAvCKK,WAAWA,CAAA;QAAA,OAAAlB,YAAA,CAAAlE,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAXmF,WAAW;IAAA;EAAA;IAAA9F,GAAA;IAAAC,KAAA;MAAA,IAAA8F,eAAA,OAAA5F,kBAAA,CAAAN,OAAA,EA4CjB,WAA6B4F,MAAkB,EAAiB;QAAAvH,cAAA,GAAAoB,CAAA;QAAApB,cAAA,GAAAmB,CAAA;QAC9D,IAAI;UAEF,IAAM2G,WAAW,IAAA9H,cAAA,GAAAmB,CAAA,cAAS4G,qBAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC;UAClE,IAAMC,OAAqB,IAAAjI,cAAA,GAAAmB,CAAA,QAAG2G,WAAW,IAAA9H,cAAA,GAAAqB,CAAA,UAAG4E,IAAI,CAACiC,KAAK,CAACJ,WAAW,CAAC,KAAA9H,cAAA,GAAAqB,CAAA,UAAG,EAAE;UAACrB,cAAA,GAAAmB,CAAA;UAGzE8G,OAAO,CAAC5F,IAAI,CAACkF,MAAM,CAAC;UAGpB,IAAMY,aAAa,IAAAnI,cAAA,GAAAmB,CAAA,QAAG8G,OAAO,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC;UAACpI,cAAA,GAAAmB,CAAA;UAGzC,MAAM4G,qBAAY,CAACM,OAAO,CAAC,kBAAkB,EAAEpC,IAAI,CAACC,SAAS,CAACiC,aAAa,CAAC,CAAC;QAC/E,CAAC,CAAC,OAAO5C,KAAK,EAAE;UAAAvF,cAAA,GAAAmB,CAAA;UACde,OAAO,CAACqD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACnC;MACF,CAAC;MAAA,SAjBaoC,cAAcA,CAAAW,GAAA;QAAA,OAAAT,eAAA,CAAArF,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAdkF,cAAc;IAAA;EAAA;IAAA7F,GAAA;IAAAC,KAAA;MAAA,IAAAwG,eAAA,OAAAtG,kBAAA,CAAAN,OAAA,EAsB5B,aAA8C;QAAA3B,cAAA,GAAAoB,CAAA;QAAApB,cAAA,GAAAmB,CAAA;QAC5C,IAAI;UACF,IAAM2G,WAAW,IAAA9H,cAAA,GAAAmB,CAAA,cAAS4G,qBAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC;UAAChI,cAAA,GAAAmB,CAAA;UACnE,OAAO2G,WAAW,IAAA9H,cAAA,GAAAqB,CAAA,UAAG4E,IAAI,CAACiC,KAAK,CAACJ,WAAW,CAAC,KAAA9H,cAAA,GAAAqB,CAAA,UAAG,EAAE;QACnD,CAAC,CAAC,OAAOkE,KAAK,EAAE;UAAAvF,cAAA,GAAAmB,CAAA;UACde,OAAO,CAACqD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;UAACvF,cAAA,GAAAmB,CAAA;UAClC,OAAO,EAAE;QACX;MACF,CAAC;MAAA,SARKqH,cAAcA,CAAA;QAAA,OAAAD,eAAA,CAAA/F,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAd+F,cAAc;IAAA;EAAA;IAAA1G,GAAA;IAAAC,KAAA;MAAA,IAAA0G,iBAAA,OAAAxG,kBAAA,CAAAN,OAAA,EAapB,aAA4G;QAAA3B,cAAA,GAAAoB,CAAA;QAAApB,cAAA,GAAAmB,CAAA;QAC1G,IAAI;UAEF,IAAMuH,UAAU,IAAA1I,cAAA,GAAAmB,CAAA,cAAS,IAAI,CAACmB,YAAY,CAAC,MAAM,EAAE,cAAc,EAAE,KAAK,CAAC;UACzE,IAAMqG,UAAU,IAAA3I,cAAA,GAAAmB,CAAA,cAAS,IAAI,CAACmB,YAAY,CAAC,MAAM,EAAE,eAAe,EAAE,KAAK,CAAC;UAG1E,IAAMS,aAAa,IAAA/C,cAAA,GAAAmB,CAAA,QAAG6B,kBAAU,CAACC,MAAM,CAACC,MAAM;UAC9C,IAAM0F,YAAY,IAAA5I,cAAA,GAAAmB,CAAA,cAAS,IAAI,CAACgC,oBAAoB,CAAC,MAAM,EAAEJ,aAAa,EAAE,SAAS,EAAE,KAAK,CAAC;UAE7F,IAAMK,aAAa,IAAApD,cAAA,GAAAmB,CAAA,QAAG6B,kBAAU,CAACC,MAAM,CAACI,MAAM;UAC9C,IAAMwF,YAAY,IAAA7I,cAAA,GAAAmB,CAAA,cAAS,IAAI,CAACgC,oBAAoB,CAAC,MAAM,EAAEC,aAAa,EAAE,SAAS,EAAE,KAAK,CAAC;UAG7F,IAAM0F,cAAc,IAAA9I,cAAA,GAAAmB,CAAA,QAAG;YACrB4H,IAAI,EAAEL,UAAU,CAACpD,OAAO;YACxB0D,IAAI,EAAEL,UAAU,CAACrD,OAAO;YACxB2D,MAAM,EAAEL,YAAY,CAACtD,OAAO;YAC5B4D,MAAM,EAAEL,YAAY,CAACvD;UACvB,CAAC;UAED,IAAM6D,aAAa,IAAAnJ,cAAA,GAAAmB,CAAA,SAAGiI,MAAM,CAACC,MAAM,CAACP,cAAc,CAAC,CAACQ,KAAK,CAAC,UAAAhD,MAAM,EAAIA;YAAAA,wBAAA;YAAAA,yBAAA;YAAAA,MAAA,CAAAA,MAAM;UAAD,CAAC,CAAC;UAACtG,cAAA,GAAAmB,CAAA;UAE5E,OAAO;YACLmE,OAAO,EAAE6D,aAAa;YACtB3D,OAAO,EAAE2D,aAAa,IAAAnJ,cAAA,GAAAqB,CAAA,UAAG,YAAY,KAAArB,cAAA,GAAAqB,CAAA,UAAG,SAAS;YACjDkI,QAAQ,EAAET;UACZ,CAAC;QACH,CAAC,CAAC,OAAOvD,KAAU,EAAE;UAAAvF,cAAA,GAAAmB,CAAA;UACnB,OAAO;YACLmE,OAAO,EAAE,KAAK;YACdE,OAAO,EAAE,WAAWD,KAAK,CAACC,OAAO,EAAE;YACnC+D,QAAQ,EAAE,CAAC;UACb,CAAC;QACH;MACF,CAAC;MAAA,SAnCKC,gBAAgBA,CAAA;QAAA,OAAAf,iBAAA,CAAAjG,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAhB+G,gBAAgB;IAAA;EAAA;AAAA;AAuCjB,IAAMC,kBAAkB,GAAAC,OAAA,CAAAD,kBAAA,IAAAzJ,cAAA,GAAAmB,CAAA,SAAG,IAAIM,kBAAkB,CAAC,CAAC","ignoreList":[]}