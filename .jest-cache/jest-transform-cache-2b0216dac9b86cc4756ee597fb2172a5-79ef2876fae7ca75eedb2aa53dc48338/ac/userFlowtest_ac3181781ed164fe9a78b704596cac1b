b118dfe9a4a232d7f76931196ccaa664
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var createMockElement = function createMockElement() {
  return {
    tap: jest.fn().mockResolvedValue(undefined),
    typeText: jest.fn().mockResolvedValue(undefined),
    clearText: jest.fn().mockResolvedValue(undefined),
    swipe: jest.fn().mockResolvedValue(undefined),
    scroll: jest.fn().mockResolvedValue(undefined),
    waitFor: jest.fn().mockResolvedValue(true)
  };
};
var createMockWaitFor = function createMockWaitFor() {
  var waitForObj = {
    toBeVisible: jest.fn().mockReturnThis(),
    toExist: jest.fn().mockReturnThis(),
    toHaveText: jest.fn().mockReturnThis(),
    withTimeout: jest.fn().mockResolvedValue(true)
  };
  return waitForObj;
};
var createMockExpect = function createMockExpect() {
  return {
    toBeVisible: jest.fn().mockReturnValue(true),
    toExist: jest.fn().mockReturnValue(true),
    toHaveText: jest.fn().mockReturnValue(true),
    toHaveId: jest.fn().mockReturnValue(true)
  };
};
var mockE2E = {
  device: {
    launchApp: jest.fn().mockResolvedValue(undefined),
    reloadReactNative: jest.fn().mockResolvedValue(undefined),
    terminateApp: jest.fn().mockResolvedValue(undefined)
  },
  element: jest.fn().mockImplementation(function () {
    return createMockElement();
  }),
  by: {
    id: function id(_id) {
      return {
        id: _id
      };
    },
    text: function text(_text) {
      return {
        text: _text
      };
    },
    label: function label(_label) {
      return {
        label: _label
      };
    },
    type: function type(_type) {
      return {
        type: _type
      };
    }
  },
  waitFor: jest.fn().mockImplementation(function () {
    return createMockWaitFor();
  }),
  expect: jest.fn().mockImplementation(function () {
    return createMockExpect();
  })
};
describe('用户流程端到端测试', function () {
  beforeAll((0, _asyncToGenerator2.default)(function* () {
    yield mockE2E.device.launchApp();
  }));
  afterAll((0, _asyncToGenerator2.default)(function* () {
    yield mockE2E.device.terminateApp();
  }));
  describe('用户注册流程', function () {
    it('应该完成完整的注册流程', (0, _asyncToGenerator2.default)(function* () {
      var registerButton = mockE2E.element(mockE2E.by.id('register-button'));
      yield registerButton.tap();
      yield mockE2E.waitFor(mockE2E.element(mockE2E.by.id('register-screen'))).toBeVisible().withTimeout(5000);
      var emailInput = mockE2E.element(mockE2E.by.id('email-input'));
      yield emailInput.typeText('test@example.com');
      var passwordInput = mockE2E.element(mockE2E.by.id('password-input'));
      yield passwordInput.typeText('password123');
      var confirmPasswordInput = mockE2E.element(mockE2E.by.id('confirm-password-input'));
      yield confirmPasswordInput.typeText('password123');
      var nameInput = mockE2E.element(mockE2E.by.id('name-input'));
      yield nameInput.typeText('测试用户');
      var submitButton = mockE2E.element(mockE2E.by.id('submit-button'));
      yield submitButton.tap();
      yield mockE2E.waitFor(mockE2E.element(mockE2E.by.text('注册成功'))).toBeVisible().withTimeout(10000);
      expect(mockE2E.expect(mockE2E.element(mockE2E.by.text('注册成功'))).toBeVisible()).toBeTruthy();
    }));
    it('应该处理注册错误', (0, _asyncToGenerator2.default)(function* () {
      var emailInput = mockE2E.element(mockE2E.by.id('email-input'));
      yield emailInput.clearText();
      yield emailInput.typeText('existing@example.com');
      var submitButton = mockE2E.element(mockE2E.by.id('submit-button'));
      yield submitButton.tap();
      yield mockE2E.waitFor(mockE2E.element(mockE2E.by.text('邮箱已被注册'))).toBeVisible().withTimeout(5000);
      expect(mockE2E.expect(mockE2E.element(mockE2E.by.text('邮箱已被注册'))).toBeVisible()).toBeTruthy();
    }));
  });
  describe('用户登录流程', function () {
    it('应该完成成功登录', (0, _asyncToGenerator2.default)(function* () {
      var loginButton = mockE2E.element(mockE2E.by.id('login-button'));
      yield loginButton.tap();
      var emailInput = mockE2E.element(mockE2E.by.id('email-input'));
      yield emailInput.typeText('test@example.com');
      var passwordInput = mockE2E.element(mockE2E.by.id('password-input'));
      yield passwordInput.typeText('password123');
      var submitButton = mockE2E.element(mockE2E.by.id('login-submit-button'));
      yield submitButton.tap();
      yield mockE2E.waitFor(mockE2E.element(mockE2E.by.id('main-screen'))).toBeVisible().withTimeout(10000);
      expect(mockE2E.expect(mockE2E.element(mockE2E.by.id('main-screen'))).toBeVisible()).toBeTruthy();
    }));
    it('应该处理登录失败', (0, _asyncToGenerator2.default)(function* () {
      var passwordInput = mockE2E.element(mockE2E.by.id('password-input'));
      yield passwordInput.clearText();
      yield passwordInput.typeText('wrongpassword');
      var submitButton = mockE2E.element(mockE2E.by.id('login-submit-button'));
      yield submitButton.tap();
      yield mockE2E.waitFor(mockE2E.element(mockE2E.by.text('用户名或密码错误'))).toBeVisible().withTimeout(5000);
      expect(mockE2E.expect(mockE2E.element(mockE2E.by.text('用户名或密码错误'))).toBeVisible()).toBeTruthy();
    }));
  });
  describe('智能体交互流程', function () {
    beforeEach((0, _asyncToGenerator2.default)(function* () {
      yield mockE2E.waitFor(mockE2E.element(mockE2E.by.id('main-screen'))).toBeVisible().withTimeout(5000);
    }));
    it('应该能够与小艾智能体聊天', (0, _asyncToGenerator2.default)(function* () {
      var agentTab = mockE2E.element(mockE2E.by.id('agent-tab'));
      yield agentTab.tap();
      var xiaoaiCard = mockE2E.element(mockE2E.by.id('xiaoai-card'));
      yield xiaoaiCard.tap();
      yield mockE2E.waitFor(mockE2E.element(mockE2E.by.id('chat-screen'))).toBeVisible().withTimeout(5000);
      var messageInput = mockE2E.element(mockE2E.by.id('message-input'));
      yield messageInput.typeText('你好，我想了解一下健康管理');
      var sendButton = mockE2E.element(mockE2E.by.id('send-button'));
      yield sendButton.tap();
      yield mockE2E.waitFor(mockE2E.element(mockE2E.by.text('你好，我想了解一下健康管理'))).toBeVisible().withTimeout(3000);
      yield mockE2E.waitFor(mockE2E.element(mockE2E.by.text('很高兴为您服务'))).toBeVisible().withTimeout(10000);
      expect(mockE2E.expect(mockE2E.element(mockE2E.by.text('很高兴为您服务'))).toBeVisible()).toBeTruthy();
    }));
    it('应该能够查看智能体详情', (0, _asyncToGenerator2.default)(function* () {
      var detailButton = mockE2E.element(mockE2E.by.id('agent-detail-button'));
      yield detailButton.tap();
      yield mockE2E.waitFor(mockE2E.element(mockE2E.by.id('agent-detail-screen'))).toBeVisible().withTimeout(5000);
      expect(mockE2E.expect(mockE2E.element(mockE2E.by.text('小艾'))).toBeVisible()).toBeTruthy();
      expect(mockE2E.expect(mockE2E.element(mockE2E.by.text('健康咨询专家'))).toBeVisible()).toBeTruthy();
    }));
  });
  describe('健康数据管理流程', function () {
    it('应该能够添加健康数据', (0, _asyncToGenerator2.default)(function* () {
      var healthTab = mockE2E.element(mockE2E.by.id('health-tab'));
      yield healthTab.tap();
      var addButton = mockE2E.element(mockE2E.by.id('add-health-data-button'));
      yield addButton.tap();
      var bloodPressureOption = mockE2E.element(mockE2E.by.id('blood-pressure-option'));
      yield bloodPressureOption.tap();
      var systolicInput = mockE2E.element(mockE2E.by.id('systolic-input'));
      yield systolicInput.typeText('120');
      var diastolicInput = mockE2E.element(mockE2E.by.id('diastolic-input'));
      yield diastolicInput.typeText('80');
      var saveButton = mockE2E.element(mockE2E.by.id('save-button'));
      yield saveButton.tap();
      yield mockE2E.waitFor(mockE2E.element(mockE2E.by.text('数据保存成功'))).toBeVisible().withTimeout(5000);
      expect(mockE2E.expect(mockE2E.element(mockE2E.by.text('数据保存成功'))).toBeVisible()).toBeTruthy();
    }));
    it('应该能够查看健康趋势', (0, _asyncToGenerator2.default)(function* () {
      var trendButton = mockE2E.element(mockE2E.by.id('trend-analysis-button'));
      yield trendButton.tap();
      yield mockE2E.waitFor(mockE2E.element(mockE2E.by.id('trend-chart'))).toBeVisible().withTimeout(5000);
      expect(mockE2E.expect(mockE2E.element(mockE2E.by.id('trend-chart'))).toBeVisible()).toBeTruthy();
    }));
  });
  describe('个人资料管理流程', function () {
    it('应该能够更新个人资料', (0, _asyncToGenerator2.default)(function* () {
      var profileTab = mockE2E.element(mockE2E.by.id('profile-tab'));
      yield profileTab.tap();
      var editButton = mockE2E.element(mockE2E.by.id('edit-profile-button'));
      yield editButton.tap();
      var nameInput = mockE2E.element(mockE2E.by.id('name-input'));
      yield nameInput.clearText();
      yield nameInput.typeText('更新的用户名');
      var saveButton = mockE2E.element(mockE2E.by.id('save-profile-button'));
      yield saveButton.tap();
      yield mockE2E.waitFor(mockE2E.element(mockE2E.by.text('资料更新成功'))).toBeVisible().withTimeout(5000);
      expect(mockE2E.expect(mockE2E.element(mockE2E.by.text('更新的用户名'))).toBeVisible()).toBeTruthy();
    }));
  });
  describe('应用导航流程', function () {
    it('应该能够在不同页面间导航', (0, _asyncToGenerator2.default)(function* () {
      var tabs = ['home-tab', 'explore-tab', 'life-tab', 'suoke-tab', 'profile-tab'];
      for (var tabId of tabs) {
        var tab = mockE2E.element(mockE2E.by.id(tabId));
        yield tab.tap();
        yield mockE2E.waitFor(mockE2E.element(mockE2E.by.id(`${tabId.replace('-tab', '')}-screen`))).toBeVisible().withTimeout(3000);
        expect(mockE2E.expect(mockE2E.element(mockE2E.by.id(`${tabId.replace('-tab', '')}-screen`))).toBeVisible()).toBeTruthy();
      }
    }));
    it('应该能够处理返回导航', (0, _asyncToGenerator2.default)(function* () {
      var detailButton = mockE2E.element(mockE2E.by.id('detail-button'));
      yield detailButton.tap();
      var backButton = mockE2E.element(mockE2E.by.id('back-button'));
      yield backButton.tap();
      yield mockE2E.waitFor(mockE2E.element(mockE2E.by.id('main-screen'))).toBeVisible().withTimeout(3000);
      expect(mockE2E.expect(mockE2E.element(mockE2E.by.id('main-screen'))).toBeVisible()).toBeTruthy();
    }));
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,