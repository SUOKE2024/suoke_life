{"version":3,"names":["createMockElement","tap","jest","fn","mockResolvedValue","undefined","typeText","clearText","swipe","scroll","waitFor","createMockWaitFor","waitForObj","toBeVisible","mockReturnThis","toExist","toHaveText","withTimeout","createMockExpect","mockReturnValue","toHaveId","mockE2E","device","launchApp","reloadReactNative","terminateApp","element","mockImplementation","by","id","text","label","type","expect","describe","beforeAll","_asyncToGenerator2","default","afterAll","it","registerButton","emailInput","passwordInput","confirmPasswordInput","nameInput","submitButton","toBeTruthy","loginButton","beforeEach","agentTab","xiaoaiCard","messageInput","sendButton","detailButton","healthTab","addButton","bloodPressureOption","systolicInput","diastolicInput","saveButton","trendButton","profileTab","editButton","tabs","tabId","tab","replace","backButton"],"sources":["userFlow.test.ts"],"sourcesContent":["// Mock端到端测试框架\nconst createMockElement = () => ({\n  tap: jest.fn().mockResolvedValue(undefined),\n  typeText: jest.fn().mockResolvedValue(undefined),\n  clearText: jest.fn().mockResolvedValue(undefined),\n  swipe: jest.fn().mockResolvedValue(undefined),\n  scroll: jest.fn().mockResolvedValue(undefined),\n  waitFor: jest.fn().mockResolvedValue(true),\n});\n\nconst createMockWaitFor = () => {\n  const waitForObj = {\n    toBeVisible: jest.fn().mockReturnThis(),\n    toExist: jest.fn().mockReturnThis(),\n    toHaveText: jest.fn().mockReturnThis(),\n    withTimeout: jest.fn().mockResolvedValue(true),\n  };\n  return waitForObj;\n};\n\nconst createMockExpect = () => ({\n  toBeVisible: jest.fn().mockReturnValue(true),\n  toExist: jest.fn().mockReturnValue(true),\n  toHaveText: jest.fn().mockReturnValue(true),\n  toHaveId: jest.fn().mockReturnValue(true),\n});\n\nconst mockE2E = {\n  device: {\n    launchApp: jest.fn().mockResolvedValue(undefined),\n    reloadReactNative: jest.fn().mockResolvedValue(undefined),\n    terminateApp: jest.fn().mockResolvedValue(undefined),\n  },\n  element: jest.fn().mockImplementation(() => createMockElement()),\n  by: {\n    id: (id: string) => ({ id }),\n    text: (text: string) => ({ text }),\n    label: (label: string) => ({ label }),\n    type: (type: string) => ({ type }),\n  },\n  waitFor: jest.fn().mockImplementation(() => createMockWaitFor()),\n  expect: jest.fn().mockImplementation(() => createMockExpect()),\n};\n\ndescribe('用户流程端到端测试', () => {\n  beforeAll(async () => {\n    await mockE2E.device.launchApp();\n  });\n\n  afterAll(async () => {\n    await mockE2E.device.terminateApp();\n  });\n\n  describe('用户注册流程', () => {\n    it('应该完成完整的注册流程', async () => {\n      // 点击注册按钮\n      const registerButton = mockE2E.element(mockE2E.by.id('register-button'));\n      await registerButton.tap();\n\n      // 等待注册页面加载\n      await mockE2E.waitFor(mockE2E.element(mockE2E.by.id('register-screen')))\n        .toBeVisible()\n        .withTimeout(5000);\n\n      // 填写邮箱\n      const emailInput = mockE2E.element(mockE2E.by.id('email-input'));\n      await emailInput.typeText('test@example.com');\n\n      // 填写密码\n      const passwordInput = mockE2E.element(mockE2E.by.id('password-input'));\n      await passwordInput.typeText('password123');\n\n      // 填写确认密码\n      const confirmPasswordInput = mockE2E.element(mockE2E.by.id('confirm-password-input'));\n      await confirmPasswordInput.typeText('password123');\n\n      // 填写姓名\n      const nameInput = mockE2E.element(mockE2E.by.id('name-input'));\n      await nameInput.typeText('测试用户');\n\n      // 点击提交按钮\n      const submitButton = mockE2E.element(mockE2E.by.id('submit-button'));\n      await submitButton.tap();\n\n      // 验证注册成功\n      await mockE2E.waitFor(mockE2E.element(mockE2E.by.text('注册成功')))\n        .toBeVisible()\n        .withTimeout(10000);\n\n      expect(mockE2E.expect(mockE2E.element(mockE2E.by.text('注册成功'))).toBeVisible()).toBeTruthy();\n    });\n\n    it('应该处理注册错误', async () => {\n      // 使用已存在的邮箱注册\n      const emailInput = mockE2E.element(mockE2E.by.id('email-input'));\n      await emailInput.clearText();\n      await emailInput.typeText('existing@example.com');\n\n      const submitButton = mockE2E.element(mockE2E.by.id('submit-button'));\n      await submitButton.tap();\n\n      // 验证错误消息\n      await mockE2E.waitFor(mockE2E.element(mockE2E.by.text('邮箱已被注册')))\n        .toBeVisible()\n        .withTimeout(5000);\n\n      expect(mockE2E.expect(mockE2E.element(mockE2E.by.text('邮箱已被注册'))).toBeVisible()).toBeTruthy();\n    });\n  });\n\n  describe('用户登录流程', () => {\n    it('应该完成成功登录', async () => {\n      // 点击登录按钮\n      const loginButton = mockE2E.element(mockE2E.by.id('login-button'));\n      await loginButton.tap();\n\n      // 填写登录信息\n      const emailInput = mockE2E.element(mockE2E.by.id('email-input'));\n      await emailInput.typeText('test@example.com');\n\n      const passwordInput = mockE2E.element(mockE2E.by.id('password-input'));\n      await passwordInput.typeText('password123');\n\n      // 点击登录\n      const submitButton = mockE2E.element(mockE2E.by.id('login-submit-button'));\n      await submitButton.tap();\n\n      // 验证登录成功，进入主页面\n      await mockE2E.waitFor(mockE2E.element(mockE2E.by.id('main-screen')))\n        .toBeVisible()\n        .withTimeout(10000);\n\n      expect(mockE2E.expect(mockE2E.element(mockE2E.by.id('main-screen'))).toBeVisible()).toBeTruthy();\n    });\n\n    it('应该处理登录失败', async () => {\n      // 使用错误密码登录\n      const passwordInput = mockE2E.element(mockE2E.by.id('password-input'));\n      await passwordInput.clearText();\n      await passwordInput.typeText('wrongpassword');\n\n      const submitButton = mockE2E.element(mockE2E.by.id('login-submit-button'));\n      await submitButton.tap();\n\n      // 验证错误消息\n      await mockE2E.waitFor(mockE2E.element(mockE2E.by.text('用户名或密码错误')))\n        .toBeVisible()\n        .withTimeout(5000);\n\n      expect(mockE2E.expect(mockE2E.element(mockE2E.by.text('用户名或密码错误'))).toBeVisible()).toBeTruthy();\n    });\n  });\n\n  describe('智能体交互流程', () => {\n    beforeEach(async () => {\n      // 确保用户已登录\n      await mockE2E.waitFor(mockE2E.element(mockE2E.by.id('main-screen')))\n        .toBeVisible()\n        .withTimeout(5000);\n    });\n\n    it('应该能够与小艾智能体聊天', async () => {\n      // 导航到智能体页面\n      const agentTab = mockE2E.element(mockE2E.by.id('agent-tab'));\n      await agentTab.tap();\n\n      // 选择小艾智能体\n      const xiaoaiCard = mockE2E.element(mockE2E.by.id('xiaoai-card'));\n      await xiaoaiCard.tap();\n\n      // 等待聊天界面加载\n      await mockE2E.waitFor(mockE2E.element(mockE2E.by.id('chat-screen')))\n        .toBeVisible()\n        .withTimeout(5000);\n\n      // 发送消息\n      const messageInput = mockE2E.element(mockE2E.by.id('message-input'));\n      await messageInput.typeText('你好，我想了解一下健康管理');\n\n      const sendButton = mockE2E.element(mockE2E.by.id('send-button'));\n      await sendButton.tap();\n\n      // 验证消息发送成功\n      await mockE2E.waitFor(mockE2E.element(mockE2E.by.text('你好，我想了解一下健康管理')))\n        .toBeVisible()\n        .withTimeout(3000);\n\n      // 等待智能体回复\n      await mockE2E.waitFor(mockE2E.element(mockE2E.by.text('很高兴为您服务')))\n        .toBeVisible()\n        .withTimeout(10000);\n\n      expect(mockE2E.expect(mockE2E.element(mockE2E.by.text('很高兴为您服务'))).toBeVisible()).toBeTruthy();\n    });\n\n    it('应该能够查看智能体详情', async () => {\n      // 点击智能体详情按钮\n      const detailButton = mockE2E.element(mockE2E.by.id('agent-detail-button'));\n      await detailButton.tap();\n\n      // 验证详情页面\n      await mockE2E.waitFor(mockE2E.element(mockE2E.by.id('agent-detail-screen')))\n        .toBeVisible()\n        .withTimeout(5000);\n\n      expect(mockE2E.expect(mockE2E.element(mockE2E.by.text('小艾'))).toBeVisible()).toBeTruthy();\n      expect(mockE2E.expect(mockE2E.element(mockE2E.by.text('健康咨询专家'))).toBeVisible()).toBeTruthy();\n    });\n  });\n\n  describe('健康数据管理流程', () => {\n    it('应该能够添加健康数据', async () => {\n      // 导航到健康数据页面\n      const healthTab = mockE2E.element(mockE2E.by.id('health-tab'));\n      await healthTab.tap();\n\n      // 点击添加数据按钮\n      const addButton = mockE2E.element(mockE2E.by.id('add-health-data-button'));\n      await addButton.tap();\n\n      // 选择数据类型\n      const bloodPressureOption = mockE2E.element(mockE2E.by.id('blood-pressure-option'));\n      await bloodPressureOption.tap();\n\n      // 输入数据\n      const systolicInput = mockE2E.element(mockE2E.by.id('systolic-input'));\n      await systolicInput.typeText('120');\n\n      const diastolicInput = mockE2E.element(mockE2E.by.id('diastolic-input'));\n      await diastolicInput.typeText('80');\n\n      // 保存数据\n      const saveButton = mockE2E.element(mockE2E.by.id('save-button'));\n      await saveButton.tap();\n\n      // 验证数据保存成功\n      await mockE2E.waitFor(mockE2E.element(mockE2E.by.text('数据保存成功')))\n        .toBeVisible()\n        .withTimeout(5000);\n\n      expect(mockE2E.expect(mockE2E.element(mockE2E.by.text('数据保存成功'))).toBeVisible()).toBeTruthy();\n    });\n\n    it('应该能够查看健康趋势', async () => {\n      // 点击趋势分析按钮\n      const trendButton = mockE2E.element(mockE2E.by.id('trend-analysis-button'));\n      await trendButton.tap();\n\n      // 验证趋势图表显示\n      await mockE2E.waitFor(mockE2E.element(mockE2E.by.id('trend-chart')))\n        .toBeVisible()\n        .withTimeout(5000);\n\n      expect(mockE2E.expect(mockE2E.element(mockE2E.by.id('trend-chart'))).toBeVisible()).toBeTruthy();\n    });\n  });\n\n  describe('个人资料管理流程', () => {\n    it('应该能够更新个人资料', async () => {\n      // 导航到个人资料页面\n      const profileTab = mockE2E.element(mockE2E.by.id('profile-tab'));\n      await profileTab.tap();\n\n      // 点击编辑按钮\n      const editButton = mockE2E.element(mockE2E.by.id('edit-profile-button'));\n      await editButton.tap();\n\n      // 更新姓名\n      const nameInput = mockE2E.element(mockE2E.by.id('name-input'));\n      await nameInput.clearText();\n      await nameInput.typeText('更新的用户名');\n\n      // 保存更改\n      const saveButton = mockE2E.element(mockE2E.by.id('save-profile-button'));\n      await saveButton.tap();\n\n      // 验证更新成功\n      await mockE2E.waitFor(mockE2E.element(mockE2E.by.text('资料更新成功')))\n        .toBeVisible()\n        .withTimeout(5000);\n\n      expect(mockE2E.expect(mockE2E.element(mockE2E.by.text('更新的用户名'))).toBeVisible()).toBeTruthy();\n    });\n  });\n\n  describe('应用导航流程', () => {\n    it('应该能够在不同页面间导航', async () => {\n      // 测试底部导航栏\n      const tabs = ['home-tab', 'explore-tab', 'life-tab', 'suoke-tab', 'profile-tab'];\n\n      for (const tabId of tabs) {\n        const tab = mockE2E.element(mockE2E.by.id(tabId));\n        await tab.tap();\n\n        // 验证页面切换\n        await mockE2E.waitFor(mockE2E.element(mockE2E.by.id(`${tabId.replace('-tab', '')}-screen`)))\n          .toBeVisible()\n          .withTimeout(3000);\n\n        expect(mockE2E.expect(mockE2E.element(mockE2E.by.id(`${tabId.replace('-tab', '')}-screen`))).toBeVisible()).toBeTruthy();\n      }\n    });\n\n    it('应该能够处理返回导航', async () => {\n      // 进入详情页面\n      const detailButton = mockE2E.element(mockE2E.by.id('detail-button'));\n      await detailButton.tap();\n\n      // 点击返回按钮\n      const backButton = mockE2E.element(mockE2E.by.id('back-button'));\n      await backButton.tap();\n\n      // 验证返回到上一页面\n      await mockE2E.waitFor(mockE2E.element(mockE2E.by.id('main-screen')))\n        .toBeVisible()\n        .withTimeout(3000);\n\n      expect(mockE2E.expect(mockE2E.element(mockE2E.by.id('main-screen'))).toBeVisible()).toBeTruthy();\n    });\n  });\n}); "],"mappings":"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","ignoreList":[]}