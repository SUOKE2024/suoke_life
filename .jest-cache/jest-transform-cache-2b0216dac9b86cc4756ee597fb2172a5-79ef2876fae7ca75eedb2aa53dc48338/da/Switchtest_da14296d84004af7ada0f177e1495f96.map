{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_Switch","_jsxRuntime","describe","it","mockOnValueChange","jest","fn","_render","render","jsx","default","value","onValueChange","testID","getByTestId","expect","toBeTruthy","_render2","label","getByText","_render3","description","_render4","fireEvent","toHaveBeenCalledWith","_render5","disabled"],"sources":["Switch.test.tsx"],"sourcesContent":["/**\n * Switch组件单元测试\n */\n\nimport React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport Switch from '../../../components/ui/Switch';\n\ndescribe('Switch组件', () => {\n  it('应该正确渲染', () => {\n    const mockOnValueChange = jest.fn();\n    const { getByTestId } = render(\n      <Switch\n        value={false}\n        onValueChange={mockOnValueChange}\n        testID=\"test-switch\"\n      />\n    );\n\n    expect(getByTestId('test-switch')).toBeTruthy();\n  });\n\n  it('应该显示标签', () => {\n    const mockOnValueChange = jest.fn();\n    const { getByText } = render(\n      <Switch\n        value={false}\n        onValueChange={mockOnValueChange}\n        label=\"测试标签\"\n      />\n    );\n\n    expect(getByText('测试标签')).toBeTruthy();\n  });\n\n  it('应该显示描述', () => {\n    const mockOnValueChange = jest.fn();\n    const { getByText } = render(\n      <Switch\n        value={false}\n        onValueChange={mockOnValueChange}\n        description=\"测试描述\"\n      />\n    );\n\n    expect(getByText('测试描述')).toBeTruthy();\n  });\n\n  it('应该处理值变化', () => {\n    const mockOnValueChange = jest.fn();\n    const { getByTestId } = render(\n      <Switch\n        value={false}\n        onValueChange={mockOnValueChange}\n        testID=\"test-switch\"\n      />\n    );\n\n    fireEvent(getByTestId('test-switch'), 'valueChange', true);\n    expect(mockOnValueChange).toHaveBeenCalledWith(true);\n  });\n\n  it('应该正确渲染禁用状态', () => {\n    const mockOnValueChange = jest.fn();\n    const { getByTestId } = render(\n      <Switch\n        value={false}\n        onValueChange={mockOnValueChange}\n        disabled={true}\n        testID=\"test-switch\"\n      />\n    );\n\n    expect(getByTestId('test-switch')).toBeTruthy();\n  });\n}); "],"mappings":"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","ignoreList":[]}