{"version":3,"names":["_uiSlice","require","apiMiddleware","exports","store","next","action","type","endsWith","console","log","shouldShowSuccessNotification","message","getSuccessMessage","dispatch","showSuccessNotification","error","payload","errorMessage","showErrorNotification","actionType","successNotificationActions","some","pattern","includes","split","messageMap","_ref","Object","entries","_ref2","_slicedToArray2","default","_default"],"sources":["apiMiddleware.ts"],"sourcesContent":["import { Middleware } from '@reduxjs/toolkit';\nimport {\n  showErrorNotification,\n  showSuccessNotification,\n} from '../slices/uiSlice';\n\n// API中间件 - 统一处理API请求和响应\nexport const apiMiddleware: Middleware = (store) => (next) => (action: any) => {\n  // 检查是否是异步action\n  if (action.type && typeof action.type === 'string') {\n    const { type } = action;\n\n    // 处理pending状态\n    if (type.endsWith('/pending')) {\n      // 可以在这里添加全局loading逻辑\n      console.log('API请求开始:', type);\n    }\n\n    // 处理fulfilled状态\n    if (type.endsWith('/fulfilled')) {\n      console.log('API请求成功:', type);\n\n      // 对于某些操作显示成功通知\n      if (shouldShowSuccessNotification(type)) {\n        const message = getSuccessMessage(type);\n        if (message) {\n          store.dispatch(showSuccessNotification(message));\n        }\n      }\n    }\n\n    // 处理rejected状态\n    if (type.endsWith('/rejected')) {\n      console.error('API请求失败:', type, action.payload);\n\n      // 显示错误通知\n      const errorMessage = action.payload || '操作失败，请稍后重试';\n      store.dispatch(showErrorNotification(errorMessage));\n    }\n  }\n\n  return next(action);\n};\n\n// 判断是否应该显示成功通知\nfunction shouldShowSuccessNotification(actionType: string): boolean {\n  const successNotificationActions = [\n    'auth/login/fulfilled',\n    'auth/register/fulfilled',\n    'user/updateProfile/fulfilled',\n    'diagnosis/completeSession/fulfilled',\n    'health/syncData/fulfilled',\n  ];\n\n  return successNotificationActions.some((pattern) =>\n    actionType.includes(pattern.split('/')[0])\n  );\n}\n\n// 获取成功消息\nfunction getSuccessMessage(actionType: string): string | null {\n  const messageMap: Record<string, string> = {\n    'auth/login/fulfilled': '登录成功',\n    'auth/register/fulfilled': '注册成功',\n    'auth/logout/fulfilled': '退出登录成功',\n    'user/updateProfile/fulfilled': '资料更新成功',\n    'diagnosis/completeSession/fulfilled': '诊断完成',\n    'health/syncData/fulfilled': '健康数据同步成功',\n  };\n\n  for (const [pattern, message] of Object.entries(messageMap)) {\n    if (actionType.includes(pattern)) {\n      return message;\n    }\n  }\n\n  return null;\n}\n\nexport default apiMiddleware;\n"],"mappings":";;;;;;AACA,IAAAA,QAAA,GAAAC,OAAA;AAMO,IAAMC,aAAyB,GAAAC,OAAA,CAAAD,aAAA,GAAG,SAA5BA,aAAyBA,CAAIE,KAAK;EAAA,OAAK,UAACC,IAAI;IAAA,OAAK,UAACC,MAAW,EAAK;MAE7E,IAAIA,MAAM,CAACC,IAAI,IAAI,OAAOD,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;QAClD,IAAQA,IAAI,GAAKD,MAAM,CAAfC,IAAI;QAGZ,IAAIA,IAAI,CAACC,QAAQ,CAAC,UAAU,CAAC,EAAE;UAE7BC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,IAAI,CAAC;QAC/B;QAGA,IAAIA,IAAI,CAACC,QAAQ,CAAC,YAAY,CAAC,EAAE;UAC/BC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,IAAI,CAAC;UAG7B,IAAII,6BAA6B,CAACJ,IAAI,CAAC,EAAE;YACvC,IAAMK,OAAO,GAAGC,iBAAiB,CAACN,IAAI,CAAC;YACvC,IAAIK,OAAO,EAAE;cACXR,KAAK,CAACU,QAAQ,CAAC,IAAAC,gCAAuB,EAACH,OAAO,CAAC,CAAC;YAClD;UACF;QACF;QAGA,IAAIL,IAAI,CAACC,QAAQ,CAAC,WAAW,CAAC,EAAE;UAC9BC,OAAO,CAACO,KAAK,CAAC,UAAU,EAAET,IAAI,EAAED,MAAM,CAACW,OAAO,CAAC;UAG/C,IAAMC,YAAY,GAAGZ,MAAM,CAACW,OAAO,IAAI,YAAY;UACnDb,KAAK,CAACU,QAAQ,CAAC,IAAAK,8BAAqB,EAACD,YAAY,CAAC,CAAC;QACrD;MACF;MAEA,OAAOb,IAAI,CAACC,MAAM,CAAC;IACrB,CAAC;EAAA;AAAA;AAGD,SAASK,6BAA6BA,CAACS,UAAkB,EAAW;EAClE,IAAMC,0BAA0B,GAAG,CACjC,sBAAsB,EACtB,yBAAyB,EACzB,8BAA8B,EAC9B,qCAAqC,EACrC,2BAA2B,CAC5B;EAED,OAAOA,0BAA0B,CAACC,IAAI,CAAC,UAACC,OAAO;IAAA,OAC7CH,UAAU,CAACI,QAAQ,CAACD,OAAO,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAAA,CAC5C,CAAC;AACH;AAGA,SAASZ,iBAAiBA,CAACO,UAAkB,EAAiB;EAC5D,IAAMM,UAAkC,GAAG;IACzC,sBAAsB,EAAE,MAAM;IAC9B,yBAAyB,EAAE,MAAM;IACjC,uBAAuB,EAAE,QAAQ;IACjC,8BAA8B,EAAE,QAAQ;IACxC,qCAAqC,EAAE,MAAM;IAC7C,2BAA2B,EAAE;EAC/B,CAAC;EAED,SAAAC,IAAA,IAAiCC,MAAM,CAACC,OAAO,CAACH,UAAU,CAAC,EAAE;IAAA,IAAAI,KAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAL,IAAA;IAAA,IAAjDJ,OAAO,GAAAO,KAAA;IAAA,IAAElB,OAAO,GAAAkB,KAAA;IAC1B,IAAIV,UAAU,CAACI,QAAQ,CAACD,OAAO,CAAC,EAAE;MAChC,OAAOX,OAAO;IAChB;EACF;EAEA,OAAO,IAAI;AACb;AAAC,IAAAqB,QAAA,GAAA9B,OAAA,CAAA6B,OAAA,GAEc9B,aAAa","ignoreList":[]}