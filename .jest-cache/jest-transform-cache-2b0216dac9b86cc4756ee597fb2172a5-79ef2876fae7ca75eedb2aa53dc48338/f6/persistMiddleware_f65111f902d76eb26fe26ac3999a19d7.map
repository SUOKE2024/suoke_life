{"version":3,"names":["_asyncStorage","_interopRequireDefault","require","_config","cov_46njg874","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","PERSIST_ACTIONS","persistMiddleware","exports","store","next","action","result","includes","state","getState","persistState","_x","_x2","_persistState","apply","arguments","_asyncToGenerator2","default","actionType","_state$auth$user","auth","token","AsyncStorage","setItem","STORAGE_CONFIG","KEYS","AUTH_TOKEN","refreshToken","REFRESH_TOKEN","user","id","USER_ID","multiRemove","THEME","ui","theme","LANGUAGE","language","profile","JSON","stringify","error","console","warn","restorePersistedState","_restorePersistedState","_ref","multiGet","_ref2","_slicedToArray2","authToken","userId","persistedState","notifications","loading","isAuthenticated","clearPersistedState","_clearPersistedState","keys","Object","values","_default"],"sources":["persistMiddleware.ts"],"sourcesContent":["import { Middleware } from '@reduxjs/toolkit';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { STORAGE_CONFIG } from '../../constants/config';\n\n// 需要持久化的action类型\nconst PERSIST_ACTIONS = [\n  'auth/login/fulfilled',\n  'auth/logout/fulfilled',\n  'ui/setTheme',\n  'ui/setLanguage',\n  'user/updateProfile/fulfilled',\n];\n\n// 持久化中间件\nexport const persistMiddleware: Middleware =\n  (store) => (next) => (action: any) => {\n    const result = next(action);\n\n    // 检查是否需要持久化\n    if (action.type && PERSIST_ACTIONS.includes(action.type)) {\n      const state = store.getState();\n      persistState(action.type, state);\n    }\n\n    return result;\n  };\n\n// 持久化状态\nasync function persistState(actionType: string, state: any) {\n  try {\n    switch (actionType) {\n      case 'auth/login/fulfilled':\n        // 持久化认证信息\n        if (state.auth.token) {\n          await AsyncStorage.setItem(\n            STORAGE_CONFIG.KEYS.AUTH_TOKEN,\n            state.auth.token\n          );\n        }\n        if (state.auth.refreshToken) {\n          await AsyncStorage.setItem(\n            STORAGE_CONFIG.KEYS.REFRESH_TOKEN,\n            state.auth.refreshToken\n          );\n        }\n        if (state.auth.user?.id) {\n          await AsyncStorage.setItem(\n            STORAGE_CONFIG.KEYS.USER_ID,\n            state.auth.user.id\n          );\n        }\n        break;\n\n      case 'auth/logout/fulfilled':\n        // 清除认证信息\n        await AsyncStorage.multiRemove([\n          STORAGE_CONFIG.KEYS.AUTH_TOKEN,\n          STORAGE_CONFIG.KEYS.REFRESH_TOKEN,\n          STORAGE_CONFIG.KEYS.USER_ID,\n        ]);\n        break;\n\n      case 'ui/setTheme':\n        // 持久化主题设置\n        await AsyncStorage.setItem(STORAGE_CONFIG.KEYS.THEME, state.ui.theme);\n        break;\n\n      case 'ui/setLanguage':\n        // 持久化语言设置\n        await AsyncStorage.setItem(\n          STORAGE_CONFIG.KEYS.LANGUAGE,\n          state.ui.language\n        );\n        break;\n\n      case 'user/updateProfile/fulfilled':\n        // 持久化用户资料（缓存）\n        if (state.user.profile) {\n          await AsyncStorage.setItem(\n            `${STORAGE_CONFIG.KEYS.USER_ID}_profile`,\n            JSON.stringify(state.user.profile)\n          );\n        }\n        break;\n\n      default:\n        break;\n    }\n  } catch (error) {\n    console.warn('持久化状态失败:', error);\n  }\n}\n\n// 恢复持久化状态\nexport async function restorePersistedState() {\n  try {\n    const [theme, language, authToken, refreshToken, userId] =\n      await AsyncStorage.multiGet([\n        STORAGE_CONFIG.KEYS.THEME,\n        STORAGE_CONFIG.KEYS.LANGUAGE,\n        STORAGE_CONFIG.KEYS.AUTH_TOKEN,\n        STORAGE_CONFIG.KEYS.REFRESH_TOKEN,\n        STORAGE_CONFIG.KEYS.USER_ID,\n      ]);\n\n    const persistedState: any = {};\n\n    // 恢复UI状态\n    if (theme[1]) {\n      persistedState.ui = {\n        theme: theme[1] as 'light' | 'dark',\n        language: (language[1] as 'zh' | 'en') || 'zh',\n        notifications: [],\n        loading: false,\n      };\n    }\n\n    // 恢复认证状态\n    if (authToken[1] && userId[1]) {\n      persistedState.auth = {\n        isAuthenticated: true,\n        token: authToken[1],\n        refreshToken: refreshToken[1],\n        loading: false,\n        error: undefined,\n      };\n    }\n\n    return persistedState;\n  } catch (error) {\n    console.warn('恢复持久化状态失败:', error);\n    return {};\n  }\n}\n\n// 清除所有持久化数据\nexport async function clearPersistedState() {\n  try {\n    const keys = Object.values(STORAGE_CONFIG.KEYS);\n    await AsyncStorage.multiRemove(keys);\n  } catch (error) {\n    console.warn('清除持久化状态失败:', error);\n  }\n}\n\nexport default persistMiddleware;\n"],"mappings":";;;;;;;;;AACA,IAAAA,aAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAAwD,SAAAE,aAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAA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","ignoreList":[]}