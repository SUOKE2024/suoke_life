60c86cbecd19828b0b62b0aba7ad8863
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HotTopics = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _Icon = _interopRequireDefault(require("../../components/common/Icon"));
var _theme = require("../../constants/theme");
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function cov_1n7c1rteyu() {
  var path = "/Users/songxu/Developer/suoke_life/src/screens/components/HotTopics.tsx";
  var hash = "104cd0f82825627606ab22b419010ef7722934a0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/songxu/Developer/suoke_life/src/screens/components/HotTopics.tsx",
    statementMap: {
      "0": {
        start: {
          line: 19,
          column: 25
        },
        end: {
          line: 85,
          column: 2
        }
      },
      "1": {
        start: {
          line: 24,
          column: 27
        },
        end: {
          line: 26,
          column: 3
        }
      },
      "2": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 24
        }
      },
      "3": {
        start: {
          line: 28,
          column: 22
        },
        end: {
          line: 63,
          column: 3
        }
      },
      "4": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 62,
          column: 23
        }
      },
      "5": {
        start: {
          line: 36,
          column: 21
        },
        end: {
          line: 36,
          column: 44
        }
      },
      "6": {
        start: {
          line: 65,
          column: 2
        },
        end: {
          line: 84,
          column: 4
        }
      },
      "7": {
        start: {
          line: 87,
          column: 0
        },
        end: {
          line: 87,
          column: 36
        }
      },
      "8": {
        start: {
          line: 89,
          column: 15
        },
        end: {
          line: 180,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 46
          },
          end: {
            line: 19,
            column: 47
          }
        },
        loc: {
          start: {
            line: 23,
            column: 6
          },
          end: {
            line: 85,
            column: 1
          }
        },
        line: 23
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 27
          },
          end: {
            line: 24,
            column: 28
          }
        },
        loc: {
          start: {
            line: 24,
            column: 48
          },
          end: {
            line: 26,
            column: 3
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 28,
            column: 22
          },
          end: {
            line: 28,
            column: 23
          }
        },
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 62,
            column: 23
          }
        },
        line: 29
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 36,
            column: 15
          },
          end: {
            line: 36,
            column: 16
          }
        },
        loc: {
          start: {
            line: 36,
            column: 21
          },
          end: {
            line: 36,
            column: 44
          }
        },
        line: 36
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 19
          }
        }, {
          start: {
            line: 33,
            column: 23
          },
          end: {
            line: 33,
            column: 40
          }
        }],
        line: 33
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 22
          }
        }, {
          start: {
            line: 34,
            column: 26
          },
          end: {
            line: 34,
            column: 46
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 39,
            column: 7
          },
          end: {
            line: 43,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 7
          },
          end: {
            line: 39,
            column: 21
          }
        }, {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 42,
            column: 15
          }
        }],
        line: 39
      },
      "3": {
        loc: {
          start: {
            line: 56,
            column: 13
          },
          end: {
            line: 56,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 34
          },
          end: {
            line: 56,
            column: 71
          }
        }, {
          start: {
            line: 56,
            column: 74
          },
          end: {
            line: 56,
            column: 85
          }
        }],
        line: 56
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "104cd0f82825627606ab22b419010ef7722934a0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1n7c1rteyu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1n7c1rteyu();
var HotTopics = exports.HotTopics = (cov_1n7c1rteyu().s[0]++, (0, _react.memo)(function (_ref) {
  var topics = _ref.topics,
    onTopicPress = _ref.onTopicPress,
    style = _ref.style;
  cov_1n7c1rteyu().f[0]++;
  cov_1n7c1rteyu().s[1]++;
  var handleTopicPress = function handleTopicPress(topic) {
    cov_1n7c1rteyu().f[1]++;
    cov_1n7c1rteyu().s[2]++;
    onTopicPress(topic);
  };
  cov_1n7c1rteyu().s[3]++;
  var renderTopic = function renderTopic(topic, index) {
    cov_1n7c1rteyu().f[2]++;
    cov_1n7c1rteyu().s[4]++;
    return (0, _jsxRuntime.jsxs)(_reactNative.TouchableOpacity, {
      style: [styles.topicCard, (cov_1n7c1rteyu().b[0][0]++, index === 0) && (cov_1n7c1rteyu().b[0][1]++, styles.firstTopic), (cov_1n7c1rteyu().b[1][0]++, topic.trending) && (cov_1n7c1rteyu().b[1][1]++, styles.trendingTopic)],
      onPress: function onPress() {
        cov_1n7c1rteyu().f[3]++;
        cov_1n7c1rteyu().s[5]++;
        return handleTopicPress(topic);
      },
      activeOpacity: 0.8,
      children: [(cov_1n7c1rteyu().b[2][0]++, topic.trending) && (cov_1n7c1rteyu().b[2][1]++, (0, _jsxRuntime.jsx)(_reactNative.View, {
        style: styles.trendingBadge,
        children: (0, _jsxRuntime.jsx)(_Icon.default, {
          name: "trending-up",
          size: 12,
          color: _theme.colors.white
        })
      })), (0, _jsxRuntime.jsx)(_reactNative.View, {
        style: styles.topicIcon,
        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.iconText,
          children: topic.icon
        })
      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: styles.topicInfo,
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.topicTitle,
          numberOfLines: 1,
          children: topic.title
        }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
          style: styles.topicStats,
          children: [(0, _jsxRuntime.jsx)(_Icon.default, {
            name: "account-group",
            size: 12,
            color: _theme.colors.textSecondary
          }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
            style: styles.topicCount,
            children: topic.count > 1000 ? (cov_1n7c1rteyu().b[3][0]++, `${(topic.count / 1000).toFixed(1)}k`) : (cov_1n7c1rteyu().b[3][1]++, topic.count)
          })]
        })]
      }), (0, _jsxRuntime.jsx)(_Icon.default, {
        name: "chevron-right",
        size: 16,
        color: _theme.colors.textSecondary
      })]
    }, topic.id);
  };
  cov_1n7c1rteyu().s[6]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: [styles.container, style],
    children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.header,
      children: [(0, _jsxRuntime.jsx)(_Icon.default, {
        name: "fire",
        size: 20,
        color: _theme.colors.primary
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.headerTitle,
        children: "\u70ED\u95E8\u8BDD\u9898"
      }), (0, _jsxRuntime.jsxs)(_reactNative.TouchableOpacity, {
        style: styles.moreButton,
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.moreText,
          children: "\u66F4\u591A"
        }), (0, _jsxRuntime.jsx)(_Icon.default, {
          name: "chevron-right",
          size: 16,
          color: _theme.colors.primary
        })]
      })]
    }), (0, _jsxRuntime.jsx)(_reactNative.ScrollView, {
      horizontal: true,
      showsHorizontalScrollIndicator: false,
      contentContainerStyle: styles.scrollContent,
      children: topics.map(renderTopic)
    })]
  });
}));
cov_1n7c1rteyu().s[7]++;
HotTopics.displayName = 'HotTopics';
var styles = (cov_1n7c1rteyu().s[8]++, _reactNative.StyleSheet.create({
  container: {
    backgroundColor: _theme.colors.background,
    paddingVertical: _theme.spacing.md
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingHorizontal: _theme.spacing.md,
    marginBottom: _theme.spacing.md
  },
  headerTitle: {
    fontSize: _theme.fonts.size.lg,
    fontWeight: 'bold',
    color: _theme.colors.text,
    marginLeft: _theme.spacing.sm,
    flex: 1
  },
  moreButton: {
    flexDirection: 'row',
    alignItems: 'center'
  },
  moreText: {
    fontSize: _theme.fonts.size.sm,
    color: _theme.colors.primary,
    marginRight: _theme.spacing.xs
  },
  scrollContent: {
    paddingHorizontal: _theme.spacing.md
  },
  topicCard: Object.assign({
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: _theme.colors.surface,
    borderRadius: _theme.borderRadius.lg,
    padding: _theme.spacing.md,
    marginRight: _theme.spacing.md,
    minWidth: 200,
    borderWidth: 1,
    borderColor: _theme.colors.border
  }, _theme.shadows.sm),
  firstTopic: {
    backgroundColor: _theme.colors.primary + '10',
    borderColor: _theme.colors.primary + '30'
  },
  trendingTopic: {
    position: 'relative'
  },
  trendingBadge: {
    position: 'absolute',
    top: -_theme.spacing.xs,
    right: -_theme.spacing.xs,
    backgroundColor: _theme.colors.error,
    borderRadius: 10,
    width: 20,
    height: 20,
    justifyContent: 'center',
    alignItems: 'center',
    zIndex: 1
  },
  topicIcon: {
    width: 40,
    height: 40,
    borderRadius: 20,
    backgroundColor: _theme.colors.background,
    justifyContent: 'center',
    alignItems: 'center',
    marginRight: _theme.spacing.md
  },
  iconText: {
    fontSize: 20
  },
  topicInfo: {
    flex: 1
  },
  topicTitle: {
    fontSize: _theme.fonts.size.md,
    fontWeight: '600',
    color: _theme.colors.text,
    marginBottom: _theme.spacing.xs
  },
  topicStats: {
    flexDirection: 'row',
    alignItems: 'center'
  },
  topicCount: {
    fontSize: _theme.fonts.size.sm,
    color: _theme.colors.textSecondary,
    marginLeft: _theme.spacing.xs
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfcmVhY3ROYXRpdmUiLCJfSWNvbiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfdGhlbWUiLCJfanN4UnVudGltZSIsImUiLCJ0IiwiV2Vha01hcCIsInIiLCJuIiwiX19lc01vZHVsZSIsIm8iLCJpIiwiZiIsIl9fcHJvdG9fXyIsImRlZmF1bHQiLCJoYXMiLCJnZXQiLCJzZXQiLCJfdCIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiY292XzFuN2MxcnRleXUiLCJwYXRoIiwiaGFzaCIsImdsb2JhbCIsIkZ1bmN0aW9uIiwiZ2N2IiwiY292ZXJhZ2VEYXRhIiwic3RhdGVtZW50TWFwIiwic3RhcnQiLCJsaW5lIiwiY29sdW1uIiwiZW5kIiwiZm5NYXAiLCJuYW1lIiwiZGVjbCIsImxvYyIsImJyYW5jaE1hcCIsInR5cGUiLCJsb2NhdGlvbnMiLCJzIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJIb3RUb3BpY3MiLCJleHBvcnRzIiwibWVtbyIsIl9yZWYiLCJ0b3BpY3MiLCJvblRvcGljUHJlc3MiLCJzdHlsZSIsImhhbmRsZVRvcGljUHJlc3MiLCJ0b3BpYyIsInJlbmRlclRvcGljIiwiaW5kZXgiLCJqc3hzIiwiVG91Y2hhYmxlT3BhY2l0eSIsInN0eWxlcyIsInRvcGljQ2FyZCIsImZpcnN0VG9waWMiLCJ0cmVuZGluZyIsInRyZW5kaW5nVG9waWMiLCJvblByZXNzIiwiYWN0aXZlT3BhY2l0eSIsImNoaWxkcmVuIiwianN4IiwiVmlldyIsInRyZW5kaW5nQmFkZ2UiLCJzaXplIiwiY29sb3IiLCJjb2xvcnMiLCJ3aGl0ZSIsInRvcGljSWNvbiIsIlRleHQiLCJpY29uVGV4dCIsImljb24iLCJ0b3BpY0luZm8iLCJ0b3BpY1RpdGxlIiwibnVtYmVyT2ZMaW5lcyIsInRpdGxlIiwidG9waWNTdGF0cyIsInRleHRTZWNvbmRhcnkiLCJ0b3BpY0NvdW50IiwiY291bnQiLCJ0b0ZpeGVkIiwiaWQiLCJjb250YWluZXIiLCJoZWFkZXIiLCJwcmltYXJ5IiwiaGVhZGVyVGl0bGUiLCJtb3JlQnV0dG9uIiwibW9yZVRleHQiLCJTY3JvbGxWaWV3IiwiaG9yaXpvbnRhbCIsInNob3dzSG9yaXpvbnRhbFNjcm9sbEluZGljYXRvciIsImNvbnRlbnRDb250YWluZXJTdHlsZSIsInNjcm9sbENvbnRlbnQiLCJtYXAiLCJkaXNwbGF5TmFtZSIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJiYWNrZ3JvdW5kIiwicGFkZGluZ1ZlcnRpY2FsIiwic3BhY2luZyIsIm1kIiwiZmxleERpcmVjdGlvbiIsImFsaWduSXRlbXMiLCJwYWRkaW5nSG9yaXpvbnRhbCIsIm1hcmdpbkJvdHRvbSIsImZvbnRTaXplIiwiZm9udHMiLCJsZyIsImZvbnRXZWlnaHQiLCJ0ZXh0IiwibWFyZ2luTGVmdCIsInNtIiwiZmxleCIsIm1hcmdpblJpZ2h0IiwieHMiLCJhc3NpZ24iLCJzdXJmYWNlIiwiYm9yZGVyUmFkaXVzIiwicGFkZGluZyIsIm1pbldpZHRoIiwiYm9yZGVyV2lkdGgiLCJib3JkZXJDb2xvciIsImJvcmRlciIsInNoYWRvd3MiLCJwb3NpdGlvbiIsInRvcCIsInJpZ2h0IiwiZXJyb3IiLCJ3aWR0aCIsImhlaWdodCIsImp1c3RpZnlDb250ZW50IiwiekluZGV4Il0sInNvdXJjZXMiOlsiSG90VG9waWNzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgbWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7XG4gIFZpZXcsXG4gIFRleHQsXG4gIFN0eWxlU2hlZXQsXG4gIFNjcm9sbFZpZXcsXG4gIFRvdWNoYWJsZU9wYWNpdHksXG59IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgeyBIb3RUb3BpYyB9IGZyb20gJy4uLy4uL3R5cGVzL2V4cGxvcmUnO1xuaW1wb3J0IEljb24gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9jb21tb24vSWNvbic7XG5pbXBvcnQgeyBjb2xvcnMsIHNwYWNpbmcsIGZvbnRzLCBib3JkZXJSYWRpdXMsIHNoYWRvd3MgfSBmcm9tICcuLi8uLi9jb25zdGFudHMvdGhlbWUnO1xuXG5pbnRlcmZhY2UgSG90VG9waWNzUHJvcHMge1xuICB0b3BpY3M6IEhvdFRvcGljW107XG4gIG9uVG9waWNQcmVzczogKHRvcGljOiBIb3RUb3BpYykgPT4gdm9pZDtcbiAgc3R5bGU/OiBhbnk7XG59XG5cbmV4cG9ydCBjb25zdCBIb3RUb3BpY3MgPSBtZW1vPEhvdFRvcGljc1Byb3BzPigoe1xuICB0b3BpY3MsXG4gIG9uVG9waWNQcmVzcyxcbiAgc3R5bGUsXG59KSA9PiB7XG4gIGNvbnN0IGhhbmRsZVRvcGljUHJlc3MgPSAodG9waWM6IEhvdFRvcGljKSA9PiB7XG4gICAgb25Ub3BpY1ByZXNzKHRvcGljKTtcbiAgfTtcblxuICBjb25zdCByZW5kZXJUb3BpYyA9ICh0b3BpYzogSG90VG9waWMsIGluZGV4OiBudW1iZXIpID0+IChcbiAgICA8VG91Y2hhYmxlT3BhY2l0eVxuICAgICAga2V5PXt0b3BpYy5pZH1cbiAgICAgIHN0eWxlPXtbXG4gICAgICAgIHN0eWxlcy50b3BpY0NhcmQsXG4gICAgICAgIGluZGV4ID09PSAwICYmIHN0eWxlcy5maXJzdFRvcGljLFxuICAgICAgICB0b3BpYy50cmVuZGluZyAmJiBzdHlsZXMudHJlbmRpbmdUb3BpYyxcbiAgICAgIF19XG4gICAgICBvblByZXNzPXsoKSA9PiBoYW5kbGVUb3BpY1ByZXNzKHRvcGljKX1cbiAgICAgIGFjdGl2ZU9wYWNpdHk9ezAuOH1cbiAgICA+XG4gICAgICB7dG9waWMudHJlbmRpbmcgJiYgKFxuICAgICAgICA8VmlldyBzdHlsZT17c3R5bGVzLnRyZW5kaW5nQmFkZ2V9PlxuICAgICAgICAgIDxJY29uIG5hbWU9XCJ0cmVuZGluZy11cFwiIHNpemU9ezEyfSBjb2xvcj17Y29sb3JzLndoaXRlfSAvPlxuICAgICAgICA8L1ZpZXc+XG4gICAgICApfVxuICAgICAgXG4gICAgICA8VmlldyBzdHlsZT17c3R5bGVzLnRvcGljSWNvbn0+XG4gICAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMuaWNvblRleHR9Pnt0b3BpYy5pY29ufTwvVGV4dD5cbiAgICAgIDwvVmlldz5cbiAgICAgIFxuICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy50b3BpY0luZm99PlxuICAgICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLnRvcGljVGl0bGV9IG51bWJlck9mTGluZXM9ezF9PlxuICAgICAgICAgIHt0b3BpYy50aXRsZX1cbiAgICAgICAgPC9UZXh0PlxuICAgICAgICA8VmlldyBzdHlsZT17c3R5bGVzLnRvcGljU3RhdHN9PlxuICAgICAgICAgIDxJY29uIG5hbWU9XCJhY2NvdW50LWdyb3VwXCIgc2l6ZT17MTJ9IGNvbG9yPXtjb2xvcnMudGV4dFNlY29uZGFyeX0gLz5cbiAgICAgICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLnRvcGljQ291bnR9PlxuICAgICAgICAgICAge3RvcGljLmNvdW50ID4gMTAwMCA/IGAkeyh0b3BpYy5jb3VudCAvIDEwMDApLnRvRml4ZWQoMSl9a2AgOiB0b3BpYy5jb3VudH1cbiAgICAgICAgICA8L1RleHQ+XG4gICAgICAgIDwvVmlldz5cbiAgICAgIDwvVmlldz5cbiAgICAgIFxuICAgICAgPEljb24gbmFtZT1cImNoZXZyb24tcmlnaHRcIiBzaXplPXsxNn0gY29sb3I9e2NvbG9ycy50ZXh0U2Vjb25kYXJ5fSAvPlxuICAgIDwvVG91Y2hhYmxlT3BhY2l0eT5cbiAgKTtcblxuICByZXR1cm4gKFxuICAgIDxWaWV3IHN0eWxlPXtbc3R5bGVzLmNvbnRhaW5lciwgc3R5bGVdfT5cbiAgICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMuaGVhZGVyfT5cbiAgICAgICAgPEljb24gbmFtZT1cImZpcmVcIiBzaXplPXsyMH0gY29sb3I9e2NvbG9ycy5wcmltYXJ5fSAvPlxuICAgICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLmhlYWRlclRpdGxlfT7ng63pl6jor53popg8L1RleHQ+XG4gICAgICAgIDxUb3VjaGFibGVPcGFjaXR5IHN0eWxlPXtzdHlsZXMubW9yZUJ1dHRvbn0+XG4gICAgICAgICAgPFRleHQgc3R5bGU9e3N0eWxlcy5tb3JlVGV4dH0+5pu05aSaPC9UZXh0PlxuICAgICAgICAgIDxJY29uIG5hbWU9XCJjaGV2cm9uLXJpZ2h0XCIgc2l6ZT17MTZ9IGNvbG9yPXtjb2xvcnMucHJpbWFyeX0gLz5cbiAgICAgICAgPC9Ub3VjaGFibGVPcGFjaXR5PlxuICAgICAgPC9WaWV3PlxuICAgICAgXG4gICAgICA8U2Nyb2xsVmlld1xuICAgICAgICBob3Jpem9udGFsXG4gICAgICAgIHNob3dzSG9yaXpvbnRhbFNjcm9sbEluZGljYXRvcj17ZmFsc2V9XG4gICAgICAgIGNvbnRlbnRDb250YWluZXJTdHlsZT17c3R5bGVzLnNjcm9sbENvbnRlbnR9XG4gICAgICA+XG4gICAgICAgIHt0b3BpY3MubWFwKHJlbmRlclRvcGljKX1cbiAgICAgIDwvU2Nyb2xsVmlldz5cbiAgICA8L1ZpZXc+XG4gICk7XG59KTtcblxuSG90VG9waWNzLmRpc3BsYXlOYW1lID0gJ0hvdFRvcGljcyc7XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgY29udGFpbmVyOiB7XG4gICAgYmFja2dyb3VuZENvbG9yOiBjb2xvcnMuYmFja2dyb3VuZCxcbiAgICBwYWRkaW5nVmVydGljYWw6IHNwYWNpbmcubWQsXG4gIH0sXG4gIGhlYWRlcjoge1xuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIHBhZGRpbmdIb3Jpem9udGFsOiBzcGFjaW5nLm1kLFxuICAgIG1hcmdpbkJvdHRvbTogc3BhY2luZy5tZCxcbiAgfSxcbiAgaGVhZGVyVGl0bGU6IHtcbiAgICBmb250U2l6ZTogZm9udHMuc2l6ZS5sZyxcbiAgICBmb250V2VpZ2h0OiAnYm9sZCcsXG4gICAgY29sb3I6IGNvbG9ycy50ZXh0LFxuICAgIG1hcmdpbkxlZnQ6IHNwYWNpbmcuc20sXG4gICAgZmxleDogMSxcbiAgfSxcbiAgbW9yZUJ1dHRvbjoge1xuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICB9LFxuICBtb3JlVGV4dDoge1xuICAgIGZvbnRTaXplOiBmb250cy5zaXplLnNtLFxuICAgIGNvbG9yOiBjb2xvcnMucHJpbWFyeSxcbiAgICBtYXJnaW5SaWdodDogc3BhY2luZy54cyxcbiAgfSxcbiAgc2Nyb2xsQ29udGVudDoge1xuICAgIHBhZGRpbmdIb3Jpem9udGFsOiBzcGFjaW5nLm1kLFxuICB9LFxuICB0b3BpY0NhcmQ6IHtcbiAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9ycy5zdXJmYWNlLFxuICAgIGJvcmRlclJhZGl1czogYm9yZGVyUmFkaXVzLmxnLFxuICAgIHBhZGRpbmc6IHNwYWNpbmcubWQsXG4gICAgbWFyZ2luUmlnaHQ6IHNwYWNpbmcubWQsXG4gICAgbWluV2lkdGg6IDIwMCxcbiAgICBib3JkZXJXaWR0aDogMSxcbiAgICBib3JkZXJDb2xvcjogY29sb3JzLmJvcmRlcixcbiAgICAuLi5zaGFkb3dzLnNtLFxuICB9LFxuICBmaXJzdFRvcGljOiB7XG4gICAgYmFja2dyb3VuZENvbG9yOiBjb2xvcnMucHJpbWFyeSArICcxMCcsXG4gICAgYm9yZGVyQ29sb3I6IGNvbG9ycy5wcmltYXJ5ICsgJzMwJyxcbiAgfSxcbiAgdHJlbmRpbmdUb3BpYzoge1xuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICB9LFxuICB0cmVuZGluZ0JhZGdlOiB7XG4gICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgdG9wOiAtc3BhY2luZy54cyxcbiAgICByaWdodDogLXNwYWNpbmcueHMsXG4gICAgYmFja2dyb3VuZENvbG9yOiBjb2xvcnMuZXJyb3IsXG4gICAgYm9yZGVyUmFkaXVzOiAxMCxcbiAgICB3aWR0aDogMjAsXG4gICAgaGVpZ2h0OiAyMCxcbiAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgekluZGV4OiAxLFxuICB9LFxuICB0b3BpY0ljb246IHtcbiAgICB3aWR0aDogNDAsXG4gICAgaGVpZ2h0OiA0MCxcbiAgICBib3JkZXJSYWRpdXM6IDIwLFxuICAgIGJhY2tncm91bmRDb2xvcjogY29sb3JzLmJhY2tncm91bmQsXG4gICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIG1hcmdpblJpZ2h0OiBzcGFjaW5nLm1kLFxuICB9LFxuICBpY29uVGV4dDoge1xuICAgIGZvbnRTaXplOiAyMCxcbiAgfSxcbiAgdG9waWNJbmZvOiB7XG4gICAgZmxleDogMSxcbiAgfSxcbiAgdG9waWNUaXRsZToge1xuICAgIGZvbnRTaXplOiBmb250cy5zaXplLm1kLFxuICAgIGZvbnRXZWlnaHQ6ICc2MDAnLFxuICAgIGNvbG9yOiBjb2xvcnMudGV4dCxcbiAgICBtYXJnaW5Cb3R0b206IHNwYWNpbmcueHMsXG4gIH0sXG4gIHRvcGljU3RhdHM6IHtcbiAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgfSxcbiAgdG9waWNDb3VudDoge1xuICAgIGZvbnRTaXplOiBmb250cy5zaXplLnNtLFxuICAgIGNvbG9yOiBjb2xvcnMudGV4dFNlY29uZGFyeSxcbiAgICBtYXJnaW5MZWZ0OiBzcGFjaW5nLnhzLFxuICB9LFxufSk7ICJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHVCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxZQUFBLEdBQUFELE9BQUE7QUFRQSxJQUFBRSxLQUFBLEdBQUFDLHNCQUFBLENBQUFILE9BQUE7QUFDQSxJQUFBSSxNQUFBLEdBQUFKLE9BQUE7QUFBc0YsSUFBQUssV0FBQSxHQUFBTCxPQUFBO0FBQUEsU0FBQUQsd0JBQUFPLENBQUEsRUFBQUMsQ0FBQSw2QkFBQUMsT0FBQSxNQUFBQyxDQUFBLE9BQUFELE9BQUEsSUFBQUUsQ0FBQSxPQUFBRixPQUFBLFlBQUFULHVCQUFBLFlBQUFBLHdCQUFBTyxDQUFBLEVBQUFDLENBQUEsU0FBQUEsQ0FBQSxJQUFBRCxDQUFBLElBQUFBLENBQUEsQ0FBQUssVUFBQSxTQUFBTCxDQUFBLE1BQUFNLENBQUEsRUFBQUMsQ0FBQSxFQUFBQyxDQUFBLEtBQUFDLFNBQUEsUUFBQUMsT0FBQSxFQUFBVixDQUFBLGlCQUFBQSxDQUFBLHVCQUFBQSxDQUFBLHlCQUFBQSxDQUFBLFNBQUFRLENBQUEsTUFBQUYsQ0FBQSxHQUFBTCxDQUFBLEdBQUFHLENBQUEsR0FBQUQsQ0FBQSxRQUFBRyxDQUFBLENBQUFLLEdBQUEsQ0FBQVgsQ0FBQSxVQUFBTSxDQUFBLENBQUFNLEdBQUEsQ0FBQVosQ0FBQSxHQUFBTSxDQUFBLENBQUFPLEdBQUEsQ0FBQWIsQ0FBQSxFQUFBUSxDQUFBLGNBQUFNLEVBQUEsSUFBQWQsQ0FBQSxnQkFBQWMsRUFBQSxPQUFBQyxjQUFBLENBQUFDLElBQUEsQ0FBQWhCLENBQUEsRUFBQWMsRUFBQSxPQUFBUCxDQUFBLElBQUFELENBQUEsR0FBQVcsTUFBQSxDQUFBQyxjQUFBLEtBQUFELE1BQUEsQ0FBQUUsd0JBQUEsQ0FBQW5CLENBQUEsRUFBQWMsRUFBQSxPQUFBUCxDQUFBLENBQUFLLEdBQUEsSUFBQUwsQ0FBQSxDQUFBTSxHQUFBLElBQUFQLENBQUEsQ0FBQUUsQ0FBQSxFQUFBTSxFQUFBLEVBQUFQLENBQUEsSUFBQUMsQ0FBQSxDQUFBTSxFQUFBLElBQUFkLENBQUEsQ0FBQWMsRUFBQSxXQUFBTixDQUFBLEtBQUFSLENBQUEsRUFBQUMsQ0FBQTtBQUFBLFNBQUFtQixlQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtNQUFBO1FBQUFELEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZ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