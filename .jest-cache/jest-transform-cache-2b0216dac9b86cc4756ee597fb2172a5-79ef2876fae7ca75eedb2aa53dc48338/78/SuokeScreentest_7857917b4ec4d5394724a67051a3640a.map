{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactRedux","_toolkit","_reactNative2","_jsxRuntime","MockSuokeScreen","_React$useState","React","useState","_React$useState2","_slicedToArray2","default","selectedAgent","setSelectedAgent","_React$useState3","_React$useState4","consultationActive","setConsultationActive","_React$useState5","_React$useState6","symptoms","setSymptoms","_React$useState7","_React$useState8","diagnosis","setDiagnosis","_React$useState9","_React$useState0","loading","setLoading","_React$useState1","_React$useState10","tcmFeature","setTcmFeature","_React$useState11","_React$useState12","recordAction","setRecordAction","agents","id","name","specialty","status","commonSymptoms","handleSymptomToggle","symptom","prev","includes","filter","s","concat","_toConsumableArray2","handleStartConsultation","_ref","_asyncToGenerator2","length","Promise","resolve","setTimeout","error","apply","arguments","handleEndConsultation","styles","StyleSheet","create","container","flex","padding","button","margin","borderRadius","backgroundColor","buttonSelected","buttonDisabled","opacity","symptomButton","symptomButtonSelected","jsxs","View","testID","style","children","jsx","Text","map","agent","Pressable","onPress","disabled","accessibilityState","join","mockStore","configureStore","reducer","suoke","state","undefined","consultationHistory","healthProfile","action","describe","renderWithProviders","component","render","Provider","store","beforeEach","jest","clearAllMocks","it","expect","screen","getByTestId","toBeTruthy","toHaveTextContent","getByText","fireEvent","press","soerAgent","props","toBe","headacheSymptom","selectedSymptoms","feverSymptom","forEach","startButton","waitFor","timeout","diagnosisContent","endButton","queryByTestId","toBeNull","insomniaSymptom","palpitationSymptom","constitutionTest","meridianAnalysis","herbRecommendation","acupointGuide","viewHistory","exportReport","shareData","ErrorMockSuokeScreen","_React$useState13","_React$useState14","_React$useState15","_React$useState16","_React$useState17","_React$useState18","_React$useState19","_React$useState20","_ref8","Error"],"sources":["SuokeScreen.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, waitFor, screen, fireEvent } from '@testing-library/react-native';\nimport { Provider } from 'react-redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { View, Text, Pressable, StyleSheet } from 'react-native';\n\n// Mock组件 - 使用Pressable替代TouchableOpacity\nconst MockSuokeScreen = () => {\n  const [selectedAgent, setSelectedAgent] = React.useState('xiaoai');\n  const [consultationActive, setConsultationActive] = React.useState(false);\n  const [symptoms, setSymptoms] = React.useState<string[]>([]);\n  const [diagnosis, setDiagnosis] = React.useState('');\n  const [loading, setLoading] = React.useState(false);\n  const [tcmFeature, setTcmFeature] = React.useState('');\n  const [recordAction, setRecordAction] = React.useState('');\n\n  const agents = [\n    { id: 'xiaoai', name: '小艾', specialty: '健康管理', status: 'online' },\n    { id: 'xiaoke', name: '小克', specialty: '疾病预防', status: 'online' },\n    { id: 'laoke', name: '老克', specialty: '中医诊断', status: 'online' },\n    { id: 'soer', name: '索儿', specialty: '康复指导', status: 'offline' },\n  ];\n\n  const commonSymptoms = [\n    '头痛', '发热', '咳嗽', '乏力', '失眠',\n    '胸闷', '腹痛', '恶心', '眩晕', '心悸',\n  ];\n\n  const handleSymptomToggle = (symptom: string) => {\n    setSymptoms(prev => \n      prev.includes(symptom) \n        ? prev.filter(s => s !== symptom)\n        : [...prev, symptom]\n    );\n  };\n\n  const handleStartConsultation = async () => {\n    if (symptoms.length === 0) {\n      return;\n    }\n\n    setLoading(true);\n    setConsultationActive(true);\n\n    try {\n      // 模拟AI诊断 - 缩短等待时间以便测试\n      await new Promise<void>(resolve => setTimeout(() => resolve(), 100));\n      \n      if (symptoms.includes('头痛') && symptoms.includes('发热')) {\n        setDiagnosis('根据症状分析，可能是感冒引起的头痛发热，建议多休息，多喝水。');\n      } else if (symptoms.includes('失眠') && symptoms.includes('心悸')) {\n        setDiagnosis('症状提示可能存在心神不宁，建议调整作息，必要时就医检查。');\n      } else if (symptoms.length === 1) {\n        setDiagnosis('请提供更多症状信息以便准确诊断。');\n      } else {\n        setDiagnosis('根据您的症状，建议进一步观察或咨询专业医生。');\n      }\n    } catch (error) {\n      setDiagnosis('诊断服务暂时不可用，请稍后重试。');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEndConsultation = () => {\n    setConsultationActive(false);\n    setSymptoms([]);\n    setDiagnosis('');\n  };\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      padding: 16,\n    },\n    button: {\n      padding: 12,\n      margin: 4,\n      borderRadius: 8,\n      backgroundColor: '#F0F0F0',\n    },\n    buttonSelected: {\n      backgroundColor: '#007AFF',\n    },\n    buttonDisabled: {\n      opacity: 0.5,\n      backgroundColor: '#CCCCCC',\n    },\n    symptomButton: {\n      padding: 8,\n      margin: 4,\n      borderRadius: 6,\n      backgroundColor: '#F0F0F0',\n    },\n    symptomButtonSelected: {\n      backgroundColor: '#FF6B6B',\n    },\n  });\n\n  return (\n    <View testID=\"suoke-screen\" style={styles.container}>\n      {/* 智能体选择 */}\n      <View testID=\"agent-selector\">\n        <Text testID=\"agent-title\">选择智能体</Text>\n        {agents.map(agent => (\n          <Pressable\n            key={agent.id}\n            testID={`agent-${agent.id}`}\n            onPress={() => setSelectedAgent(agent.id)}\n            style={[\n              styles.button,\n              selectedAgent === agent.id ? styles.buttonSelected : {},\n              agent.status === 'offline' ? styles.buttonDisabled : {},\n            ]}\n            disabled={agent.status === 'offline'}\n            accessibilityState={{ disabled: agent.status === 'offline' }}\n          >\n            <Text testID={`agent-name-${agent.id}`}>{agent.name}</Text>\n            <Text testID={`agent-specialty-${agent.id}`}>{agent.specialty}</Text>\n            <Text testID={`agent-status-${agent.id}`}>{agent.status}</Text>\n          </Pressable>\n        ))}\n      </View>\n\n      {/* 症状选择 */}\n      <View testID=\"symptom-selector\">\n        <Text testID=\"symptom-title\">选择症状</Text>\n        <View testID=\"symptom-grid\">\n          {commonSymptoms.map(symptom => (\n            <Pressable\n              key={symptom}\n              testID={`symptom-${symptom}`}\n              onPress={() => handleSymptomToggle(symptom)}\n              style={[\n                styles.symptomButton,\n                symptoms.includes(symptom) ? styles.symptomButtonSelected : {},\n              ]}\n            >\n              <Text>{symptom}</Text>\n            </Pressable>\n          ))}\n        </View>\n        <Text testID=\"selected-symptoms\">\n          已选择: {symptoms.join(', ') || '无'}\n        </Text>\n      </View>\n\n      {/* 咨询控制 */}\n      <View testID=\"consultation-controls\">\n        {!consultationActive ? (\n          <Pressable\n            testID=\"start-consultation\"\n            onPress={handleStartConsultation}\n            style={[\n              styles.button,\n              (symptoms.length === 0 || loading) ? styles.buttonDisabled : {},\n            ]}\n            disabled={symptoms.length === 0 || loading}\n            accessibilityState={{ disabled: symptoms.length === 0 || loading }}\n          >\n            <Text>{loading ? '正在分析...' : '开始咨询'}</Text>\n          </Pressable>\n        ) : (\n          <Pressable\n            testID=\"end-consultation\"\n            onPress={handleEndConsultation}\n            style={styles.button}\n          >\n            <Text>结束咨询</Text>\n          </Pressable>\n        )}\n      </View>\n\n      {/* 诊断结果 */}\n      {diagnosis && (\n        <View testID=\"diagnosis-result\">\n          <Text testID=\"diagnosis-title\">诊断建议</Text>\n          <Text testID=\"diagnosis-content\">{diagnosis}</Text>\n        </View>\n      )}\n\n      {/* 中医特色功能 */}\n      <View testID=\"tcm-features\">\n        <Text testID=\"tcm-title\">中医特色</Text>\n        <Pressable testID=\"constitution-test\" onPress={() => setTcmFeature('constitution')} style={styles.button}>\n          <Text>体质测试</Text>\n        </Pressable>\n        <Pressable testID=\"meridian-analysis\" onPress={() => setTcmFeature('meridian')} style={styles.button}>\n          <Text>经络分析</Text>\n        </Pressable>\n        <Pressable testID=\"herb-recommendation\" onPress={() => setTcmFeature('herb')} style={styles.button}>\n          <Text>药材推荐</Text>\n        </Pressable>\n        <Pressable testID=\"acupoint-guide\" onPress={() => setTcmFeature('acupoint')} style={styles.button}>\n          <Text>穴位指导</Text>\n        </Pressable>\n      </View>\n\n      {/* 健康档案 */}\n      <View testID=\"health-profile\">\n        <Text testID=\"profile-title\">健康档案</Text>\n        <Pressable testID=\"view-history\" onPress={() => setRecordAction('view')} style={styles.button}>\n          <Text>查看历史</Text>\n        </Pressable>\n        <Pressable testID=\"export-report\" onPress={() => setRecordAction('export')} style={styles.button}>\n          <Text>导出报告</Text>\n        </Pressable>\n        <Pressable testID=\"share-data\" onPress={() => setRecordAction('share')} style={styles.button}>\n          <Text>分享数据</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n};\n\n// Mock store\nconst mockStore = configureStore({\n  reducer: {\n    suoke: (state = { \n      selectedAgent: 'xiaoai',\n      consultationHistory: [],\n      healthProfile: {},\n    }, action) => state,\n  },\n});\n\ndescribe('索克屏幕测试', () => {\n  const renderWithProviders = (component: React.ReactElement) => {\n    return render(\n      <Provider store={mockStore}>\n        {component}\n      </Provider>\n    );\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('基本渲染', () => {\n    it('应该正确渲染所有主要组件', () => {\n      renderWithProviders(<MockSuokeScreen />);\n\n      expect(screen.getByTestId('suoke-screen')).toBeTruthy();\n      expect(screen.getByTestId('agent-selector')).toBeTruthy();\n      expect(screen.getByTestId('symptom-selector')).toBeTruthy();\n      expect(screen.getByTestId('consultation-controls')).toBeTruthy();\n      expect(screen.getByTestId('tcm-features')).toBeTruthy();\n      expect(screen.getByTestId('health-profile')).toBeTruthy();\n    });\n\n    it('应该显示所有智能体选项', () => {\n      renderWithProviders(<MockSuokeScreen />);\n\n      expect(screen.getByTestId('agent-xiaoai')).toBeTruthy();\n      expect(screen.getByTestId('agent-xiaoke')).toBeTruthy();\n      expect(screen.getByTestId('agent-laoke')).toBeTruthy();\n      expect(screen.getByTestId('agent-soer')).toBeTruthy();\n\n      expect(screen.getByTestId('agent-name-xiaoai')).toHaveTextContent('小艾');\n      expect(screen.getByTestId('agent-specialty-xiaoai')).toHaveTextContent('健康管理');\n      expect(screen.getByTestId('agent-status-xiaoai')).toHaveTextContent('online');\n    });\n\n    it('应该显示常见症状选项', () => {\n      renderWithProviders(<MockSuokeScreen />);\n\n      expect(screen.getByText('头痛')).toBeTruthy();\n      expect(screen.getByText('发热')).toBeTruthy();\n      expect(screen.getByText('咳嗽')).toBeTruthy();\n      expect(screen.getByText('乏力')).toBeTruthy();\n      expect(screen.getByText('失眠')).toBeTruthy();\n    });\n  });\n\n  describe('智能体选择', () => {\n    it('应该能够选择不同的智能体', () => {\n      renderWithProviders(<MockSuokeScreen />);\n\n      // 默认选择小艾 - 检查是否存在而不是样式\n      expect(screen.getByTestId('agent-xiaoai')).toBeTruthy();\n\n      // 选择小克\n      fireEvent.press(screen.getByTestId('agent-xiaoke'));\n      expect(screen.getByTestId('agent-xiaoke')).toBeTruthy();\n\n      // 选择老克\n      fireEvent.press(screen.getByTestId('agent-laoke'));\n      expect(screen.getByTestId('agent-laoke')).toBeTruthy();\n    });\n\n    it('应该禁用离线的智能体', () => {\n      renderWithProviders(<MockSuokeScreen />);\n\n      const soerAgent = screen.getByTestId('agent-soer');\n      expect(soerAgent).toBeTruthy();\n      expect(soerAgent.props.accessibilityState.disabled).toBe(true);\n    });\n\n    it('应该显示智能体的专业领域', () => {\n      renderWithProviders(<MockSuokeScreen />);\n\n      expect(screen.getByTestId('agent-specialty-xiaoai')).toHaveTextContent('健康管理');\n      expect(screen.getByTestId('agent-specialty-xiaoke')).toHaveTextContent('疾病预防');\n      expect(screen.getByTestId('agent-specialty-laoke')).toHaveTextContent('中医诊断');\n      expect(screen.getByTestId('agent-specialty-soer')).toHaveTextContent('康复指导');\n    });\n  });\n\n  describe('症状选择', () => {\n    it('应该能够选择和取消选择症状', () => {\n      renderWithProviders(<MockSuokeScreen />);\n\n      const headacheSymptom = screen.getByTestId('symptom-头痛');\n      const selectedSymptoms = screen.getByTestId('selected-symptoms');\n\n      // 初始状态\n      expect(selectedSymptoms).toHaveTextContent('已选择: 无');\n\n      // 选择头痛\n      fireEvent.press(headacheSymptom);\n      expect(selectedSymptoms).toHaveTextContent('已选择: 头痛');\n\n      // 取消选择头痛\n      fireEvent.press(headacheSymptom);\n      expect(selectedSymptoms).toHaveTextContent('已选择: 无');\n    });\n\n    it('应该能够选择多个症状', () => {\n      renderWithProviders(<MockSuokeScreen />);\n\n      const headacheSymptom = screen.getByTestId('symptom-头痛');\n      const feverSymptom = screen.getByTestId('symptom-发热');\n      const selectedSymptoms = screen.getByTestId('selected-symptoms');\n\n      // 选择头痛\n      fireEvent.press(headacheSymptom);\n      expect(selectedSymptoms).toHaveTextContent('已选择: 头痛');\n\n      // 选择发热\n      fireEvent.press(feverSymptom);\n      expect(selectedSymptoms).toHaveTextContent('已选择: 头痛, 发热');\n\n      // 验证两个症状都被选中\n      expect(headacheSymptom).toBeTruthy();\n      expect(feverSymptom).toBeTruthy();\n    });\n\n    it('应该正确显示已选择的症状列表', () => {\n      renderWithProviders(<MockSuokeScreen />);\n\n      const symptoms = ['头痛', '发热', '咳嗽'];\n      const selectedSymptoms = screen.getByTestId('selected-symptoms');\n\n      symptoms.forEach(symptom => {\n        fireEvent.press(screen.getByTestId(`symptom-${symptom}`));\n      });\n\n      expect(selectedSymptoms).toHaveTextContent('已选择: 头痛, 发热, 咳嗽');\n    });\n  });\n\n  describe('咨询功能', () => {\n    it('应该在未选择症状时禁用开始咨询按钮', () => {\n      renderWithProviders(<MockSuokeScreen />);\n\n      const startButton = screen.getByTestId('start-consultation');\n      expect(startButton.props.accessibilityState.disabled).toBe(true);\n      expect(screen.getByText('开始咨询')).toBeTruthy();\n    });\n\n    it('应该在选择症状后启用开始咨询按钮', () => {\n      renderWithProviders(<MockSuokeScreen />);\n\n      const startButton = screen.getByTestId('start-consultation');\n      const headacheSymptom = screen.getByTestId('symptom-头痛');\n\n      // 选择症状\n      fireEvent.press(headacheSymptom);\n\n      expect(startButton.props.accessibilityState.disabled).toBe(false);\n    });\n\n    it('应该能够开始和结束咨询', async () => {\n      renderWithProviders(<MockSuokeScreen />);\n\n      const headacheSymptom = screen.getByTestId('symptom-头痛');\n      const feverSymptom = screen.getByTestId('symptom-发热');\n      const startButton = screen.getByTestId('start-consultation');\n\n      // 选择症状\n      fireEvent.press(headacheSymptom);\n      fireEvent.press(feverSymptom);\n\n      // 开始咨询\n      fireEvent.press(startButton);\n\n      // 等待诊断完成\n      await waitFor(() => {\n        expect(screen.getByTestId('diagnosis-result')).toBeTruthy();\n      }, { timeout: 3000 });\n\n      // 验证诊断结果\n      const diagnosisContent = screen.getByTestId('diagnosis-content');\n      expect(diagnosisContent).toHaveTextContent('根据症状分析，可能是感冒引起的头痛发热，建议多休息，多喝水。');\n\n      // 结束咨询\n      const endButton = screen.getByTestId('end-consultation');\n      fireEvent.press(endButton);\n\n      // 验证状态重置\n      expect(screen.queryByTestId('diagnosis-result')).toBeNull();\n      expect(screen.getByTestId('selected-symptoms')).toHaveTextContent('已选择: 无');\n    });\n\n    it('应该根据不同症状组合给出不同诊断', async () => {\n      renderWithProviders(<MockSuokeScreen />);\n\n      const insomniaSymptom = screen.getByTestId('symptom-失眠');\n      const palpitationSymptom = screen.getByTestId('symptom-心悸');\n      const startButton = screen.getByTestId('start-consultation');\n\n      // 选择失眠和心悸\n      fireEvent.press(insomniaSymptom);\n      fireEvent.press(palpitationSymptom);\n\n      // 开始咨询\n      fireEvent.press(startButton);\n\n      // 等待诊断完成\n      await waitFor(() => {\n        expect(screen.getByTestId('diagnosis-result')).toBeTruthy();\n      }, { timeout: 3000 });\n\n      // 验证诊断结果\n      const diagnosisContent = screen.getByTestId('diagnosis-content');\n      expect(diagnosisContent).toHaveTextContent('症状提示可能存在心神不宁，建议调整作息，必要时就医检查。');\n    });\n\n    it('应该显示加载状态', async () => {\n      renderWithProviders(<MockSuokeScreen />);\n\n      const headacheSymptom = screen.getByTestId('symptom-头痛');\n      \n      // 选择症状\n      fireEvent.press(headacheSymptom);\n\n      // 获取开始咨询按钮\n      const startButton = screen.getByTestId('start-consultation');\n\n      // 开始咨询\n      fireEvent.press(startButton);\n\n      // 等待诊断完成并验证结果\n      await waitFor(() => {\n        expect(screen.getByTestId('diagnosis-result')).toBeTruthy();\n      }, { timeout: 3000 });\n\n      // 验证诊断结果内容\n      expect(screen.getByTestId('diagnosis-content')).toHaveTextContent('请提供更多症状信息以便准确诊断。');\n    });\n  });\n\n  describe('中医特色功能', () => {\n    it('应该显示所有中医特色功能按钮', () => {\n      renderWithProviders(<MockSuokeScreen />);\n\n      expect(screen.getByText('体质测试')).toBeTruthy();\n      expect(screen.getByText('经络分析')).toBeTruthy();\n      expect(screen.getByText('药材推荐')).toBeTruthy();\n      expect(screen.getByText('穴位指导')).toBeTruthy();\n    });\n\n    it('应该能够点击中医功能按钮', () => {\n      renderWithProviders(<MockSuokeScreen />);\n\n      const constitutionTest = screen.getByText('体质测试');\n      const meridianAnalysis = screen.getByText('经络分析');\n      const herbRecommendation = screen.getByText('药材推荐');\n      const acupointGuide = screen.getByText('穴位指导');\n\n      // 模拟点击\n      fireEvent.press(constitutionTest);\n      fireEvent.press(meridianAnalysis);\n      fireEvent.press(herbRecommendation);\n      fireEvent.press(acupointGuide);\n\n      // 验证点击事件被触发（这里只是确保没有错误）\n      expect(constitutionTest).toBeTruthy();\n      expect(meridianAnalysis).toBeTruthy();\n      expect(herbRecommendation).toBeTruthy();\n      expect(acupointGuide).toBeTruthy();\n    });\n  });\n\n  describe('健康档案功能', () => {\n    it('应该显示健康档案相关按钮', () => {\n      renderWithProviders(<MockSuokeScreen />);\n\n      expect(screen.getByText('查看历史')).toBeTruthy();\n      expect(screen.getByText('导出报告')).toBeTruthy();\n      expect(screen.getByText('分享数据')).toBeTruthy();\n    });\n\n    it('应该能够点击健康档案功能按钮', () => {\n      renderWithProviders(<MockSuokeScreen />);\n\n      const viewHistory = screen.getByText('查看历史');\n      const exportReport = screen.getByText('导出报告');\n      const shareData = screen.getByText('分享数据');\n\n      // 模拟点击\n      fireEvent.press(viewHistory);\n      fireEvent.press(exportReport);\n      fireEvent.press(shareData);\n\n      // 验证点击事件被触发（这里只是确保没有错误）\n      expect(viewHistory).toBeTruthy();\n      expect(exportReport).toBeTruthy();\n      expect(shareData).toBeTruthy();\n    });\n  });\n\n  describe('交互流程', () => {\n    it('应该支持完整的诊断流程', async () => {\n      renderWithProviders(<MockSuokeScreen />);\n\n      // 1. 选择智能体\n      fireEvent.press(screen.getByText('老克'));\n\n      // 2. 选择症状\n      fireEvent.press(screen.getByText('头痛'));\n      fireEvent.press(screen.getByText('发热'));\n\n      // 3. 开始咨询\n      fireEvent.press(screen.getByTestId('start-consultation'));\n\n      // 4. 等待诊断结果\n      await waitFor(() => {\n        expect(screen.getByTestId('diagnosis-result')).toBeTruthy();\n      }, { timeout: 3000 });\n\n      // 5. 验证结果显示\n      expect(screen.getByTestId('diagnosis-content')).toHaveTextContent('根据症状分析，可能是感冒引起的头痛发热，建议多休息，多喝水。');\n\n      // 6. 结束咨询\n      fireEvent.press(screen.getByTestId('end-consultation'));\n\n      // 7. 验证状态重置\n      expect(screen.queryByTestId('diagnosis-result')).toBeNull();\n    });\n\n    it('应该在症状不足时提示需要更多信息', async () => {\n      renderWithProviders(<MockSuokeScreen />);\n\n      // 只选择一个不常见的症状\n      fireEvent.press(screen.getByText('眩晕'));\n\n      // 开始咨询\n      fireEvent.press(screen.getByTestId('start-consultation'));\n\n      // 等待诊断结果\n      await waitFor(() => {\n        expect(screen.getByTestId('diagnosis-result')).toBeTruthy();\n      }, { timeout: 3000 });\n\n      // 验证提示信息\n      const diagnosisContent = screen.getByTestId('diagnosis-content');\n      expect(diagnosisContent).toHaveTextContent('请提供更多症状信息以便准确诊断。');\n    });\n  });\n\n  describe('错误处理', () => {\n    it('应该处理诊断服务错误', async () => {\n      // 创建一个会抛出错误的MockSuokeScreen版本\n      const ErrorMockSuokeScreen = () => {\n        const [symptoms, setSymptoms] = React.useState<string[]>([]);\n        const [diagnosis, setDiagnosis] = React.useState('');\n        const [loading, setLoading] = React.useState(false);\n        const [consultationActive, setConsultationActive] = React.useState(false);\n\n        const handleSymptomToggle = (symptom: string) => {\n          setSymptoms(prev => \n            prev.includes(symptom) \n              ? prev.filter(s => s !== symptom)\n              : [...prev, symptom]\n          );\n        };\n\n        const handleStartConsultation = async () => {\n          if (symptoms.length === 0) return;\n          \n          setLoading(true);\n          setConsultationActive(true);\n\n          try {\n            // 模拟网络错误\n            throw new Error('Network Error');\n          } catch (error) {\n            setDiagnosis('诊断服务暂时不可用，请稍后重试。');\n          } finally {\n            setLoading(false);\n          }\n        };\n\n        return (\n          <View testID=\"suoke-screen\">\n            <Pressable testID=\"symptom-头痛\" onPress={() => handleSymptomToggle('头痛')}>\n              <Text>头痛</Text>\n            </Pressable>\n            <Pressable\n              testID=\"start-consultation\"\n              onPress={handleStartConsultation}\n              disabled={symptoms.length === 0 || loading}\n            >\n              <Text>{loading ? '正在分析...' : '开始咨询'}</Text>\n            </Pressable>\n            {diagnosis && (\n              <View testID=\"diagnosis-result\">\n                <Text testID=\"diagnosis-content\">{diagnosis}</Text>\n              </View>\n            )}\n          </View>\n        );\n      };\n\n      renderWithProviders(<ErrorMockSuokeScreen />);\n\n      // 选择症状\n      fireEvent.press(screen.getByTestId('symptom-头痛'));\n\n      // 开始咨询\n      fireEvent.press(screen.getByTestId('start-consultation'));\n\n      // 等待错误处理\n      await waitFor(() => {\n        expect(screen.getByTestId('diagnosis-result')).toBeTruthy();\n      }, { timeout: 3000 });\n\n      // 验证错误信息\n      const diagnosisContent = screen.getByTestId('diagnosis-content');\n      expect(diagnosisContent).toHaveTextContent('诊断服务暂时不可用，请稍后重试。');\n    });\n  });\n}); "],"mappings":"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","ignoreList":[]}