fabe201932ca0492278f82fbcbac41e2
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AuthInput = void 0;
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _theme = require("../../constants/theme");
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["label", "error", "icon", "rightIcon", "onRightIconPress", "focused", "onFocus", "onBlur", "counter", "maxLength", "value"];
function cov_eswqu4zti() {
  var path = "/Users/songxu/Developer/suoke_life/src/components/common/AuthInput.tsx";
  var hash = "b4a15dfc6fdbf4b131e72ef26cc99ee63f82ae8b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/songxu/Developer/suoke_life/src/components/common/AuthInput.tsx",
    statementMap: {
      "0": {
        start: {
          line: 26,
          column: 51
        },
        end: {
          line: 79,
          column: 1
        }
      },
      "1": {
        start: {
          line: 40,
          column: 2
        },
        end: {
          line: 78,
          column: 4
        }
      },
      "2": {
        start: {
          line: 81,
          column: 15
        },
        end: {
          line: 140,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 26,
            column: 51
          },
          end: {
            line: 26,
            column: 52
          }
        },
        loc: {
          start: {
            line: 39,
            column: 6
          },
          end: {
            line: 79,
            column: 1
          }
        },
        line: 39
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 2
          },
          end: {
            line: 32,
            column: 17
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 32,
            column: 17
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 35,
            column: 2
          },
          end: {
            line: 35,
            column: 17
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 17
          }
        }],
        line: 35
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 34
          },
          end: {
            line: 42,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 34
          },
          end: {
            line: 42,
            column: 41
          }
        }, {
          start: {
            line: 42,
            column: 45
          },
          end: {
            line: 42,
            column: 64
          }
        }],
        line: 42
      },
      "3": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 15
          }
        }, {
          start: {
            line: 47,
            column: 19
          },
          end: {
            line: 47,
            column: 45
          }
        }],
        line: 47
      },
      "4": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 48,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 48,
            column: 13
          }
        }, {
          start: {
            line: 48,
            column: 17
          },
          end: {
            line: 48,
            column: 41
          }
        }],
        line: 48
      },
      "5": {
        loc: {
          start: {
            line: 50,
            column: 9
          },
          end: {
            line: 50,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 9
          },
          end: {
            line: 50,
            column: 13
          }
        }, {
          start: {
            line: 50,
            column: 17
          },
          end: {
            line: 50,
            column: 61
          }
        }],
        line: 50
      },
      "6": {
        loc: {
          start: {
            line: 60,
            column: 9
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 9
          },
          end: {
            line: 60,
            column: 16
          }
        }, {
          start: {
            line: 60,
            column: 20
          },
          end: {
            line: 60,
            column: 29
          }
        }, {
          start: {
            line: 60,
            column: 33
          },
          end: {
            line: 60,
            column: 38
          }
        }, {
          start: {
            line: 61,
            column: 10
          },
          end: {
            line: 61,
            column: 77
          }
        }],
        line: 60
      },
      "7": {
        loc: {
          start: {
            line: 63,
            column: 9
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 9
          },
          end: {
            line: 63,
            column: 18
          }
        }, {
          start: {
            line: 64,
            column: 10
          },
          end: {
            line: 69,
            column: 29
          }
        }],
        line: 63
      },
      "8": {
        loc: {
          start: {
            line: 72,
            column: 7
          },
          end: {
            line: 76,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 7
          },
          end: {
            line: 72,
            column: 12
          }
        }, {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 24
          }
        }],
        line: 72
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b4a15dfc6fdbf4b131e72ef26cc99ee63f82ae8b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_eswqu4zti = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_eswqu4zti();
cov_eswqu4zti().s[0]++;
var AuthInput = exports.AuthInput = function AuthInput(_ref) {
  var label = _ref.label,
    error = _ref.error,
    icon = _ref.icon,
    rightIcon = _ref.rightIcon,
    onRightIconPress = _ref.onRightIconPress,
    _ref$focused = _ref.focused,
    focused = _ref$focused === void 0 ? (cov_eswqu4zti().b[0][0]++, false) : _ref$focused,
    onFocus = _ref.onFocus,
    onBlur = _ref.onBlur,
    _ref$counter = _ref.counter,
    counter = _ref$counter === void 0 ? (cov_eswqu4zti().b[1][0]++, false) : _ref$counter,
    maxLength = _ref.maxLength,
    value = _ref.value,
    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  cov_eswqu4zti().f[0]++;
  cov_eswqu4zti().s[1]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.container,
    children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: [styles.label, (cov_eswqu4zti().b[2][0]++, focused) && (cov_eswqu4zti().b[2][1]++, styles.labelFocused)],
      children: label
    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: [styles.inputWrapper, (cov_eswqu4zti().b[3][0]++, focused) && (cov_eswqu4zti().b[3][1]++, styles.inputWrapperFocused), (cov_eswqu4zti().b[4][0]++, error) && (cov_eswqu4zti().b[4][1]++, styles.inputWrapperError)],
      children: [(cov_eswqu4zti().b[5][0]++, icon) && (cov_eswqu4zti().b[5][1]++, (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.inputIcon,
        children: icon
      })), (0, _jsxRuntime.jsx)(_reactNative.TextInput, Object.assign({
        style: styles.input,
        value: value,
        placeholderTextColor: _theme.colors.placeholder,
        onFocus: onFocus,
        onBlur: onBlur,
        maxLength: maxLength
      }, props)), (cov_eswqu4zti().b[6][0]++, counter) && (cov_eswqu4zti().b[6][1]++, maxLength) && (cov_eswqu4zti().b[6][2]++, value) && (cov_eswqu4zti().b[6][3]++, (0, _jsxRuntime.jsxs)(_reactNative.Text, {
        style: styles.inputCounter,
        children: [value.length, "/", maxLength]
      })), (cov_eswqu4zti().b[7][0]++, rightIcon) && (cov_eswqu4zti().b[7][1]++, (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        style: styles.rightIconButton,
        onPress: onRightIconPress,
        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.rightIcon,
          children: rightIcon
        })
      }))]
    }), (cov_eswqu4zti().b[8][0]++, error) && (cov_eswqu4zti().b[8][1]++, (0, _jsxRuntime.jsx)(_reactNative.Animated.View, {
      style: styles.errorContainer,
      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.errorText,
        children: error
      })
    }))]
  });
};
var styles = (cov_eswqu4zti().s[2]++, _reactNative.StyleSheet.create({
  container: {
    marginBottom: _theme.spacing.lg
  },
  label: {
    fontSize: _theme.fonts.size.md,
    fontWeight: '600',
    color: _theme.colors.textSecondary,
    marginBottom: _theme.spacing.sm
  },
  labelFocused: {
    color: _theme.colors.primary
  },
  inputWrapper: Object.assign({
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: _theme.colors.surface,
    borderRadius: _theme.borderRadius.lg,
    borderWidth: 2,
    borderColor: _theme.colors.border,
    paddingHorizontal: _theme.spacing.md
  }, _theme.shadows.sm),
  inputWrapperFocused: Object.assign({
    borderColor: _theme.colors.primary
  }, _theme.shadows.md),
  inputWrapperError: {
    borderColor: _theme.colors.error
  },
  inputIcon: {
    fontSize: 20,
    marginRight: _theme.spacing.sm
  },
  input: {
    flex: 1,
    paddingVertical: _theme.spacing.lg,
    fontSize: _theme.fonts.size.md,
    color: _theme.colors.text
  },
  inputCounter: {
    fontSize: _theme.fonts.size.sm,
    color: _theme.colors.textSecondary,
    marginLeft: _theme.spacing.sm
  },
  rightIconButton: {
    padding: _theme.spacing.sm
  },
  rightIcon: {
    fontSize: 20
  },
  errorContainer: {
    marginTop: _theme.spacing.sm
  },
  errorText: {
    fontSize: _theme.fonts.size.sm,
    color: _theme.colors.error,
    marginLeft: _theme.spacing.sm
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,