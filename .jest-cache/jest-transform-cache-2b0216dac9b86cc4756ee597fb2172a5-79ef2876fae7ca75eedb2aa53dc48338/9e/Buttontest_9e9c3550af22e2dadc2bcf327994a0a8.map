{"version":3,"names":["_getJestObj","mock","Object","assign","jest","requireActual","useNavigation","navigate","mockNavigate","_interopRequireDefault","require","_react","_reactNative","_Button","_jsxRuntime","_require","fn","describe","defaultOnPress","beforeEach","clearAllMocks","it","_render","render","jsx","Button","title","onPress","toJSON","tree","expect","JSON","stringify","toContain","_render2","getByText","fireEvent","press","toHaveBeenCalledTimes","_render3","disabled","not","toHaveBeenCalled","_render4","loading","getByTestId","toBeTruthy","customStyle","backgroundColor","_render5","style","_render6","_render7","_render8","_render9","variant","_render0","_render1","_render10","size","_render11","_render12","startTime","performance","now","endTime","renderTime","toBeLessThan","_render13","button","i","totalTime","iterations","times","_render14","unmount","push","averageTime","reduce","sum","time","toMatchSnapshot","result","longTitle","_render15","specialTitle","_render16","_render17","indicator","onSubmit","_render18","_render19","toHaveBeenCalledWith","customTextStyle","color","fontSize","_render20","textStyle"],"sources":["Button.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, fireEvent, screen } from '@testing-library/react-native';\nimport { Button } from '../../../components/common/Button';\n\n// Mock navigation\nconst mockNavigate = jest.fn();\njest.mock('@react-navigation/native', () => ({\n  ...jest.requireActual('@react-navigation/native'),\n  useNavigation: () => ({\n    navigate: mockNavigate,\n  }),\n}));\n\ndescribe('Button Component', () => {\n  const defaultOnPress = jest.fn();\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('基础功能', () => {\n    it('应该正确渲染按钮文本', () => {\n      const { toJSON } = render(<Button title=\"测试按钮\" onPress={defaultOnPress} />);\n      const tree = toJSON();\n      expect(JSON.stringify(tree)).toContain('测试按钮');\n    });\n\n    it('应该响应点击事件', () => {\n      const onPress = jest.fn();\n      const { getByText } = render(<Button title=\"点击我\" onPress={onPress} />);\n      \n      fireEvent.press(getByText('点击我'));\n      expect(onPress).toHaveBeenCalledTimes(1);\n    });\n\n    it('禁用状态下不应响应点击', () => {\n      const onPress = jest.fn();\n      const { getByText } = render(<Button title=\"禁用按钮\" onPress={onPress} disabled />);\n      \n      fireEvent.press(getByText('禁用按钮'));\n      expect(onPress).not.toHaveBeenCalled();\n    });\n\n    it('应该显示加载状态', () => {\n      const { getByTestId, toJSON } = render(<Button title=\"加载中\" onPress={defaultOnPress} loading />);\n      // 查找ActivityIndicator组件\n      expect(getByTestId('activity-indicator')).toBeTruthy();\n      // 确保文本不显示\n      const tree = toJSON();\n      expect(JSON.stringify(tree)).not.toContain('加载中');\n    });\n\n    it('应该正确应用自定义样式', () => {\n      const customStyle = { backgroundColor: 'red' };\n      const { toJSON } = render(\n        <Button title=\"自定义样式\" onPress={defaultOnPress} style={customStyle} />\n      );\n      \n      const tree = toJSON();\n      expect(JSON.stringify(tree)).toContain('自定义样式');\n    });\n  });\n\n  describe('可访问性', () => {\n    it('应该正确渲染按钮', () => {\n      const { toJSON } = render(<Button title=\"角色测试\" onPress={defaultOnPress} />);\n      const tree = toJSON();\n      expect(JSON.stringify(tree)).toContain('角色测试');\n    });\n\n    it('禁用状态应该正确显示', () => {\n      const { getByText, toJSON } = render(<Button title=\"禁用测试\" onPress={defaultOnPress} disabled />);\n      const tree = toJSON();\n      expect(JSON.stringify(tree)).toContain('禁用测试');\n      expect(getByText('禁用测试')).toBeTruthy();\n    });\n\n    it('加载状态应该显示指示器', () => {\n      const { getByTestId } = render(<Button title=\"加载测试\" onPress={defaultOnPress} loading />);\n      expect(getByTestId('activity-indicator')).toBeTruthy();\n    });\n  });\n\n  describe('按钮变体', () => {\n    it('应该正确渲染主要按钮', () => {\n      const { toJSON } = render(<Button title=\"主要按钮\" onPress={defaultOnPress} variant=\"primary\" />);\n      const tree = toJSON();\n      expect(JSON.stringify(tree)).toContain('主要按钮');\n    });\n\n    it('应该正确渲染次要按钮', () => {\n      const { toJSON } = render(<Button title=\"次要按钮\" onPress={defaultOnPress} variant=\"secondary\" />);\n      const tree = toJSON();\n      expect(JSON.stringify(tree)).toContain('次要按钮');\n    });\n\n    it('应该正确渲染轮廓按钮', () => {\n      const { toJSON } = render(<Button title=\"轮廓按钮\" onPress={defaultOnPress} variant=\"outline\" />);\n      const tree = toJSON();\n      expect(JSON.stringify(tree)).toContain('轮廓按钮');\n    });\n  });\n\n  describe('按钮尺寸', () => {\n    it('应该正确渲染小尺寸按钮', () => {\n      const { toJSON } = render(<Button title=\"小按钮\" onPress={defaultOnPress} size=\"small\" />);\n      const tree = toJSON();\n      expect(JSON.stringify(tree)).toContain('小按钮');\n    });\n\n    it('应该正确渲染中等尺寸按钮', () => {\n      const { toJSON } = render(<Button title=\"中等按钮\" onPress={defaultOnPress} size=\"medium\" />);\n      const tree = toJSON();\n      expect(JSON.stringify(tree)).toContain('中等按钮');\n    });\n\n    it('应该正确渲染大尺寸按钮', () => {\n      const { toJSON } = render(<Button title=\"大按钮\" onPress={defaultOnPress} size=\"large\" />);\n      const tree = toJSON();\n      expect(JSON.stringify(tree)).toContain('大按钮');\n    });\n  });\n\n  describe('性能测试', () => {\n    it('应该在合理时间内渲染', () => {\n      const startTime = performance.now();\n      render(<Button title=\"性能测试\" onPress={defaultOnPress} />);\n      const endTime = performance.now();\n      const renderTime = endTime - startTime;\n      \n      expect(renderTime).toBeLessThan(100); // 100ms内渲染完成\n    });\n\n    it('应该高效处理多次点击', () => {\n      const onPress = jest.fn();\n      const { getByText } = render(<Button title=\"点击测试\" onPress={onPress} />);\n      \n      const button = getByText('点击测试');\n      const startTime = performance.now();\n      \n      // 模拟100次快速点击\n      for (let i = 0; i < 100; i++) {\n        fireEvent.press(button);\n      }\n      \n      const endTime = performance.now();\n      const totalTime = endTime - startTime;\n      \n      expect(totalTime).toBeLessThan(1000); // 1秒内完成100次点击\n      expect(onPress).toHaveBeenCalledTimes(100);\n    });\n\n    it('不应该有明显的性能问题', () => {\n      // 简单的性能测试\n      const iterations = 10;\n      const times = [];\n      \n      for (let i = 0; i < iterations; i++) {\n        const startTime = performance.now();\n        const { unmount } = render(<Button title=\"性能测试\" onPress={defaultOnPress} />);\n        const endTime = performance.now();\n        unmount();\n        times.push(endTime - startTime);\n      }\n      \n      const averageTime = times.reduce((sum, time) => sum + time, 0) / iterations;\n      expect(averageTime).toBeLessThan(200); // 放宽到200ms，因为在测试环境中可能较慢\n    });\n  });\n\n  describe('快照测试', () => {\n    it('默认按钮快照', () => {\n      const tree = render(<Button title=\"默认按钮\" onPress={defaultOnPress} />);\n      expect(tree.toJSON()).toMatchSnapshot();\n    });\n\n    it('主要按钮快照', () => {\n      const tree = render(\n        <Button title=\"主要按钮\" onPress={defaultOnPress} variant=\"primary\" />\n      );\n      expect(tree.toJSON()).toMatchSnapshot();\n    });\n\n    it('禁用按钮快照', () => {\n      const tree = render(\n        <Button title=\"禁用按钮\" onPress={defaultOnPress} disabled />\n      );\n      expect(tree.toJSON()).toMatchSnapshot();\n    });\n\n    it('加载状态按钮快照', () => {\n      const tree = render(\n        <Button title=\"加载按钮\" onPress={defaultOnPress} loading />\n      );\n      expect(tree.toJSON()).toMatchSnapshot();\n    });\n  });\n\n  describe('边界情况', () => {\n    it('应该处理空标题', () => {\n      const result = render(<Button title=\"\" onPress={defaultOnPress} />);\n      expect(result).toBeTruthy();\n    });\n\n    it('应该处理长标题', () => {\n      const longTitle = '这是一个非常非常非常长的按钮标题，用来测试文本溢出处理';\n      const { toJSON } = render(<Button title={longTitle} onPress={defaultOnPress} />);\n      const tree = toJSON();\n      expect(JSON.stringify(tree)).toContain(longTitle);\n    });\n\n    it('应该处理特殊字符', () => {\n      const specialTitle = '按钮 🚀 测试 & 特殊字符';\n      const { toJSON } = render(<Button title={specialTitle} onPress={defaultOnPress} />);\n      const tree = toJSON();\n      expect(JSON.stringify(tree)).toContain(specialTitle);\n    });\n\n    it('应该处理同时设置loading和disabled', () => {\n      const onPress = jest.fn();\n      const { getByTestId } = render(<Button title=\"测试\" onPress={onPress} loading disabled />);\n      \n      const indicator = getByTestId('activity-indicator');\n      expect(indicator).toBeTruthy();\n      \n      // 尝试点击，应该不会触发\n      fireEvent.press(indicator);\n      expect(onPress).not.toHaveBeenCalled();\n    });\n  });\n\n  describe('集成测试', () => {\n    it('应该与表单正确集成', () => {\n      const onSubmit = jest.fn();\n      const { getByText } = render(<Button title=\"提交\" onPress={onSubmit} />);\n      \n      fireEvent.press(getByText('提交'));\n      expect(onSubmit).toHaveBeenCalled();\n    });\n\n    it('应该与导航正确集成', () => {\n      const navigate = mockNavigate;\n      const { getByText } = render(<Button title=\"导航\" onPress={() => navigate('Home')} />);\n      \n      fireEvent.press(getByText('导航'));\n      expect(navigate).toHaveBeenCalledWith('Home');\n    });\n\n    it('应该支持自定义文本样式', () => {\n      const customTextStyle = { color: 'blue', fontSize: 20 };\n      const { toJSON } = render(\n        <Button title=\"自定义文本\" onPress={defaultOnPress} textStyle={customTextStyle} />\n      );\n      \n      const tree = toJSON();\n      expect(JSON.stringify(tree)).toContain('自定义文本');\n    });\n  });\n}); "],"mappings":"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","ignoreList":[]}