c3d2c0e66c06665abdcf6b4e995dd978
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _Icon = _interopRequireDefault(require("../../components/common/Icon"));
var _theme = require("../../constants/theme");
var _jsxRuntime = require("react/jsx-runtime");
function cov_jmnyd7l81() {
  var path = "/Users/songxu/Developer/suoke_life/src/screens/components/ProfileHeader.tsx";
  var hash = "f8666f4384339aa0d71f59e46b221e94760cd5e8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/songxu/Developer/suoke_life/src/screens/components/ProfileHeader.tsx",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 52
        },
        end: {
          line: 69,
          column: 1
        }
      },
      "1": {
        start: {
          line: 20,
          column: 2
        },
        end: {
          line: 68,
          column: 4
        }
      },
      "2": {
        start: {
          line: 71,
          column: 15
        },
        end: {
          line: 143,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 52
          },
          end: {
            line: 14,
            column: 53
          }
        },
        loc: {
          start: {
            line: 19,
            column: 6
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 19
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f8666f4384339aa0d71f59e46b221e94760cd5e8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_jmnyd7l81 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_jmnyd7l81();
cov_jmnyd7l81().s[0]++;
var ProfileHeader = function ProfileHeader(_ref) {
  var userProfile = _ref.userProfile,
    onEditPress = _ref.onEditPress,
    getHealthScoreColor = _ref.getHealthScoreColor,
    getMemberLevelText = _ref.getMemberLevelText;
  cov_jmnyd7l81().f[0]++;
  cov_jmnyd7l81().s[1]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.container,
    children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.header,
      children: [(0, _jsxRuntime.jsx)(_reactNative.View, {
        style: styles.avatarContainer,
        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.avatar,
          children: userProfile.avatar
        })
      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: styles.userInfo,
        children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
          style: styles.nameRow,
          children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
            style: styles.name,
            children: userProfile.name
          }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
            onPress: onEditPress,
            style: styles.editButton,
            children: (0, _jsxRuntime.jsx)(_Icon.default, {
              name: "pencil",
              size: 16,
              color: _theme.colors.primary
            })
          })]
        }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.memberLevel,
          children: getMemberLevelText(userProfile.memberLevel)
        }), (0, _jsxRuntime.jsxs)(_reactNative.Text, {
          style: styles.joinDate,
          children: ["\u52A0\u5165\u65F6\u95F4\uFF1A", userProfile.joinDate]
        })]
      })]
    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.statsContainer,
      children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: styles.statItem,
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: [styles.statValue, {
            color: getHealthScoreColor(userProfile.healthScore)
          }],
          children: userProfile.healthScore
        }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.statLabel,
          children: "\u5065\u5EB7\u5206\u6570"
        })]
      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: styles.statItem,
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.statValue,
          children: userProfile.totalDiagnosis
        }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.statLabel,
          children: "\u8BCA\u65AD\u6B21\u6570"
        })]
      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: styles.statItem,
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.statValue,
          children: userProfile.consecutiveDays
        }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.statLabel,
          children: "\u8FDE\u7EED\u5929\u6570"
        })]
      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: styles.statItem,
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.statValue,
          children: userProfile.healthPoints
        }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.statLabel,
          children: "\u5065\u5EB7\u79EF\u5206"
        })]
      })]
    })]
  });
};
var styles = (cov_jmnyd7l81().s[2]++, _reactNative.StyleSheet.create({
  container: {
    backgroundColor: _theme.colors.white,
    paddingHorizontal: _theme.spacing.lg,
    paddingVertical: _theme.spacing.xl,
    borderBottomWidth: 1,
    borderBottomColor: _theme.colors.border
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: _theme.spacing.lg
  },
  avatarContainer: {
    width: 80,
    height: 80,
    borderRadius: 40,
    backgroundColor: _theme.colors.disabled,
    justifyContent: 'center',
    alignItems: 'center',
    marginRight: _theme.spacing.lg
  },
  avatar: {
    fontSize: 40
  },
  userInfo: {
    flex: 1
  },
  nameRow: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: _theme.spacing.xs
  },
  name: {
    fontSize: _theme.fonts.size.xl,
    fontWeight: 'bold',
    color: _theme.colors.text,
    marginRight: _theme.spacing.sm
  },
  editButton: {
    padding: _theme.spacing.xs
  },
  memberLevel: {
    fontSize: _theme.fonts.size.md,
    color: _theme.colors.primary,
    fontWeight: '500',
    marginBottom: _theme.spacing.xs
  },
  joinDate: {
    fontSize: _theme.fonts.size.sm,
    color: _theme.colors.textSecondary
  },
  statsContainer: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    paddingTop: _theme.spacing.lg,
    borderTopWidth: 1,
    borderTopColor: _theme.colors.border
  },
  statItem: {
    alignItems: 'center'
  },
  statValue: {
    fontSize: _theme.fonts.size.xl,
    fontWeight: 'bold',
    color: _theme.colors.text,
    marginBottom: _theme.spacing.xs
  },
  statLabel: {
    fontSize: _theme.fonts.size.sm,
    color: _theme.colors.textSecondary
  }
}));
var _default = exports.default = _react.default.memo(ProfileHeader);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,