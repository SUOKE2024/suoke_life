{"version":3,"names":["_types","require","Object","keys","forEach","key","exports","defineProperty","enumerable","get","cov_2baxqx7sue","path","hash","global","Function","gcv","coverageData","statementMap","fnMap","branchMap","s","f","b","_coverageSchema","coverage","actualCoverage"],"sources":["index.ts"],"sourcesContent":["// 索克生活通用类型定义\n\n// 四诊类型\nexport type DiagnosisType = 'inspection' | 'auscultation' | 'inquiry' | 'palpation';\n\n// 用户体质类型\nexport type ConstitutionType = \n  | '平和质'\n  | '气虚质' \n  | '阳虚质'\n  | '阴虚质'\n  | '痰湿质'\n  | '湿热质'\n  | '血瘀质'\n  | '气郁质'\n  | '特禀质';\n\n// 季节类型\nexport type SeasonType = '春季' | '夏季' | '秋季' | '冬季';\n\n// 服务状态\nexport type ServiceStatus = 'available' | 'unavailable' | 'maintenance';\n\n// 健康数据类型\nexport interface HealthData {\n  id: string;\n  userId: string;\n  type: 'vital_signs' | 'symptoms' | 'diagnosis' | 'treatment';\n  data: any;\n  timestamp: number;\n  source: string;\n}\n\n// 用户基本信息\nexport interface UserBasicInfo {\n  id: string;\n  name: string;\n  age: number;\n  gender: 'male' | 'female' | 'other';\n  constitution: ConstitutionType;\n  location?: string;\n}\n\n// API响应基础类型\n// 修复ApiResponse类型\nexport interface ApiResponse<T = any> {\n  success: boolean;\n  data?: T;\n  error?: {\n    code: string;\n    message: string;\n    details?: any;\n  };\n  timestamp: number;\n}\n\n// 分页数据类型\nexport interface PaginatedData<T> {\n  items: T[];\n  total: number;\n  page: number;\n  pageSize: number;\n  hasMore: boolean;\n}\n\n// 错误类型\nexport interface AppError {\n  code: string;\n  message: string;\n  details?: any;\n  timestamp: number;\n}\n\n// 导出所有类型\nexport * from '../agents/xiaoai/types'; \n// Redux State Types\nexport interface RootState {\n  auth: AuthState;\n  user: UserState;\n  health: HealthState;\n  diagnosis: DiagnosisState;\n  agents: AgentsState;\n  ui: UIState;\n}\n\nexport interface AuthState {\n  isAuthenticated: boolean;\n  user: User | null;\n  token: string | null;\n  refreshToken: string | null;\n  loading: boolean;\n  error: string | null;\n}\n\nexport interface UserState {\n  profile: UserProfile | null;\n  healthData: HealthData[];\n  loading: boolean;\n  error: string | null;\n}\n\nexport interface HealthState {\n  data: HealthData[];\n  summary: HealthSummary | null;\n  trends: any[];\n  loading: boolean;\n  error: string | null;\n}\n\nexport interface DiagnosisState {\n  sessions: DiagnosisSession[];\n  currentSession: string | null;\n  loading: boolean;\n  error: string | null;\n}\n\nexport interface AgentsState {\n  conversations: { [agentType: string]: AgentMessage[] };\n  activeAgent: AgentType | null;\n  loading: boolean;\n  error: string | null;\n}\n\nexport interface UIState {\n  theme: 'light' | 'dark';\n  notifications: Notification[];\n  loading: boolean;\n  error: string | null;\n}\n\n// User Types\nexport interface User {\n  id: string;\n  email: string;\n  username: string;\n  profile: UserProfile;\n  createdAt: string;\n  updatedAt: string;\n}\n\n// Health Types\nexport interface HealthSummary {\n  overallScore: number;\n  constitution: ConstitutionType;\n  recommendations: string[];\n  lastUpdated: string;\n}\n\nexport type HealthDataType = 'vitals' | 'symptoms' | 'lifestyle' | 'medication';\n\n// Diagnosis Types\nexport interface DiagnosisSession {\n  id: string;\n  type: DiagnosisType;\n  status: 'active' | 'completed' | 'cancelled';\n  data: DiagnosisData;\n  result?: DiagnosisResult;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface DiagnosisData {\n  symptoms: string[];\n  images: string[];\n  audio: string[];\n  notes: string;\n}\n\nexport interface DiagnosisResult {\n  constitution: ConstitutionType;\n  recommendations: string[];\n  confidence: number;\n  analysis: string;\n}\n\n// Agent Types\nexport interface AgentMessage {\n  id: string;\n  type: 'user' | 'agent';\n  content: string;\n  timestamp: string;\n  agentType: AgentType;\n}\n\nexport interface AgentResponse {\n  message: string;\n  suggestions?: string[];\n  actions?: string[];\n}\n\n// Notification Types\nexport interface Notification {\n  id: string;\n  title: string;\n  message: string;\n  type: 'info' | 'warning' | 'error' | 'success';\n  read: boolean;\n  timestamp: string;\n}\n"],"mappings":";;;AA0EA,IAAAA,MAAA,GAAAC,OAAA;AAAAC,MAAA,CAAAC,IAAA,CAAAH,MAAA,EAAAI,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAA,GAAA,IAAAC,OAAA,IAAAA,OAAA,CAAAD,GAAA,MAAAL,MAAA,CAAAK,GAAA;EAAAH,MAAA,CAAAK,cAAA,CAAAD,OAAA,EAAAD,GAAA;IAAAG,UAAA;IAAAC,GAAA,WAAAA,IAAA;MAAA,OAAAT,MAAA,CAAAK,GAAA;IAAA;EAAA;AAAA;AAAuC,SAAAK,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;IAAAC,KAAA;IAAAC,SAAA;IAAAC,CAAA;IAAAC,CAAA;IAAAC,CAAA;IAAAC,eAAA;IAAAX,IAAA;EAAA;EAAA,IAAAY,QAAA,GAAAX,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAS,QAAA,CAAAb,IAAA,KAAAa,QAAA,CAAAb,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAAY,QAAA,CAAAb,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAS,cAAA,GAAAD,QAAA,CAAAb,IAAA;EAAA;IAAAD,cAAA,YAAAA,CAAA;MAAA,OAAAe,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAf,cAAA","ignoreList":[]}