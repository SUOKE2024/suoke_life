{"version":3,"names":["debounce","exports","func","wait","cov_rth78qplq","f","timeout","s","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","apply","throttle","limit","inThrottle","b","deepClone","obj","Date","getTime","isArray","map","item","cloned","Object","keys","forEach","key","generateId","now","toString","Math","random","substr","sleep","ms","Promise","resolve","unique","array","from","Set","uniqueBy","seen","filter","value","has","add","groupBy","reduce","groups","groupKey","String","push","formatNumber","num","decimals","undefined","isNaN","Number","toFixed","formatFileSize","bytes","k","sizes","i","floor","log","parseFloat","pow","generateRandomColor","getDeviceInfo","platform","version","buildNumber","isEmpty","trim","safeJsonParse","str","defaultValue","JSON","parse","_unused"],"sources":["commonUtils.ts"],"sourcesContent":["/**\n * 通用工具函数\n */\n\n/**\n * 防抖函数\n */\nexport const debounce = <T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n): ((...args: Parameters<T>) => void) => {\n  let timeout: any;\n\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), wait);\n  };\n};\n\n/**\n * 节流函数\n */\nexport const throttle = <T extends (...args: any[]) => any>(\n  func: T,\n  limit: number\n): ((...args: Parameters<T>) => void) => {\n  let inThrottle: boolean;\n\n  return (...args: Parameters<T>) => {\n    if (!inThrottle) {\n      func(...args);\n      inThrottle = true;\n      setTimeout(() => (inThrottle = false), limit);\n    }\n  };\n};\n\n/**\n * 深拷贝\n */\nexport const deepClone = <T>(obj: T): T => {\n  if (obj === null || typeof obj !== 'object') {\n    return obj;\n  }\n\n  if (obj instanceof Date) {\n    return new Date(obj.getTime()) as T;\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map((item) => deepClone(item)) as T;\n  }\n\n  const cloned = {} as T;\n  Object.keys(obj as object).forEach((key) => {\n    (cloned as any)[key] = deepClone((obj as any)[key]);\n  });\n\n  return cloned;\n};\n\n/**\n * 生成唯一ID\n */\nexport const generateId = (): string => {\n  return Date.now().toString(36) + Math.random().toString(36).substr(2);\n};\n\n/**\n * 休眠函数\n */\nexport const sleep = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\n/**\n * 数组去重\n */\nexport const unique = <T>(array: T[]): T[] => {\n  return Array.from(new Set(array));\n};\n\n/**\n * 数组去重（根据指定字段）\n */\nexport const uniqueBy = <T>(array: T[], key: keyof T): T[] => {\n  const seen = new Set();\n  return array.filter((item) => {\n    const value = item[key];\n    if (seen.has(value)) {\n      return false;\n    }\n    seen.add(value);\n    return true;\n  });\n};\n\n/**\n * 数组分组\n */\nexport const groupBy = <T>(\n  array: T[],\n  key: keyof T\n): { [key: string]: T[] } => {\n  return array.reduce((groups, item) => {\n    const groupKey = String(item[key]);\n    if (!groups[groupKey]) {\n      groups[groupKey] = [];\n    }\n    groups[groupKey].push(item);\n    return groups;\n  }, {} as { [key: string]: T[] });\n};\n\n/**\n * 数字格式化\n */\nexport const formatNumber = (num: number, decimals: number = 2): string => {\n  if (isNaN(num)) {\n    return \"0\";\n  }\n  return Number(num).toFixed(decimals);\n};\n\n/**\n * 文件大小格式化\n */\nexport const formatFileSize = (bytes: number): string => {\n  if (bytes === 0) {\n    return \"0 B\";\n  }\n\n  const k = 1024;\n  const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\n/**\n * 随机颜色生成\n */\nexport const generateRandomColor = (): string => {\n  return '#' + Math.floor(Math.random() * 16777215).toString(16);\n};\n\n/**\n * 获取设备信息\n */\nexport const getDeviceInfo = () => {\n  // 简化版本，实际项目中应该使用react-native-device-info\n  return {\n    platform: 'ios', // 或 'android'\n    version: '1.0.0',\n    buildNumber: '1',\n  };\n};\n\n/**\n * 检查是否为空值\n */\nexport const isEmpty = (value: any): boolean => {\n  if (value == null) {\n    return true;\n  }\n  if (typeof value === 'string') {\n    return value.trim() === '';\n  }\n  if (Array.isArray(value)) {\n    return value.length === 0;\n  }\n  if (typeof value === 'object') {\n    return Object.keys(value).length === 0;\n  }\n  return false;\n};\n\n/**\n * 安全的JSON解析\n */\nexport const safeJsonParse = <T>(str: string, defaultValue: T): T => {\n  try {\n    return JSON.parse(str);\n  } catch {\n    return defaultValue;\n  }\n};\n"],"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","ignoreList":[]}