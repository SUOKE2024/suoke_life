{"version":3,"names":["_performanceMonitor","require","cov_1r8gkszwxf","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","StateOptimizer","exports","_classCallCheck2","default","stateData","Map","stateHistory","updateTimers","batchedUpdates","batchTimer","batchDelay","_createClass2","key","value","startStateUpdate","stateName","startTime","performance","now","set","endStateUpdate","oldValue","newValue","source","arguments","length","endTime","get","duration","delete","isUnnecessary","isUnnecessaryUpdate","changeEvent","timestamp","Date","recordStateChange","performanceMonitor","recordUserInteraction","JSON","stringify","error","_ref","history","push","splice","existing","newUpdateCount","updateCount","newAverageUpdateTime","averageUpdateTime","Object","assign","lastUpdateTime","totalChanges","unnecessaryUpdates","batchStateUpdate","update","_this","Promise","resolve","updates","setTimeout","processBatchedUpdates","_this2","clearTimeout","forEach","mergedUpdate","reduce","acc","_ref2","_ref3","clear","getStatePerformanceData","data","Array","from","values","getStateHistory","limit","slice","getOptimizationSuggestions","_this3","suggestions","unnecessaryRate","severity","message","toFixed","impact","recentChanges","hasComplexChanges","some","change","changeSize","_unused","sort","a","getStateStats","states","totalStates","totalUpdates","sum","state","totalUnnecessaryUpdates","unnecessaryUpdateRate","slowestStates","concat","mostUpdatedStates","clearStateData","exportStateData","events","_toConsumableArray2","performanceData","stats","getInstance","instance","stateOptimizer","trackStateUpdate","getStateOptimizationSuggestions","clearStatePerformanceData"],"sources":["stateOptimizer.ts"],"sourcesContent":["/**\n * 应用状态管理优化工具\n * 提供状态更新优化、状态变化追踪、状态性能监控等功能\n */\n\nimport { performanceMonitor } from './performanceMonitor';\n\nexport interface StateChangeEvent {\n  stateName: string;\n  oldValue: any;\n  newValue: any;\n  timestamp: number;\n  duration: number;\n  source: string;\n}\n\nexport interface StatePerformanceData {\n  stateName: string;\n  updateCount: number;\n  averageUpdateTime: number;\n  lastUpdateTime: number;\n  totalChanges: number;\n  unnecessaryUpdates: number;\n  timestamp: number;\n}\n\nexport interface StateOptimizationSuggestion {\n  type: 'batching' | 'memoization' | 'normalization' | 'splitting';\n  severity: 'low' | 'medium' | 'high';\n  message: string;\n  stateName: string;\n  impact: number;\n}\n\n/**\n * 状态优化器类\n */\nexport class StateOptimizer {\n  private static instance: StateOptimizer;\n  private stateData: Map<string, StatePerformanceData> = new Map();\n  private stateHistory: Map<string, StateChangeEvent[]> = new Map();\n  private updateTimers: Map<string, number> = new Map();\n  private batchedUpdates: Map<string, any[]> = new Map();\n  private batchTimer: any = null;\n  private readonly batchDelay = 16; // 16ms批量延迟（一帧时间）\n\n  private constructor() {}\n\n  static getInstance(): StateOptimizer {\n    if (!StateOptimizer.instance) {\n      StateOptimizer.instance = new StateOptimizer();\n    }\n    return StateOptimizer.instance;\n  }\n\n  /**\n   * 开始状态更新计时\n   */\n  startStateUpdate(stateName: string): void {\n    const startTime = performance.now();\n    this.updateTimers.set(stateName, startTime);\n  }\n\n  /**\n   * 结束状态更新计时\n   */\n  endStateUpdate(\n    stateName: string, \n    oldValue: any, \n    newValue: any, \n    source: string = 'unknown'\n  ): void {\n    const endTime = performance.now();\n    const startTime = this.updateTimers.get(stateName);\n    \n    if (!startTime) return;\n    \n    const duration = endTime - startTime;\n    this.updateTimers.delete(stateName);\n    \n    // 检查是否为不必要的更新\n    const isUnnecessary = this.isUnnecessaryUpdate(oldValue, newValue);\n    \n    // 记录状态变化事件\n    const changeEvent: StateChangeEvent = {\n      stateName,\n      oldValue,\n      newValue,\n      timestamp: Date.now(),\n      duration,\n      source,\n    };\n    \n    this.recordStateChange(changeEvent, isUnnecessary);\n    \n    // 记录到性能监控器\n    performanceMonitor.recordUserInteraction(\n      'state_update',\n      stateName,\n      undefined,\n      { duration, source }\n    );\n  }\n\n  /**\n   * 检查是否为不必要的更新\n   */\n  private isUnnecessaryUpdate(oldValue: any, newValue: any): boolean {\n    // 深度比较检查值是否真的发生了变化\n    try {\n      return JSON.stringify(oldValue) === JSON.stringify(newValue);\n    } catch (error) {\n      // 如果无法序列化，使用浅比较\n      return oldValue === newValue;\n    }\n  }\n\n  /**\n   * 记录状态变化\n   */\n  private recordStateChange(changeEvent: StateChangeEvent, isUnnecessary: boolean): void {\n    const { stateName, duration } = changeEvent;\n    \n    // 更新状态历史\n    const history = this.stateHistory.get(stateName) || [];\n    history.push(changeEvent);\n    \n    // 限制历史记录数量\n    if (history.length > 100) {\n      history.splice(0, history.length - 100);\n    }\n    this.stateHistory.set(stateName, history);\n    \n    // 更新性能数据\n    const existing = this.stateData.get(stateName);\n    \n    if (existing) {\n      const newUpdateCount = existing.updateCount + 1;\n      const newAverageUpdateTime = \n        (existing.averageUpdateTime * existing.updateCount + duration) / newUpdateCount;\n      \n      this.stateData.set(stateName, {\n        ...existing,\n        updateCount: newUpdateCount,\n        averageUpdateTime: newAverageUpdateTime,\n        lastUpdateTime: duration,\n        totalChanges: existing.totalChanges + 1,\n        unnecessaryUpdates: existing.unnecessaryUpdates + (isUnnecessary ? 1 : 0),\n        timestamp: Date.now(),\n      });\n    } else {\n      this.stateData.set(stateName, {\n        stateName,\n        updateCount: 1,\n        averageUpdateTime: duration,\n        lastUpdateTime: duration,\n        totalChanges: 1,\n        unnecessaryUpdates: isUnnecessary ? 1 : 0,\n        timestamp: Date.now(),\n      });\n    }\n  }\n\n  /**\n   * 批量状态更新\n   */\n  batchStateUpdate(stateName: string, update: any): Promise<void> {\n    return new Promise((resolve) => {\n      const updates = this.batchedUpdates.get(stateName) || [];\n      updates.push({ update, resolve });\n      this.batchedUpdates.set(stateName, updates);\n\n      if (!this.batchTimer) {\n        this.batchTimer = setTimeout(() => {\n          this.processBatchedUpdates();\n        }, this.batchDelay);\n      }\n    });\n  }\n\n  /**\n   * 处理批量更新\n   */\n  private processBatchedUpdates(): void {\n    if (this.batchTimer) {\n      clearTimeout(this.batchTimer);\n      this.batchTimer = null;\n    }\n\n    this.batchedUpdates.forEach((updates, stateName) => {\n      if (updates.length > 0) {\n        // 合并所有更新\n        const mergedUpdate = updates.reduce((acc, { update }) => {\n          return { ...acc, ...update };\n        }, {});\n\n        // 执行合并后的更新\n        this.startStateUpdate(`${stateName}_batch`);\n        \n        // 这里应该调用实际的状态更新逻辑\n        // 由于这是一个通用工具，具体的更新逻辑需要在使用时提供\n        \n        this.endStateUpdate(`${stateName}_batch`, {}, mergedUpdate, 'batch');\n\n        // 解析所有Promise\n        updates.forEach(({ resolve }) => resolve());\n      }\n    });\n\n    this.batchedUpdates.clear();\n  }\n\n  /**\n   * 获取状态性能数据\n   */\n  getStatePerformanceData(stateName?: string): StatePerformanceData[] {\n    if (stateName) {\n      const data = this.stateData.get(stateName);\n      return data ? [data] : [];\n    }\n    return Array.from(this.stateData.values());\n  }\n\n  /**\n   * 获取状态变化历史\n   */\n  getStateHistory(stateName: string, limit: number = 50): StateChangeEvent[] {\n    const history = this.stateHistory.get(stateName) || [];\n    return history.slice(-limit);\n  }\n\n  /**\n   * 获取优化建议\n   */\n  getOptimizationSuggestions(): StateOptimizationSuggestion[] {\n    const suggestions: StateOptimizationSuggestion[] = [];\n    \n    this.stateData.forEach((data, stateName) => {\n      // 检查不必要的更新\n      const unnecessaryRate = data.unnecessaryUpdates / data.updateCount;\n      if (unnecessaryRate > 0.3) {\n        suggestions.push({\n          type: 'memoization',\n          severity: unnecessaryRate > 0.7 ? 'high' : 'medium',\n          message: `状态 ${stateName} 有 ${(unnecessaryRate * 100).toFixed(1)}% 的不必要更新，建议使用记忆化优化`,\n          stateName,\n          impact: unnecessaryRate,\n        });\n      }\n\n      // 检查更新频率\n      if (data.updateCount > 100 && data.averageUpdateTime > 5) {\n        suggestions.push({\n          type: 'batching',\n          severity: 'medium',\n          message: `状态 ${stateName} 更新频繁，建议使用批量更新优化`,\n          stateName,\n          impact: data.updateCount / 100,\n        });\n      }\n\n      // 检查更新耗时\n      if (data.averageUpdateTime > 16) {\n        suggestions.push({\n          type: 'normalization',\n          severity: 'high',\n          message: `状态 ${stateName} 更新耗时过长，建议优化数据结构或拆分状态`,\n          stateName,\n          impact: data.averageUpdateTime / 16,\n        });\n      }\n\n      // 检查状态复杂度\n      const history = this.stateHistory.get(stateName) || [];\n      if (history.length > 0) {\n        const recentChanges = history.slice(-10);\n        const hasComplexChanges = recentChanges.some(change => {\n          try {\n            const changeSize = JSON.stringify(change.newValue).length;\n            return changeSize > 10000; // 10KB阈值\n          } catch {\n            return false;\n          }\n        });\n\n        if (hasComplexChanges) {\n          suggestions.push({\n            type: 'splitting',\n            severity: 'medium',\n            message: `状态 ${stateName} 数据结构复杂，建议拆分为多个小状态`,\n            stateName,\n            impact: 2,\n          });\n        }\n      }\n    });\n\n    return suggestions.sort((a, b) => b.impact - a.impact);\n  }\n\n  /**\n   * 获取状态统计\n   */\n  getStateStats(): {\n    totalStates: number;\n    totalUpdates: number;\n    averageUpdateTime: number;\n    unnecessaryUpdateRate: number;\n    slowestStates: StatePerformanceData[];\n    mostUpdatedStates: StatePerformanceData[];\n    suggestions: StateOptimizationSuggestion[];\n  } {\n    const states = Array.from(this.stateData.values());\n    const totalStates = states.length;\n    const totalUpdates = states.reduce((sum, state) => sum + state.updateCount, 0);\n    const totalUnnecessaryUpdates = states.reduce((sum, state) => sum + state.unnecessaryUpdates, 0);\n    \n    const averageUpdateTime = states.length > 0 \n      ? states.reduce((sum, state) => sum + state.averageUpdateTime, 0) / states.length\n      : 0;\n\n    const unnecessaryUpdateRate = totalUpdates > 0 ? totalUnnecessaryUpdates / totalUpdates : 0;\n\n    const slowestStates = [...states]\n      .sort((a, b) => b.averageUpdateTime - a.averageUpdateTime)\n      .slice(0, 5);\n\n    const mostUpdatedStates = [...states]\n      .sort((a, b) => b.updateCount - a.updateCount)\n      .slice(0, 5);\n\n    const suggestions = this.getOptimizationSuggestions();\n\n    return {\n      totalStates,\n      totalUpdates,\n      averageUpdateTime,\n      unnecessaryUpdateRate,\n      slowestStates,\n      mostUpdatedStates,\n      suggestions,\n    };\n  }\n\n  /**\n   * 清除状态数据\n   */\n  clearStateData(stateName?: string): void {\n    if (stateName) {\n      this.stateData.delete(stateName);\n      this.stateHistory.delete(stateName);\n    } else {\n      this.stateData.clear();\n      this.stateHistory.clear();\n    }\n  }\n\n  /**\n   * 导出状态数据\n   */\n  exportStateData(): {\n    performanceData: StatePerformanceData[];\n    history: Record<string, StateChangeEvent[]>;\n    stats: ReturnType<typeof this.getStateStats>;\n    timestamp: number;\n  } {\n    const history: Record<string, StateChangeEvent[]> = {};\n    this.stateHistory.forEach((events, stateName) => {\n      history[stateName] = [...events];\n    });\n\n    return {\n      performanceData: Array.from(this.stateData.values()),\n      history,\n      stats: this.getStateStats(),\n      timestamp: Date.now(),\n    };\n  }\n}\n\n// 导出单例实例\nexport const stateOptimizer = StateOptimizer.getInstance();\n\n// 便捷函数\nexport const trackStateUpdate = (\n  stateName: string, \n  oldValue: any, \n  newValue: any, \n  source?: string\n) => {\n  stateOptimizer.startStateUpdate(stateName);\n  // 模拟异步更新\n  setTimeout(() => {\n    stateOptimizer.endStateUpdate(stateName, oldValue, newValue, source);\n  }, 0);\n};\n\nexport const batchStateUpdate = (stateName: string, update: any) => {\n  return stateOptimizer.batchStateUpdate(stateName, update);\n};\n\nexport const getStatePerformanceData = (stateName?: string) => {\n  return stateOptimizer.getStatePerformanceData(stateName);\n};\n\nexport const getStateOptimizationSuggestions = () => {\n  return stateOptimizer.getOptimizationSuggestions();\n};\n\nexport const getStateStats = () => {\n  return stateOptimizer.getStateStats();\n};\n\nexport const clearStatePerformanceData = (stateName?: string) => {\n  stateOptimizer.clearStateData(stateName);\n}; "],"mappings":";;;;;;;;AAKA,IAAAA,mBAAA,GAAAC,OAAA;AAA0D,SAAAC,eeAAA;IAAArB,IAAA;EAAA;EAAA,IAAAsB,QAAA,GAAArB,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAmB,QAAA,CAAAvB,IAAA,KAAAuB,QAAA,CAAAvB,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAAsB,QAAA,CAAAvB,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAmB,cAAA,GAAAD,QAAA,CAAAvB,IAAA;EAAA;IAAAD,cAAA,YAAAA,CAAA;MAAA,OAAAyB,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAzB,cAAA;AAAA,IAgC7C0B,cAAc,GAAAC,OAAA,CAAAD,cAAA;EASzB,SAAAA,eAAA,EAAsB;IAAA,IAAAE,gBAAA,CAAAC,OAAA,QAAAH,cAAA;IAAA,KAPdI,SAAS,IAAA9B,cAAA,GAAAoB,CAAA,OAAsC,IAAIW,GAAG,CAAC,CAAC;IAAA,KACxDC,YAAY,IAAAhC,cAAA,GAAAoB,CAAA,OAAoC,IAAIW,GAAG,CAAC,CAAC;IAAA,KACzDE,YAAY,IAAAjC,cAAA,GAAAoB,CAAA,OAAwB,IAAIW,GAAG,CAAC,CAAC;IAAA,KAC7CG,cAAc,IAAAlC,cAAA,GAAAoB,CAAA,OAAuB,IAAIW,GAAG,CAAC,CAAC;IAAA,KAC9CI,UAAU,IAAAnC,cAAA,GAAAoB,CAAA,OAAQ,IAAI;IAAA,KACbgB,UAAU,IAAApC,cAAA,GAAAoB,CAAA,OAAG,EAAE;IAAApB,cAAA,GAAAqB,CAAA;EAET;EAAC,WAAAgB,aAAA,CAAAR,OAAA,EAAAH,cAAA;IAAAY,GAAA;IAAAC,KAAA,EAYxB,SAAAC,gBAAgBA,CAACC,SAAiB,EAAQ;MAAAzC,cAAA,GAAAqB,CAAA;MACxC,IAAMqB,SAAS,IAAA1C,cAAA,GAAAoB,CAAA,OAAGuB,WAAW,CAACC,GAAG,CAAC,CAAC;MAAC5C,cAAA,GAAAoB,CAAA;MACpC,IAAI,CAACa,YAAY,CAACY,GAAG,CAACJ,SAAS,EAAEC,SAAS,CAAC;IAC7C;EAAC;IAAAJ,GAAA;IAAAC,KAAA,EAKD,SAAAO,cAAcA,CACZL,SAAiB,EACjBM,QAAa,EACbC,QAAa,EAEP;MAAA,IADNC,MAAc,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAA/B,SAAA,GAAA+B,SAAA,OAAAlD,cAAA,GAAAsB,CAAA,UAAG,SAAS;MAAAtB,cAAA,GAAAqB,CAAA;MAE1B,IAAM+B,OAAO,IAAApD,cAAA,GAAAoB,CAAA,QAAGuB,WAAW,CAACC,GAAG,CAAC,CAAC;MACjC,IAAMF,SAAS,IAAA1C,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACa,YAAY,CAACoB,GAAG,CAACZ,SAAS,CAAC;MAACzC,cAAA,GAAAoB,CAAA;MAEnD,IAAI,CAACsB,SAAS,EAAE;QAAA1C,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QAAA;MAAM,CAAC;QAAApB,cAAA,GAAAsB,CAAA;MAAA;MAEvB,IAAMgC,QAAQ,IAAAtD,cAAA,GAAAoB,CAAA,QAAGgC,OAAO,GAAGV,SAAS;MAAC1C,cAAA,GAAAoB,CAAA;MACrC,IAAI,CAACa,YAAY,CAACsB,MAAM,CAACd,SAAS,CAAC;MAGnC,IAAMe,aAAa,IAAAxD,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACqC,mBAAmB,CAACV,QAAQ,EAAEC,QAAQ,CAAC;MAGlE,IAAMU,WAA6B,IAAA1D,cAAA,GAAAoB,CAAA,QAAG;QACpCqB,SAAS,EAATA,SAAS;QACTM,QAAQ,EAARA,QAAQ;QACRC,QAAQ,EAARA,QAAQ;QACRW,SAAS,EAAEC,IAAI,CAAChB,GAAG,CAAC,CAAC;QACrBU,QAAQ,EAARA,QAAQ;QACRL,MAAM,EAANA;MACF,CAAC;MAACjD,cAAA,GAAAoB,CAAA;MAEF,IAAI,CAACyC,iBAAiB,CAACH,WAAW,EAAEF,aAAa,CAAC;MAACxD,cAAA,GAAAoB,CAAA;MAGnD0C,sCAAkB,CAACC,qBAAqB,CACtC,cAAc,EACdtB,SAAS,EACTtB,SAAS,EACT;QAAEmC,QAAQ,EAARA,QAAQ;QAAEL,MAAM,EAANA;MAAO,CACrB,CAAC;IACH;EAAC;IAAAX,GAAA;IAAAC,KAAA,EAKD,SAAQkB,mBAAmBA,CAACV,QAAa,EAAEC,QAAa,EAAW;MAAAhD,cAAA,GAAAqB,CAAA;MAAArB,cAAA,GAAAoB,CAAA;MAEjE,IAAI;QAAApB,cAAA,GAAAoB,CAAA;QACF,OAAO4C,IAAI,CAACC,SAAS,CAAClB,QAAQ,CAAC,KAAKiB,IAAI,CAACC,SAAS,CAACjB,QAAQ,CAAC;MAC9D,CAAC,CAAC,OAAOkB,KAAK,EAAE;QAAAlE,cAAA,GAAAoB,CAAA;QAEd,OAAO2B,QAAQ,KAAKC,QAAQ;MAC9B;IACF;EAAC;IAAAV,GAAA;IAAAC,KAAA,EAKD,SAAQsB,iBAAiBA,CAACH,WAA6B,EAAEF,aAAsB,EAAQ;MAAAxD,cAAA,GAAAqB,CAAA;MACrF,IAAA8C,IAAA,IAAAnE,cAAA,GAAAoB,CAAA,QAAgCsC,WAAW;QAAnCjB,SAAS,GAAA0B,IAAA,CAAT1B,SAAS;QAAEa,QAAQ,GAAAa,IAAA,CAARb,QAAQ;MAG3B,IAAMc,OAAO,IAAApE,cAAA,GAAAoB,CAAA,QAAG,CAAApB,cAAA,GAAAsB,CAAA,cAAI,CAACU,YAAY,CAACqB,GAAG,CAACZ,SAAS,CAAC,MAAAzC,cAAA,GAAAsB,CAAA,UAAI,EAAE;MAACtB,cAAA,GAAAoB,CAAA;MACvDgD,OAAO,CAACC,IAAI,CAACX,WAAW,CAAC;MAAC1D,cAAA,GAAAoB,CAAA;MAG1B,IAAIgD,OAAO,CAACjB,MAAM,GAAG,GAAG,EAAE;QAAAnD,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACxBgD,OAAO,CAACE,MAAM,CAAC,CAAC,EAAEF,OAAO,CAACjB,MAAM,GAAG,GAAG,CAAC;MACzC,CAAC;QAAAnD,cAAA,GAAAsB,CAAA;MAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACD,IAAI,CAACY,YAAY,CAACa,GAAG,CAACJ,SAAS,EAAE2B,OAAO,CAAC;MAGzC,IAAMG,QAAQ,IAAAvE,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACU,SAAS,CAACuB,GAAG,CAACZ,SAAS,CAAC;MAACzC,cAAA,GAAAoB,CAAA;MAE/C,IAAImD,QAAQ,EAAE;QAAAvE,cAAA,GAAAsB,CAAA;QACZ,IAAMkD,cAAc,IAAAxE,cAAA,GAAAoB,CAAA,QAAGmD,QAAQ,CAACE,WAAW,GAAG,CAAC;QAC/C,IAAMC,oBAAoB,IAAA1E,cAAA,GAAAoB,CAAA,QACxB,CAACmD,QAAQ,CAACI,iBAAiB,GAAGJ,QAAQ,CAACE,WAAW,GAAGnB,QAAQ,IAAIkB,cAAc;QAACxE,cAAA,GAAAoB,CAAA;QAElF,IAAI,CAACU,SAAS,CAACe,GAAG,CAACJ,SAAS,EAAAmC,MAAA,CAAAC,MAAA,KACvBN,QAAQ;UACXE,WAAW,EAAED,cAAc;UAC3BG,iBAAiB,EAAED,oBAAoB;UACvCI,cAAc,EAAExB,QAAQ;UACxByB,YAAY,EAAER,QAAQ,CAACQ,YAAY,GAAG,CAAC;UACvCC,kBAAkB,EAAET,QAAQ,CAACS,kBAAkB,IAAIxB,aAAa,IAAAxD,cAAA,GAAAsB,CAAA,UAAG,CAAC,KAAAtB,cAAA,GAAAsB,CAAA,UAAG,CAAC,EAAC;UACzEqC,SAAS,EAAEC,IAAI,CAAChB,GAAG,CAAC;QAAC,EACtB,CAAC;MACJ,CAAC,MAAM;QAAA5C,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACL,IAAI,CAACU,SAAS,CAACe,GAAG,CAACJ,SAAS,EAAE;UAC5BA,SAAS,EAATA,SAAS;UACTgC,WAAW,EAAE,CAAC;UACdE,iBAAiB,EAAErB,QAAQ;UAC3BwB,cAAc,EAAExB,QAAQ;UACxByB,YAAY,EAAE,CAAC;UACfC,kBAAkB,EAAExB,aAAa,IAAAxD,cAAA,GAAAsB,CAAA,UAAG,CAAC,KAAAtB,cAAA,GAAAsB,CAAA,UAAG,CAAC;UACzCqC,SAAS,EAAEC,IAAI,CAAChB,GAAG,CAAC;QACtB,CAAC,CAAC;MACJ;IACF;EAAC;IAAAN,GAAA;IAAAC,KAAA,EAKD,SAAA0C,gBAAgBA,CAACxC,SAAiB,EAAEyC,MAAW,EAAiB;MAAA,IAAAC,KAAA;MAAAnF,cAAA,GAAAqB,CAAA;MAAArB,cAAA,GAAAoB,CAAA;MAC9D,OAAO,IAAIgE,OAAO,CAAC,UAACC,OAAO,EAAK;QAAArF,cAAA,GAAAqB,CAAA;QAC9B,IAAMiE,OAAO,IAAAtF,cAAA,GAAAoB,CAAA,QAAG,CAAApB,cAAA,GAAAsB,CAAA,UAAA6D,KAAI,CAACjD,cAAc,CAACmB,GAAG,CAACZ,SAAS,CAAC,MAAAzC,cAAA,GAAAsB,CAAA,UAAI,EAAE;QAACtB,cAAA,GAAAoB,CAAA;QACzDkE,OAAO,CAACjB,IAAI,CAAC;UAAEa,MAAM,EAANA,MAAM;UAAEG,OAAO,EAAPA;QAAQ,CAAC,CAAC;QAACrF,cAAA,GAAAoB,CAAA;QAClC+D,KAAI,CAACjD,cAAc,CAACW,GAAG,CAACJ,SAAS,EAAE6C,OAAO,CAAC;QAACtF,cAAA,GAAAoB,CAAA;QAE5C,IAAI,CAAC+D,KAAI,CAAChD,UAAU,EAAE;UAAAnC,cAAA,GAAAsB,CAAA;UAAAtB,cAAA,GAAAoB,CAAA;UACpB+D,KAAI,CAAChD,UAAU,GAAGoD,UAAU,CAAC,YAAM;YAAAvF,cAAA,GAAAqB,CAAA;YAAArB,cAAA,GAAAoB,CAAA;YACjC+D,KAAI,CAACK,qBAAqB,CAAC,CAAC;UAC9B,CAAC,EAAEL,KAAI,CAAC/C,UAAU,CAAC;QACrB,CAAC;UAAApC,cAAA,GAAAsB,CAAA;QAAA;MACH,CAAC,CAAC;IACJ;EAAC;IAAAgB,GAAA;IAAAC,KAAA,EAKD,SAAQiD,qBAAqBA,CAAA,EAAS;MAAA,IAAAC,MAAA;MAAAzF,cAAA,GAAAqB,CAAA;MAAArB,cAAA,GAAAoB,CAAA;MACpC,IAAI,IAAI,CAACe,UAAU,EAAE;QAAAnC,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACnBsE,YAAY,CAAC,IAAI,CAACvD,UAAU,CAAC;QAACnC,cAAA,GAAAoB,CAAA;QAC9B,IAAI,CAACe,UAAU,GAAG,IAAI;MACxB,CAAC;QAAAnC,cAAA,GAAAsB,CAAA;MAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAED,IAAI,CAACc,cAAc,CAACyD,OAAO,CAAC,UAACL,OAAO,EAAE7C,SAAS,EAAK;QAAAzC,cAAA,GAAAqB,CAAA;QAAArB,cAAA,GAAAoB,CAAA;QAClD,IAAIkE,OAAO,CAACnC,MAAM,GAAG,CAAC,EAAE;UAAAnD,cAAA,GAAAsB,CAAA;UAEtB,IAAMsE,YAAY,IAAA5F,cAAA,GAAAoB,CAAA,QAAGkE,OAAO,CAACO,MAAM,CAAC,UAACC,GAAG,EAAAC,KAAA,EAAiB;YAAA,IAAbb,MAAM,GAAAa,KAAA,CAANb,MAAM;YAAAlF,cAAA,GAAAqB,CAAA;YAAArB,cAAA,GAAAoB,CAAA;YAChD,OAAAwD,MAAA,CAAAC,MAAA,KAAYiB,GAAG,EAAKZ,MAAM;UAC5B,CAAC,EAAE,CAAC,CAAC,CAAC;UAAClF,cAAA,GAAAoB,CAAA;UAGPqE,MAAI,CAACjD,gBAAgB,CAAC,GAAGC,SAAS,QAAQ,CAAC;UAACzC,cAAA,GAAAoB,CAAA;UAK5CqE,MAAI,CAAC3C,cAAc,CAAC,GAAGL,SAAS,QAAQ,EAAE,CAAC,CAAC,EAAEmD,YAAY,EAAE,OAAO,CAAC;UAAC5F,cAAA,GAAAoB,CAAA;UAGrEkE,OAAO,CAACK,OAAO,CAAC,UAAAK,KAAA,EAAiB;YAAA,IAAdX,OAAO,GAAAW,KAAA,CAAPX,OAAO;YAAArF,cAAA,GAAAqB,CAAA;YAAArB,cAAA,GAAAoB,CAAA;YAAO,OAAAiE,OAAO,CAAC,CAAC;UAAD,CAAC,CAAC;QAC7C,CAAC;UAAArF,cAAA,GAAAsB,CAAA;QAAA;MACH,CAAC,CAAC;MAACtB,cAAA,GAAAoB,CAAA;MAEH,IAAI,CAACc,cAAc,CAAC+D,KAAK,CAAC,CAAC;IAC7B;EAAC;IAAA3D,GAAA;IAAAC,KAAA,EAKD,SAAA2D,uBAAuBA,CAACzD,SAAkB,EAA0B;MAAAzC,cAAA,GAAAqB,CAAA;MAAArB,cAAA,GAAAoB,CAAA;MAClE,IAAIqB,SAAS,EAAE;QAAAzC,cAAA,GAAAsB,CAAA;QACb,IAAM6E,IAAI,IAAAnG,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACU,SAAS,CAACuB,GAAG,CAACZ,SAAS,CAAC;QAACzC,cAAA,GAAAoB,CAAA;QAC3C,OAAO+E,IAAI,IAAAnG,cAAA,GAAAsB,CAAA,WAAG,CAAC6E,IAAI,CAAC,KAAAnG,cAAA,GAAAsB,CAAA,WAAG,EAAE;MAC3B,CAAC;QAAAtB,cAAA,GAAAsB,CAAA;MAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACD,OAAOgF,KAAK,CAACC,IAAI,CAAC,IAAI,CAACvE,SAAS,CAACwE,MAAM,CAAC,CAAC,CAAC;IAC5C;EAAC;IAAAhE,GAAA;IAAAC,KAAA,EAKD,SAAAgE,eAAeA,CAAC9D,SAAiB,EAA0C;MAAA,IAAxC+D,KAAa,GAAAtD,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAA/B,SAAA,GAAA+B,SAAA,OAAAlD,cAAA,GAAAsB,CAAA,WAAG,EAAE;MAAAtB,cAAA,GAAAqB,CAAA;MACnD,IAAM+C,OAAO,IAAApE,cAAA,GAAAoB,CAAA,QAAG,CAAApB,cAAA,GAAAsB,CAAA,eAAI,CAACU,YAAY,CAACqB,GAAG,CAACZ,SAAS,CAAC,MAAAzC,cAAA,GAAAsB,CAAA,WAAI,EAAE;MAACtB,cAAA,GAAAoB,CAAA;MACvD,OAAOgD,OAAO,CAACqC,KAAK,CAAC,CAACD,KAAK,CAAC;IAC9B;EAAC;IAAAlE,GAAA;IAAAC,KAAA,EAKD,SAAAmE,0BAA0BA,CAAA,EAAkC;MAAA,IAAAC,MAAA;MAAA3G,cAAA,GAAAqB,CAAA;MAC1D,IAAMuF,WAA0C,IAAA5G,cAAA,GAAAoB,CAAA,QAAG,EAAE;MAACpB,cAAA,GAAAoB,CAAA;MAEtD,IAAI,CAACU,SAAS,CAAC6D,OAAO,CAAC,UAACQ,IAAI,EAAE1D,SAAS,EAAK;QAAAzC,cAAA,GAAAqB,CAAA;QAE1C,IAAMwF,eAAe,IAAA7G,cAAA,GAAAoB,CAAA,QAAG+E,IAAI,CAACnB,kBAAkB,GAAGmB,IAAI,CAAC1B,WAAW;QAACzE,cAAA,GAAAoB,CAAA;QACnE,IAAIyF,eAAe,GAAG,GAAG,EAAE;UAAA7G,cAAA,GAAAsB,CAAA;UAAAtB,cAAA,GAAAoB,CAAA;UACzBwF,WAAW,CAACvC,IAAI,CAAC;YACfpD,IAAI,EAAE,aAAa;YACnB6F,QAAQ,EAAED,eAAe,GAAG,GAAG,IAAA7G,cAAA,GAAAsB,CAAA,WAAG,MAAM,KAAAtB,cAAA,GAAAsB,CAAA,WAAG,QAAQ;YACnDyF,OAAO,EAAE,MAAMtE,SAAS,MAAM,CAACoE,eAAe,GAAG,GAAG,EAAEG,OAAO,CAAC,CAAC,CAAC,oBAAoB;YACpFvE,SAAS,EAATA,SAAS;YACTwE,MAAM,EAAEJ;UACV,CAAC,CAAC;QACJ,CAAC;UAAA7G,cAAA,GAAAsB,CAAA;QAAA;QAAAtB,cAAA,GAAAoB,CAAA;QAGD,IAAI,CAAApB,cAAA,GAAAsB,CAAA,WAAA6E,IAAI,CAAC1B,WAAW,GAAG,GAAG,MAAAzE,cAAA,GAAAsB,CAAA,WAAI6E,IAAI,CAACxB,iBAAiB,GAAG,CAAC,GAAE;UAAA3E,cAAA,GAAAsB,CAAA;UAAAtB,cAAA,GAAAoB,CAAA;UACxDwF,WAAW,CAACvC,IAAI,CAAC;YACfpD,IAAI,EAAE,UAAU;YAChB6F,QAAQ,EAAE,QAAQ;YAClBC,OAAO,EAAE,MAAMtE,SAAS,kBAAkB;YAC1CA,SAAS,EAATA,SAAS;YACTwE,MAAM,EAAEd,IAAI,CAAC1B,WAAW,GAAG;UAC7B,CAAC,CAAC;QACJ,CAAC;UAAAzE,cAAA,GAAAsB,CAAA;QAAA;QAAAtB,cAAA,GAAAoB,CAAA;QAGD,IAAI+E,IAAI,CAACxB,iBAAiB,GAAG,EAAE,EAAE;UAAA3E,cAAA,GAAAsB,CAAA;UAAAtB,cAAA,GAAAoB,CAAA;UAC/BwF,WAAW,CAACvC,IAAI,CAAC;YACfpD,IAAI,EAAE,eAAe;YACrB6F,QAAQ,EAAE,MAAM;YAChBC,OAAO,EAAE,MAAMtE,SAAS,uBAAuB;YAC/CA,SAAS,EAATA,SAAS;YACTwE,MAAM,EAAEd,IAAI,CAACxB,iBAAiB,GAAG;UACnC,CAAC,CAAC;QACJ,CAAC;UAAA3E,cAAA,GAAAsB,CAAA;QAAA;QAGD,IAAM8C,OAAO,IAAApE,cAAA,GAAAoB,CAAA,QAAG,CAAApB,cAAA,GAAAsB,CAAA,WAAAqF,MAAI,CAAC3E,YAAY,CAACqB,GAAG,CAACZ,SAAS,CAAC,MAAAzC,cAAA,GAAAsB,CAAA,WAAI,EAAE;QAACtB,cAAA,GAAAoB,CAAA;QACvD,IAAIgD,OAAO,CAACjB,MAAM,GAAG,CAAC,EAAE;UAAAnD,cAAA,GAAAsB,CAAA;UACtB,IAAM4F,aAAa,IAAAlH,cAAA,GAAAoB,CAAA,QAAGgD,OAAO,CAACqC,KAAK,CAAC,CAAC,EAAE,CAAC;UACxC,IAAMU,iBAAiB,IAAAnH,cAAA,GAAAoB,CAAA,QAAG8F,aAAa,CAACE,IAAI,CAAC,UAAAC,MAAM,EAAI;YAAArH,cAAA,GAAAqB,CAAA;YAAArB,cAAA,GAAAoB,CAAA;YACrD,IAAI;cACF,IAAMkG,UAAU,IAAAtH,cAAA,GAAAoB,CAAA,QAAG4C,IAAI,CAACC,SAAS,CAACoD,MAAM,CAACrE,QAAQ,CAAC,CAACG,MAAM;cAACnD,cAAA,GAAAoB,CAAA;cAC1D,OAAOkG,UAAU,GAAG,KAAK;YAC3B,CAAC,CAAC,OAAAC,OAAA,EAAM;cAAAvH,cAAA,GAAAoB,CAAA;cACN,OAAO,KAAK;YACd;UACF,CAAC,CAAC;UAACpB,cAAA,GAAAoB,CAAA;UAEH,IAAI+F,iBAAiB,EAAE;YAAAnH,cAAA,GAAAsB,CAAA;YAAAtB,cAAA,GAAAoB,CAAA;YACrBwF,WAAW,CAACvC,IAAI,CAAC;cACfpD,IAAI,EAAE,WAAW;cACjB6F,QAAQ,EAAE,QAAQ;cAClBC,OAAO,EAAE,MAAMtE,SAAS,oBAAoB;cAC5CA,SAAS,EAATA,SAAS;cACTwE,MAAM,EAAE;YACV,CAAC,CAAC;UACJ,CAAC;YAAAjH,cAAA,GAAAsB,CAAA;UAAA;QACH,CAAC;UAAAtB,cAAA,GAAAsB,CAAA;QAAA;MACH,CAAC,CAAC;MAACtB,cAAA,GAAAoB,CAAA;MAEH,OAAOwF,WAAW,CAACY,IAAI,CAAC,UAACC,CAAC,EAAEnG,CAAC,EAAK;QAAAtB,cAAA,GAAAqB,CAAA;QAAArB,cAAA,GAAAoB,CAAA;QAAA,OAAAE,CAAC,CAAC2F,MAAM,GAAGQ,CAAC,CAACR,MAAM;MAAD,CAAC,CAAC;IACxD;EAAC;IAAA3E,GAAA;IAAAC,KAAA,EAKD,SAAAmF,aAAaA,CAAA,EAQX;MAAA1H,cAAA,GAAAqB,CAAA;MACA,IAAMsG,MAAM,IAAA3H,cAAA,GAAAoB,CAAA,QAAGgF,KAAK,CAACC,IAAI,CAAC,IAAI,CAACvE,SAAS,CAACwE,MAAM,CAAC,CAAC,CAAC;MAClD,IAAMsB,WAAW,IAAA5H,cAAA,GAAAoB,CAAA,QAAGuG,MAAM,CAACxE,MAAM;MACjC,IAAM0E,YAAY,IAAA7H,cAAA,GAAAoB,CAAA,QAAGuG,MAAM,CAAC9B,MAAM,CAAC,UAACiC,GAAG,EAAEC,KAAK,EAAK;QAAA/H,cAAA,GAAAqB,CAAA;QAAArB,cAAA,GAAAoB,CAAA;QAAA,OAAA0G,GAAG,GAAGC,KAAK,CAACtD,WAAW;MAAD,CAAC,EAAE,CAAC,CAAC;MAC9E,IAAMuD,uBAAuB,IAAAhI,cAAA,GAAAoB,CAAA,QAAGuG,MAAM,CAAC9B,MAAM,CAAC,UAACiC,GAAG,EAAEC,KAAK,EAAK;QAAA/H,cAAA,GAAAqB,CAAA;QAAArB,cAAA,GAAAoB,CAAA;QAAA,OAAA0G,GAAG,GAAGC,KAAK,CAAC/C,kBAAkB;MAAD,CAAC,EAAE,CAAC,CAAC;MAEhG,IAAML,iBAAiB,IAAA3E,cAAA,GAAAoB,CAAA,QAAGuG,MAAM,CAACxE,MAAM,GAAG,CAAC,IAAAnD,cAAA,GAAAsB,CAAA,WACvCqG,MAAM,CAAC9B,MAAM,CAAC,UAACiC,GAAG,EAAEC,KAAK,EAAK;QAAA/H,cAAA,GAAAqB,CAAA;QAAArB,cAAA,GAAAoB,CAAA;QAAA,OAAA0G,GAAG,GAAGC,KAAK,CAACpD,iBAAiB;MAAD,CAAC,EAAE,CAAC,CAAC,GAAGgD,MAAM,CAACxE,MAAM,KAAAnD,cAAA,GAAAsB,CAAA,WAC/E,CAAC;MAEL,IAAM2G,qBAAqB,IAAAjI,cAAA,GAAAoB,CAAA,QAAGyG,YAAY,GAAG,CAAC,IAAA7H,cAAA,GAAAsB,CAAA,WAAG0G,uBAAuB,GAAGH,YAAY,KAAA7H,cAAA,GAAAsB,CAAA,WAAG,CAAC;MAE3F,IAAM4G,aAAa,IAAAlI,cAAA,GAAAoB,CAAA,QAAG,GAAA+G,MAAA,CAAIR,MAAM,EAC7BH,IAAI,CAAC,UAACC,CAAC,EAAEnG,CAAC,EAAK;QAAAtB,cAAA,GAAAqB,CAAA;QAAArB,cAAA,GAAAoB,CAAA;QAAA,OAAAE,CAAC,CAACqD,iBAAiB,GAAG8C,CAAC,CAAC9C,iBAAiB;MAAD,CAAC,CAAC,CACzD8B,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MAEd,IAAM2B,iBAAiB,IAAApI,cAAA,GAAAoB,CAAA,QAAG,GAAA+G,MAAA,CAAIR,MAAM,EACjCH,IAAI,CAAC,UAACC,CAAC,EAAEnG,CAAC,EAAK;QAAAtB,cAAA,GAAAqB,CAAA;QAAArB,cAAA,GAAAoB,CAAA;QAAA,OAAAE,CAAC,CAACmD,WAAW,GAAGgD,CAAC,CAAChD,WAAW;MAAD,CAAC,CAAC,CAC7CgC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MAEd,IAAMG,WAAW,IAAA5G,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACsF,0BAA0B,CAAC,CAAC;MAAC1G,cAAA,GAAAoB,CAAA;MAEtD,OAAO;QACLwG,WAAW,EAAXA,WAAW;QACXC,YAAY,EAAZA,YAAY;QACZlD,iBAAiB,EAAjBA,iBAAiB;QACjBsD,qBAAqB,EAArBA,qBAAqB;QACrBC,aAAa,EAAbA,aAAa;QACbE,iBAAiB,EAAjBA,iBAAiB;QACjBxB,WAAW,EAAXA;MACF,CAAC;IACH;EAAC;IAAAtE,GAAA;IAAAC,KAAA,EAKD,SAAA8F,cAAcA,CAAC5F,SAAkB,EAAQ;MAAAzC,cAAA,GAAAqB,CAAA;MAAArB,cAAA,GAAAoB,CAAA;MACvC,IAAIqB,SAAS,EAAE;QAAAzC,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACb,IAAI,CAACU,SAAS,CAACyB,MAAM,CAACd,SAAS,CAAC;QAACzC,cAAA,GAAAoB,CAAA;QACjC,IAAI,CAACY,YAAY,CAACuB,MAAM,CAACd,SAAS,CAAC;MACrC,CAAC,MAAM;QAAAzC,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACL,IAAI,CAACU,SAAS,CAACmE,KAAK,CAAC,CAAC;QAACjG,cAAA,GAAAoB,CAAA;QACvB,IAAI,CAACY,YAAY,CAACiE,KAAK,CAAC,CAAC;MAC3B;IACF;EAAC;IAAA3D,GAAA;IAAAC,KAAA,EAKD,SAAA+F,eAAeA,CAAA,EAKb;MAAAtI,cAAA,GAAAqB,CAAA;MACA,IAAM+C,OAA2C,IAAApE,cAAA,GAAAoB,CAAA,SAAG,CAAC,CAAC;MAACpB,cAAA,GAAAoB,CAAA;MACvD,IAAI,CAACY,YAAY,CAAC2D,OAAO,CAAC,UAAC4C,MAAM,EAAE9F,SAAS,EAAK;QAAAzC,cAAA,GAAAqB,CAAA;QAAArB,cAAA,GAAAoB,CAAA;QAC/CgD,OAAO,CAAC3B,SAAS,CAAC,OAAA+F,mBAAA,CAAA3G,OAAA,EAAO0G,MAAM,CAAC;MAClC,CAAC,CAAC;MAACvI,cAAA,GAAAoB,CAAA;MAEH,OAAO;QACLqH,eAAe,EAAErC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACvE,SAAS,CAACwE,MAAM,CAAC,CAAC,CAAC;QACpDlC,OAAO,EAAPA,OAAO;QACPsE,KAAK,EAAE,IAAI,CAAChB,aAAa,CAAC,CAAC;QAC3B/D,SAAS,EAAEC,IAAI,CAAChB,GAAG,CAAC;MACtB,CAAC;IACH;EAAC;IAAAN,GAAA;IAAAC,KAAA,EAzUD,SAAOoG,WAAWA,CAAA,EAAmB;MAAA3I,cAAA,GAAAqB,CAAA;MAAArB,cAAA,GAAAoB,CAAA;MACnC,IAAI,CAACM,cAAc,CAACkH,QAAQ,EAAE;QAAA5I,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QAC5BM,cAAc,CAACkH,QAAQ,GAAG,IAAIlH,cAAc,CAAC,CAAC;MAChD,CAAC;QAAA1B,cAAA,GAAAsB,CAAA;MAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACD,OAAOM,cAAc,CAACkH,QAAQ;IAChC;EAAC;AAAA;AAwUI,IAAMC,cAAc,GAAAlH,OAAA,CAAAkH,cAAA,IAAA7I,cAAA,GAAAoB,CAAA,SAAGM,cAAc,CAACiH,WAAW,CAAC,CAAC;AAAC3I,cAAA,GAAAoB,CAAA;AAGpD,IAAM0H,gBAAgB,GAAAnH,OAAA,CAAAmH,gBAAA,GAAG,SAAnBA,gBAAgBA,CAC3BrG,SAAiB,EACjBM,QAAa,EACbC,QAAa,EACbC,MAAe,EACZ;EAAAjD,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EACHyH,cAAc,CAACrG,gBAAgB,CAACC,SAAS,CAAC;EAACzC,cAAA,GAAAoB,CAAA;EAE3CmE,UAAU,CAAC,YAAM;IAAAvF,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACfyH,cAAc,CAAC/F,cAAc,CAACL,SAAS,EAAEM,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,CAAC;EACtE,CAAC,EAAE,CAAC,CAAC;AACP,CAAC;AAACjD,cAAA,GAAAoB,CAAA;AAEK,IAAM6D,gBAAgB,GAAAtD,OAAA,CAAAsD,gBAAA,GAAG,SAAnBA,gBAAgBA,CAAIxC,SAAiB,EAAEyC,MAAW,EAAK;EAAAlF,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EAClE,OAAOyH,cAAc,CAAC5D,gBAAgB,CAACxC,SAAS,EAAEyC,MAAM,CAAC;AAC3D,CAAC;AAAClF,cAAA,GAAAoB,CAAA;AAEK,IAAM8E,uBAAuB,GAAAvE,OAAA,CAAAuE,uBAAA,GAAG,SAA1BA,uBAAuBA,CAAIzD,SAAkB,EAAK;EAAAzC,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EAC7D,OAAOyH,cAAc,CAAC3C,uBAAuB,CAACzD,SAAS,CAAC;AAC1D,CAAC;AAACzC,cAAA,GAAAoB,CAAA;AAEK,IAAM2H,+BAA+B,GAAApH,OAAA,CAAAoH,+BAAA,GAAG,SAAlCA,+BAA+BA,CAAA,EAAS;EAAA/I,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EACnD,OAAOyH,cAAc,CAACnC,0BAA0B,CAAC,CAAC;AACpD,CAAC;AAAC1G,cAAA,GAAAoB,CAAA;AAEK,IAAMsG,aAAa,GAAA/F,OAAA,CAAA+F,aAAA,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAAA1H,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EACjC,OAAOyH,cAAc,CAACnB,aAAa,CAAC,CAAC;AACvC,CAAC;AAAC1H,cAAA,GAAAoB,CAAA;AAEK,IAAM4H,yBAAyB,GAAArH,OAAA,CAAAqH,yBAAA,GAAG,SAA5BA,yBAAyBA,CAAIvG,SAAkB,EAAK;EAAAzC,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EAC/DyH,cAAc,CAACR,cAAc,CAAC5F,SAAS,CAAC;AAC1C,CAAC","ignoreList":[]}