e5aa794f25fdd92d4896749af0c15b81
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useLoading = exports.useAsyncOperation = exports.LoadingProvider = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function cov_1crwq0fd75() {
  var path = "/Users/songxu/Developer/suoke_life/src/utils/loadingManager.tsx";
  var hash = "2bf4d4cefd7e3ccfd7ab55202cde268f72badf13";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/songxu/Developer/suoke_life/src/utils/loadingManager.tsx",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 23
        },
        end: {
          line: 14,
          column: 69
        }
      },
      "1": {
        start: {
          line: 19,
          column: 72
        },
        end: {
          line: 47,
          column: 1
        }
      },
      "2": {
        start: {
          line: 20,
          column: 44
        },
        end: {
          line: 20,
          column: 70
        }
      },
      "3": {
        start: {
          line: 22,
          column: 21
        },
        end: {
          line: 27,
          column: 3
        }
      },
      "4": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 26,
          column: 8
        }
      },
      "5": {
        start: {
          line: 23,
          column: 30
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "6": {
        start: {
          line: 29,
          column: 20
        },
        end: {
          line: 31,
          column: 3
        }
      },
      "7": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 39
        }
      },
      "8": {
        start: {
          line: 33,
          column: 23
        },
        end: {
          line: 35,
          column: 3
        }
      },
      "9": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 65
        }
      },
      "10": {
        start: {
          line: 34,
          column: 56
        },
        end: {
          line: 34,
          column: 63
        }
      },
      "11": {
        start: {
          line: 37,
          column: 2
        },
        end: {
          line: 46,
          column: 4
        }
      },
      "12": {
        start: {
          line: 52,
          column: 26
        },
        end: {
          line: 58,
          column: 1
        }
      },
      "13": {
        start: {
          line: 53,
          column: 18
        },
        end: {
          line: 53,
          column: 44
        }
      },
      "14": {
        start: {
          line: 54,
          column: 2
        },
        end: {
          line: 56,
          column: 3
        }
      },
      "15": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 70
        }
      },
      "16": {
        start: {
          line: 57,
          column: 2
        },
        end: {
          line: 57,
          column: 17
        }
      },
      "17": {
        start: {
          line: 63,
          column: 33
        },
        end: {
          line: 78,
          column: 1
        }
      },
      "18": {
        start: {
          line: 67,
          column: 25
        },
        end: {
          line: 67,
          column: 37
        }
      },
      "19": {
        start: {
          line: 69,
          column: 2
        },
        end: {
          line: 77,
          column: 4
        }
      },
      "20": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 26
        }
      },
      "21": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 76,
          column: 5
        }
      },
      "22": {
        start: {
          line: 72,
          column: 21
        },
        end: {
          line: 72,
          column: 45
        }
      },
      "23": {
        start: {
          line: 73,
          column: 6
        },
        end: {
          line: 73,
          column: 20
        }
      },
      "24": {
        start: {
          line: 75,
          column: 6
        },
        end: {
          line: 75,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 72
          },
          end: {
            line: 19,
            column: 73
          }
        },
        loc: {
          start: {
            line: 19,
            column: 90
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 21
          },
          end: {
            line: 22,
            column: 22
          }
        },
        loc: {
          start: {
            line: 22,
            column: 56
          },
          end: {
            line: 27,
            column: 3
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 21
          },
          end: {
            line: 23,
            column: 22
          }
        },
        loc: {
          start: {
            line: 23,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 29,
            column: 20
          },
          end: {
            line: 29,
            column: 21
          }
        },
        loc: {
          start: {
            line: 29,
            column: 37
          },
          end: {
            line: 31,
            column: 3
          }
        },
        line: 29
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 33,
            column: 23
          },
          end: {
            line: 33,
            column: 24
          }
        },
        loc: {
          start: {
            line: 33,
            column: 29
          },
          end: {
            line: 35,
            column: 3
          }
        },
        line: 33
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 34,
            column: 45
          },
          end: {
            line: 34,
            column: 46
          }
        },
        loc: {
          start: {
            line: 34,
            column: 56
          },
          end: {
            line: 34,
            column: 63
          }
        },
        line: 34
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 52,
            column: 26
          },
          end: {
            line: 52,
            column: 27
          }
        },
        loc: {
          start: {
            line: 52,
            column: 32
          },
          end: {
            line: 58,
            column: 1
          }
        },
        line: 52
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 63,
            column: 33
          },
          end: {
            line: 63,
            column: 34
          }
        },
        loc: {
          start: {
            line: 66,
            column: 5
          },
          end: {
            line: 78,
            column: 1
          }
        },
        line: 66
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 69,
            column: 9
          },
          end: {
            line: 69,
            column: 10
          }
        },
        loc: {
          start: {
            line: 69,
            column: 43
          },
          end: {
            line: 77,
            column: 3
          }
        },
        line: 69
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 11
          },
          end: {
            line: 30,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 11
          },
          end: {
            line: 30,
            column: 29
          }
        }, {
          start: {
            line: 30,
            column: 33
          },
          end: {
            line: 30,
            column: 38
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 54,
            column: 2
          },
          end: {
            line: 56,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 2
          },
          end: {
            line: 56,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2bf4d4cefd7e3ccfd7ab55202cde268f72badf13"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1crwq0fd75 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1crwq0fd75();
var LoadingContext = (cov_1crwq0fd75().s[0]++, (0, _react.createContext)(null));
cov_1crwq0fd75().s[1]++;
var LoadingProvider = exports.LoadingProvider = function LoadingProvider(_ref) {
  var children = _ref.children;
  cov_1crwq0fd75().f[0]++;
  var _ref2 = (cov_1crwq0fd75().s[2]++, (0, _react.useState)({})),
    _ref3 = (0, _slicedToArray2.default)(_ref2, 2),
    loadingStates = _ref3[0],
    setLoadingStates = _ref3[1];
  cov_1crwq0fd75().s[3]++;
  var setLoading = function setLoading(key, loading) {
    cov_1crwq0fd75().f[1]++;
    cov_1crwq0fd75().s[4]++;
    setLoadingStates(function (prev) {
      cov_1crwq0fd75().f[2]++;
      cov_1crwq0fd75().s[5]++;
      return Object.assign({}, prev, (0, _defineProperty2.default)({}, key, loading));
    });
  };
  cov_1crwq0fd75().s[6]++;
  var isLoading = function isLoading(key) {
    cov_1crwq0fd75().f[3]++;
    cov_1crwq0fd75().s[7]++;
    return (cov_1crwq0fd75().b[0][0]++, loadingStates[key]) || (cov_1crwq0fd75().b[0][1]++, false);
  };
  cov_1crwq0fd75().s[8]++;
  var isAnyLoading = function isAnyLoading() {
    cov_1crwq0fd75().f[4]++;
    cov_1crwq0fd75().s[9]++;
    return Object.values(loadingStates).some(function (loading) {
      cov_1crwq0fd75().f[5]++;
      cov_1crwq0fd75().s[10]++;
      return loading;
    });
  };
  cov_1crwq0fd75().s[11]++;
  return (0, _jsxRuntime.jsx)(LoadingContext.Provider, {
    value: {
      loadingStates: loadingStates,
      setLoading: setLoading,
      isLoading: isLoading,
      isAnyLoading: isAnyLoading
    },
    children: children
  });
};
cov_1crwq0fd75().s[12]++;
var useLoading = exports.useLoading = function useLoading() {
  cov_1crwq0fd75().f[6]++;
  var context = (cov_1crwq0fd75().s[13]++, (0, _react.useContext)(LoadingContext));
  cov_1crwq0fd75().s[14]++;
  if (!context) {
    cov_1crwq0fd75().b[1][0]++;
    cov_1crwq0fd75().s[15]++;
    throw new Error('useLoading must be used within LoadingProvider');
  } else {
    cov_1crwq0fd75().b[1][1]++;
  }
  cov_1crwq0fd75().s[16]++;
  return context;
};
cov_1crwq0fd75().s[17]++;
var useAsyncOperation = exports.useAsyncOperation = function useAsyncOperation(operation, key) {
  cov_1crwq0fd75().f[7]++;
  var _ref4 = (cov_1crwq0fd75().s[18]++, useLoading()),
    setLoading = _ref4.setLoading;
  cov_1crwq0fd75().s[19]++;
  return (0, _asyncToGenerator2.default)(function* () {
    cov_1crwq0fd75().f[8]++;
    cov_1crwq0fd75().s[20]++;
    setLoading(key, true);
    cov_1crwq0fd75().s[21]++;
    try {
      var result = (cov_1crwq0fd75().s[22]++, yield operation.apply(void 0, arguments));
      cov_1crwq0fd75().s[23]++;
      return result;
    } finally {
      cov_1crwq0fd75().s[24]++;
      setLoading(key, false);
    }
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,