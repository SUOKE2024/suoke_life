22816fff4cd7bab18b9a933234f242fc
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function cov_f60mdlu3t() {
  var path = "/Users/songxu/Developer/suoke_life/src/components/common/ErrorBoundary.tsx";
  var hash = "a9fe0850dd40b93ca2f0d32a3546757375cd417f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/songxu/Developer/suoke_life/src/components/common/ErrorBoundary.tsx",
    statementMap: {
      "0": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 17
        }
      },
      "1": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 37
        }
      },
      "2": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 37
        }
      },
      "3": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 70
        }
      },
      "4": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 40
        }
      },
      "5": {
        start: {
          line: 30,
          column: 17
        },
        end: {
          line: 32,
          column: 3
        }
      },
      "6": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 79
        }
      },
      "7": {
        start: {
          line: 34,
          column: 22
        },
        end: {
          line: 41,
          column: 3
        }
      },
      "8": {
        start: {
          line: 35,
          column: 33
        },
        end: {
          line: 35,
          column: 43
        }
      },
      "9": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 40,
          column: 6
        }
      },
      "10": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "11": {
        start: {
          line: 45,
          column: 6
        },
        end: {
          line: 63,
          column: 8
        }
      },
      "12": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 31
        }
      },
      "13": {
        start: {
          line: 70,
          column: 15
        },
        end: {
          line: 106,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 16,
            column: 3
          }
        },
        loc: {
          start: {
            line: 16,
            column: 28
          },
          end: {
            line: 19,
            column: 3
          }
        },
        line: 16
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 21,
            column: 2
          },
          end: {
            line: 21,
            column: 3
          }
        },
        loc: {
          start: {
            line: 21,
            column: 55
          },
          end: {
            line: 23,
            column: 3
          }
        },
        line: 21
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 2
          },
          end: {
            line: 25,
            column: 3
          }
        },
        loc: {
          start: {
            line: 25,
            column: 56
          },
          end: {
            line: 28,
            column: 3
          }
        },
        line: 25
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 30,
            column: 17
          },
          end: {
            line: 30,
            column: 18
          }
        },
        loc: {
          start: {
            line: 30,
            column: 23
          },
          end: {
            line: 32,
            column: 3
          }
        },
        line: 30
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 34,
            column: 22
          },
          end: {
            line: 34,
            column: 23
          }
        },
        loc: {
          start: {
            line: 34,
            column: 28
          },
          end: {
            line: 41,
            column: 3
          }
        },
        line: 34
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 43,
            column: 2
          },
          end: {
            line: 43,
            column: 3
          }
        },
        loc: {
          start: {
            line: 43,
            column: 11
          },
          end: {
            line: 67,
            column: 3
          }
        },
        line: 43
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 13
          },
          end: {
            line: 38,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 13
          },
          end: {
            line: 38,
            column: 27
          }
        }, {
          start: {
            line: 38,
            column: 31
          },
          end: {
            line: 38,
            column: 37
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 48
          },
          end: {
            line: 38,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 48
          },
          end: {
            line: 38,
            column: 60
          }
        }, {
          start: {
            line: 38,
            column: 64
          },
          end: {
            line: 38,
            column: 71
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a9fe0850dd40b93ca2f0d32a3546757375cd417f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_f60mdlu3t = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_f60mdlu3t();
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var ErrorBoundary = function (_Component) {
  function ErrorBoundary(props) {
    var _this;
    (0, _classCallCheck2.default)(this, ErrorBoundary);
    cov_f60mdlu3t().f[0]++;
    cov_f60mdlu3t().s[0]++;
    _this = _callSuper(this, ErrorBoundary, [props]);
    _this.handleReload = (cov_f60mdlu3t().s[5]++, function () {
      cov_f60mdlu3t().f[3]++;
      cov_f60mdlu3t().s[6]++;
      _this.setState({
        hasError: false,
        error: undefined,
        errorInfo: undefined
      });
    });
    _this.handleShowDetails = (cov_f60mdlu3t().s[7]++, function () {
      cov_f60mdlu3t().f[4]++;
      var _ref = (cov_f60mdlu3t().s[8]++, _this.state),
        error = _ref.error,
        errorInfo = _ref.errorInfo;
      cov_f60mdlu3t().s[9]++;
      _reactNative.Alert.alert('错误详情', `错误: ${(cov_f60mdlu3t().b[0][0]++, error == null ? void 0 : error.message) || (cov_f60mdlu3t().b[0][1]++, '未知错误')}\n\n堆栈: ${(cov_f60mdlu3t().b[1][0]++, error == null ? void 0 : error.stack) || (cov_f60mdlu3t().b[1][1]++, '无堆栈信息')}`, [{
        text: '确定'
      }]);
    });
    cov_f60mdlu3t().s[1]++;
    _this.state = {
      hasError: false
    };
    return _this;
  }
  (0, _inherits2.default)(ErrorBoundary, _Component);
  return (0, _createClass2.default)(ErrorBoundary, [{
    key: "componentDidCatch",
    value: function componentDidCatch(error, errorInfo) {
      cov_f60mdlu3t().f[2]++;
      cov_f60mdlu3t().s[3]++;
      console.error('ErrorBoundary caught an error:', error, errorInfo);
      cov_f60mdlu3t().s[4]++;
      this.setState({
        error: error,
        errorInfo: errorInfo
      });
    }
  }, {
    key: "render",
    value: function render() {
      cov_f60mdlu3t().f[5]++;
      cov_f60mdlu3t().s[10]++;
      if (this.state.hasError) {
        cov_f60mdlu3t().b[2][0]++;
        cov_f60mdlu3t().s[11]++;
        return (0, _jsxRuntime.jsxs)(_reactNative.View, {
          style: styles.container,
          children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
            style: styles.title,
            children: "\u5E94\u7528\u51FA\u73B0\u9519\u8BEF"
          }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
            style: styles.message,
            children: "\u5F88\u62B1\u6B49\uFF0C\u5E94\u7528\u9047\u5230\u4E86\u4E00\u4E2A\u9519\u8BEF\u3002\u8BF7\u5C1D\u8BD5\u91CD\u65B0\u52A0\u8F7D\u3002"
          }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
            style: styles.button,
            onPress: this.handleReload,
            children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
              style: styles.buttonText,
              children: "\u91CD\u65B0\u52A0\u8F7D"
            })
          }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
            style: [styles.button, styles.detailsButton],
            onPress: this.handleShowDetails,
            children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
              style: styles.buttonText,
              children: "\u67E5\u770B\u8BE6\u60C5"
            })
          })]
        });
      } else {
        cov_f60mdlu3t().b[2][1]++;
      }
      cov_f60mdlu3t().s[12]++;
      return this.props.children;
    }
  }], [{
    key: "getDerivedStateFromError",
    value: function getDerivedStateFromError(error) {
      cov_f60mdlu3t().f[1]++;
      cov_f60mdlu3t().s[2]++;
      return {
        hasError: true,
        error: error
      };
    }
  }]);
}(_react.Component);
var styles = (cov_f60mdlu3t().s[13]++, _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    padding: 20,
    backgroundColor: '#f5f5f5'
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 16
  },
  message: {
    fontSize: 16,
    color: '#666',
    textAlign: 'center',
    marginBottom: 32,
    lineHeight: 24
  },
  button: {
    backgroundColor: '#007AFF',
    paddingHorizontal: 24,
    paddingVertical: 12,
    borderRadius: 8,
    marginBottom: 12
  },
  detailsButton: {
    backgroundColor: '#FF9500'
  },
  buttonText: {
    color: 'white',
    fontSize: 16,
    fontWeight: '600'
  }
}));
var _default = exports.default = ErrorBoundary;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,