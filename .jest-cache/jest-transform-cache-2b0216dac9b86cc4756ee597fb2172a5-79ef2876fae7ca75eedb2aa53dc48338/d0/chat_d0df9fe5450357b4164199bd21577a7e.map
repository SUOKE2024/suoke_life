{"version":3,"names":[],"sources":["chat.ts"],"sourcesContent":["export type AgentType = 'xiaoai' | 'xiaoke' | 'laoke' | 'soer';\n\nexport type ChannelType = 'agent' | 'user' | 'doctor' | 'group';\n\nexport interface ChatChannel {\n  id: string;\n  name: string;\n  type: ChannelType;\n  avatar: string;\n  lastMessage: string;\n  lastMessageTime: string;\n  unreadCount: number;\n  isOnline: boolean;\n  agentType?: AgentType;\n  specialization?: string;\n}\n\nexport interface ChatMessage {\n  id: string;\n  channelId: string;\n  senderId: string;\n  senderName: string;\n  senderAvatar: string;\n  content: string;\n  timestamp: string;\n  type: 'text' | 'image' | 'file' | 'system';\n  isRead: boolean;\n  reactions?: MessageReaction[];\n}\n\nexport interface MessageReaction {\n  emoji: string;\n  userId: string;\n  userName: string;\n}\n\nexport interface Contact {\n  id: string;\n  name: string;\n  type: ChannelType;\n  agentType?: AgentType;\n  avatar: string;\n  isOnline: boolean;\n  lastSeen?: string;\n  specialization?: string;\n  department?: string;\n  title?: string;\n}\n\nexport interface ChatState {\n  channels: ChatChannel[];\n  messages: Record<string, ChatMessage[]>;\n  activeChannelId: string | null;\n  searchQuery: string;\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport interface ChatActions {\n  setChannels: (channels: ChatChannel[]) => void;\n  addMessage: (message: ChatMessage) => void;\n  setActiveChannel: (channelId: string | null) => void;\n  setSearchQuery: (query: string) => void;\n  markAsRead: (channelId: string) => void;\n  updateChannelLastMessage: (channelId: string, message: string, timestamp: string) => void;\n} "],"mappings":"","ignoreList":[]}