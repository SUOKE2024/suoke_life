eb5e1ab977a33ac64ba0d7269ddd286c
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _Input = require("../../components/common/Input");
var _jsxRuntime = require("react/jsx-runtime");
describe('Input Component', function () {
  var defaultProps = {
    placeholder: '请输入内容',
    value: '',
    onChangeText: jest.fn()
  };
  beforeEach(function () {
    jest.clearAllMocks();
  });
  describe('基础功能', function () {
    it('应该正确渲染输入框', function () {
      var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Input.Input, Object.assign({}, defaultProps))),
        getByPlaceholderText = _render.getByPlaceholderText;
      expect(getByPlaceholderText('请输入内容')).toBeTruthy();
    });
    it('应该显示输入的值', function () {
      var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Input.Input, Object.assign({}, defaultProps, {
          value: "\u6D4B\u8BD5\u5185\u5BB9"
        }))),
        getByDisplayValue = _render2.getByDisplayValue;
      expect(getByDisplayValue('测试内容')).toBeTruthy();
    });
    it('应该响应文本变化事件', function () {
      var onChangeText = jest.fn();
      var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Input.Input, Object.assign({}, defaultProps, {
          onChangeText: onChangeText
        }))),
        getByPlaceholderText = _render3.getByPlaceholderText;
      var input = getByPlaceholderText('请输入内容');
      _reactNative.fireEvent.changeText(input, '新内容');
      expect(onChangeText).toHaveBeenCalledWith('新内容');
    });
    it('应该支持密码输入模式', function () {
      var _render4 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Input.Input, Object.assign({}, defaultProps, {
          secureTextEntry: true,
          placeholder: "\u5BC6\u7801"
        }))),
        getByPlaceholderText = _render4.getByPlaceholderText;
      var input = getByPlaceholderText('密码');
      expect(input.props.secureTextEntry).toBe(true);
    });
    it('应该支持禁用状态', function () {
      var _render5 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Input.Input, Object.assign({}, defaultProps, {
          editable: false
        }))),
        getByPlaceholderText = _render5.getByPlaceholderText;
      var input = getByPlaceholderText('请输入内容');
      expect(input.props.editable).toBe(false);
    });
  });
  describe('样式和外观', function () {
    it('应该应用自定义样式', function () {
      var customStyle = {
        backgroundColor: 'red'
      };
      var _render6 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Input.Input, Object.assign({}, defaultProps, {
          style: customStyle
        }))),
        getByPlaceholderText = _render6.getByPlaceholderText;
      var input = getByPlaceholderText('请输入内容');
      expect(input.props.style).toEqual(expect.arrayContaining([expect.objectContaining(customStyle)]));
    });
    it('应该支持多行输入', function () {
      var _render7 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Input.Input, Object.assign({}, defaultProps, {
          multiline: true,
          numberOfLines: 4
        }))),
        getByPlaceholderText = _render7.getByPlaceholderText;
      var input = getByPlaceholderText('请输入内容');
      expect(input.props.multiline).toBe(true);
      expect(input.props.numberOfLines).toBe(4);
    });
  });
  describe('键盘和输入类型', function () {
    it('应该支持不同的键盘类型', function () {
      var _render8 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Input.Input, Object.assign({}, defaultProps, {
          keyboardType: "email-address"
        }))),
        getByPlaceholderText = _render8.getByPlaceholderText;
      var input = getByPlaceholderText('请输入内容');
      expect(input.props.keyboardType).toBe('email-address');
    });
    it('应该支持自动完成类型', function () {
      var _render9 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Input.Input, Object.assign({}, defaultProps, {
          autoComplete: "email"
        }))),
        getByPlaceholderText = _render9.getByPlaceholderText;
      var input = getByPlaceholderText('请输入内容');
      expect(input.props.autoComplete).toBe('email');
    });
  });
  describe('事件处理', function () {
    it('应该处理焦点事件', function () {
      var onFocus = jest.fn();
      var _render0 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Input.Input, Object.assign({}, defaultProps, {
          onFocus: onFocus
        }))),
        getByPlaceholderText = _render0.getByPlaceholderText;
      var input = getByPlaceholderText('请输入内容');
      (0, _reactNative.fireEvent)(input, 'focus');
      expect(onFocus).toHaveBeenCalled();
    });
    it('应该处理失焦事件', function () {
      var onBlur = jest.fn();
      var _render1 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Input.Input, Object.assign({}, defaultProps, {
          onBlur: onBlur
        }))),
        getByPlaceholderText = _render1.getByPlaceholderText;
      var input = getByPlaceholderText('请输入内容');
      (0, _reactNative.fireEvent)(input, 'blur');
      expect(onBlur).toHaveBeenCalled();
    });
    it('应该处理提交事件', function () {
      var onSubmitEditing = jest.fn();
      var _render10 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Input.Input, Object.assign({}, defaultProps, {
          onSubmitEditing: onSubmitEditing
        }))),
        getByPlaceholderText = _render10.getByPlaceholderText;
      var input = getByPlaceholderText('请输入内容');
      (0, _reactNative.fireEvent)(input, 'submitEditing');
      expect(onSubmitEditing).toHaveBeenCalled();
    });
  });
  describe('可访问性', function () {
    it('应该支持可访问性标签', function () {
      var _render11 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Input.Input, Object.assign({}, defaultProps, {
          accessibilityLabel: "\u7528\u6237\u540D\u8F93\u5165\u6846"
        }))),
        getByLabelText = _render11.getByLabelText;
      expect(getByLabelText('用户名输入框')).toBeTruthy();
    });
    it('应该支持可访问性提示', function () {
      var _render12 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Input.Input, Object.assign({}, defaultProps, {
          accessibilityHint: "\u8BF7\u8F93\u5165\u60A8\u7684\u7528\u6237\u540D"
        }))),
        getByPlaceholderText = _render12.getByPlaceholderText;
      var input = getByPlaceholderText('请输入内容');
      expect(input.props.accessibilityHint).toBe('请输入您的用户名');
    });
  });
  describe('性能测试', function () {
    it('应该在合理时间内渲染', function () {
      var startTime = performance.now();
      (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Input.Input, Object.assign({}, defaultProps)));
      var endTime = performance.now();
      expect(endTime - startTime).toBeLessThan(100);
    });
    it('应该高效处理文本变化', function () {
      var onChangeText = jest.fn();
      var _render13 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Input.Input, Object.assign({}, defaultProps, {
          onChangeText: onChangeText
        }))),
        getByPlaceholderText = _render13.getByPlaceholderText;
      var input = getByPlaceholderText('请输入内容');
      var startTime = performance.now();
      for (var i = 0; i < 10; i++) {
        _reactNative.fireEvent.changeText(input, `文本${i}`);
      }
      var endTime = performance.now();
      expect(endTime - startTime).toBeLessThan(100);
      expect(onChangeText).toHaveBeenCalledTimes(10);
    });
  });
  describe('边界情况', function () {
    it('应该处理空值', function () {
      var _render14 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Input.Input, Object.assign({}, defaultProps, {
          value: null
        }))),
        getByPlaceholderText = _render14.getByPlaceholderText;
      expect(getByPlaceholderText('请输入内容')).toBeTruthy();
    });
    it('应该处理长文本', function () {
      var longText = 'a'.repeat(1000);
      var _render15 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Input.Input, Object.assign({}, defaultProps, {
          value: longText
        }))),
        getByDisplayValue = _render15.getByDisplayValue;
      expect(getByDisplayValue(longText)).toBeTruthy();
    });
    it('应该处理特殊字符', function () {
      var specialText = '!@#$%^&*()_+{}|:"<>?[]\\;\',./ 中文 🚀';
      var onChangeText = jest.fn();
      var _render16 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Input.Input, Object.assign({}, defaultProps, {
          onChangeText: onChangeText
        }))),
        getByPlaceholderText = _render16.getByPlaceholderText;
      var input = getByPlaceholderText('请输入内容');
      _reactNative.fireEvent.changeText(input, specialText);
      expect(onChangeText).toHaveBeenCalledWith(specialText);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9JbnB1dCIsIl9qc3hSdW50aW1lIiwiZGVzY3JpYmUiLCJkZWZhdWx0UHJvcHMiLCJwbGFjZWhvbGRlciIsInZhbHVlIiwib25DaGFuZ2VUZXh0IiwiamVzdCIsImZuIiwiYmVmb3JlRWFjaCIsImNsZWFyQWxsTW9ja3MiLCJpdCIsIl9yZW5kZXIiLCJyZW5kZXIiLCJqc3giLCJJbnB1dCIsIk9iamVjdCIsImFzc2lnbiIsImdldEJ5UGxhY2Vob2xkZXJUZXh0IiwiZXhwZWN0IiwidG9CZVRydXRoeSIsIl9yZW5kZXIyIiwiZ2V0QnlEaXNwbGF5VmFsdWUiLCJfcmVuZGVyMyIsImlucHV0IiwiZmlyZUV2ZW50IiwiY2hhbmdlVGV4dCIsInRvSGF2ZUJlZW5DYWxsZWRXaXRoIiwiX3JlbmRlcjQiLCJzZWN1cmVUZXh0RW50cnkiLCJwcm9wcyIsInRvQmUiLCJfcmVuZGVyNSIsImVkaXRhYmxlIiwiY3VzdG9tU3R5bGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJfcmVuZGVyNiIsInN0eWxlIiwidG9FcXVhbCIsImFycmF5Q29udGFpbmluZyIsIm9iamVjdENvbnRhaW5pbmciLCJfcmVuZGVyNyIsIm11bHRpbGluZSIsIm51bWJlck9mTGluZXMiLCJfcmVuZGVyOCIsImtleWJvYXJkVHlwZSIsIl9yZW5kZXI5IiwiYXV0b0NvbXBsZXRlIiwib25Gb2N1cyIsIl9yZW5kZXIwIiwidG9IYXZlQmVlbkNhbGxlZCIsIm9uQmx1ciIsIl9yZW5kZXIxIiwib25TdWJtaXRFZGl0aW5nIiwiX3JlbmRlcjEwIiwiX3JlbmRlcjExIiwiYWNjZXNzaWJpbGl0eUxhYmVsIiwiZ2V0QnlMYWJlbFRleHQiLCJfcmVuZGVyMTIiLCJhY2Nlc3NpYmlsaXR5SGludCIsInN0YXJ0VGltZSIsInBlcmZvcm1hbmNlIiwibm93IiwiZW5kVGltZSIsInRvQmVMZXNzVGhhbiIsIl9yZW5kZXIxMyIsImkiLCJ0b0hhdmVCZWVuQ2FsbGVkVGltZXMiLCJfcmVuZGVyMTQiLCJsb25nVGV4dCIsInJlcGVhdCIsIl9yZW5kZXIxNSIsInNwZWNpYWxUZXh0IiwiX3JlbmRlcjE2Il0sInNvdXJjZXMiOlsiSW5wdXQudGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHJlbmRlciwgZmlyZUV2ZW50IH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHsgSW5wdXQgfSBmcm9tICcuLi8uLi9jb21wb25lbnRzL2NvbW1vbi9JbnB1dCc7XG5cbmRlc2NyaWJlKCdJbnB1dCBDb21wb25lbnQnLCAoKSA9PiB7XG4gIGNvbnN0IGRlZmF1bHRQcm9wcyA9IHtcbiAgICBwbGFjZWhvbGRlcjogJ+ivt+i+k+WFpeWGheWuuScsXG4gICAgdmFsdWU6ICcnLFxuICAgIG9uQ2hhbmdlVGV4dDogamVzdC5mbigpLFxuICB9O1xuXG4gIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgIGplc3QuY2xlYXJBbGxNb2NrcygpO1xuICB9KTtcblxuICBkZXNjcmliZSgn5Z+656GA5Yqf6IO9JywgKCkgPT4ge1xuICAgIGl0KCflupTor6XmraPnoa7muLLmn5PovpPlhaXmoYYnLCAoKSA9PiB7XG4gICAgICBjb25zdCB7IGdldEJ5UGxhY2Vob2xkZXJUZXh0IH0gPSByZW5kZXIoPElucHV0IHsuLi5kZWZhdWx0UHJvcHN9IC8+KTtcbiAgICAgIGV4cGVjdChnZXRCeVBsYWNlaG9sZGVyVGV4dCgn6K+36L6T5YWl5YaF5a65JykpLnRvQmVUcnV0aHkoKTtcbiAgICB9KTtcblxuICAgIGl0KCflupTor6XmmL7npLrovpPlhaXnmoTlgLwnLCAoKSA9PiB7XG4gICAgICBjb25zdCB7IGdldEJ5RGlzcGxheVZhbHVlIH0gPSByZW5kZXIoXG4gICAgICAgIDxJbnB1dCB7Li4uZGVmYXVsdFByb3BzfSB2YWx1ZT1cIua1i+ivleWGheWuuVwiIC8+XG4gICAgICApO1xuICAgICAgZXhwZWN0KGdldEJ5RGlzcGxheVZhbHVlKCfmtYvor5XlhoXlrrknKSkudG9CZVRydXRoeSgpO1xuICAgIH0pO1xuXG4gICAgaXQoJ+W6lOivpeWTjeW6lOaWh+acrOWPmOWMluS6i+S7ticsICgpID0+IHtcbiAgICAgIGNvbnN0IG9uQ2hhbmdlVGV4dCA9IGplc3QuZm4oKTtcbiAgICAgIGNvbnN0IHsgZ2V0QnlQbGFjZWhvbGRlclRleHQgfSA9IHJlbmRlcihcbiAgICAgICAgPElucHV0IHsuLi5kZWZhdWx0UHJvcHN9IG9uQ2hhbmdlVGV4dD17b25DaGFuZ2VUZXh0fSAvPlxuICAgICAgKTtcbiAgICAgIFxuICAgICAgY29uc3QgaW5wdXQgPSBnZXRCeVBsYWNlaG9sZGVyVGV4dCgn6K+36L6T5YWl5YaF5a65Jyk7XG4gICAgICBmaXJlRXZlbnQuY2hhbmdlVGV4dChpbnB1dCwgJ+aWsOWGheWuuScpO1xuICAgICAgXG4gICAgICBleHBlY3Qob25DaGFuZ2VUZXh0KS50b0hhdmVCZWVuQ2FsbGVkV2l0aCgn5paw5YaF5a65Jyk7XG4gICAgfSk7XG5cbiAgICBpdCgn5bqU6K+l5pSv5oyB5a+G56CB6L6T5YWl5qih5byPJywgKCkgPT4ge1xuICAgICAgY29uc3QgeyBnZXRCeVBsYWNlaG9sZGVyVGV4dCB9ID0gcmVuZGVyKFxuICAgICAgICA8SW5wdXQgey4uLmRlZmF1bHRQcm9wc30gc2VjdXJlVGV4dEVudHJ5IHBsYWNlaG9sZGVyPVwi5a+G56CBXCIgLz5cbiAgICAgICk7XG4gICAgICBcbiAgICAgIGNvbnN0IGlucHV0ID0gZ2V0QnlQbGFjZWhvbGRlclRleHQoJ+WvhueggScpO1xuICAgICAgZXhwZWN0KGlucHV0LnByb3BzLnNlY3VyZVRleHRFbnRyeSkudG9CZSh0cnVlKTtcbiAgICB9KTtcblxuICAgIGl0KCflupTor6XmlK/mjIHnpoHnlKjnirbmgIEnLCAoKSA9PiB7XG4gICAgICBjb25zdCB7IGdldEJ5UGxhY2Vob2xkZXJUZXh0IH0gPSByZW5kZXIoXG4gICAgICAgIDxJbnB1dCB7Li4uZGVmYXVsdFByb3BzfSBlZGl0YWJsZT17ZmFsc2V9IC8+XG4gICAgICApO1xuICAgICAgXG4gICAgICBjb25zdCBpbnB1dCA9IGdldEJ5UGxhY2Vob2xkZXJUZXh0KCfor7fovpPlhaXlhoXlrrknKTtcbiAgICAgIGV4cGVjdChpbnB1dC5wcm9wcy5lZGl0YWJsZSkudG9CZShmYWxzZSk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCfmoLflvI/lkozlpJbop4InLCAoKSA9PiB7XG4gICAgaXQoJ+W6lOivpeW6lOeUqOiHquWumuS5ieagt+W8jycsICgpID0+IHtcbiAgICAgIGNvbnN0IGN1c3RvbVN0eWxlID0geyBiYWNrZ3JvdW5kQ29sb3I6ICdyZWQnIH07XG4gICAgICBjb25zdCB7IGdldEJ5UGxhY2Vob2xkZXJUZXh0IH0gPSByZW5kZXIoXG4gICAgICAgIDxJbnB1dCB7Li4uZGVmYXVsdFByb3BzfSBzdHlsZT17Y3VzdG9tU3R5bGV9IC8+XG4gICAgICApO1xuICAgICAgXG4gICAgICBjb25zdCBpbnB1dCA9IGdldEJ5UGxhY2Vob2xkZXJUZXh0KCfor7fovpPlhaXlhoXlrrknKTtcbiAgICAgIGV4cGVjdChpbnB1dC5wcm9wcy5zdHlsZSkudG9FcXVhbChleHBlY3QuYXJyYXlDb250YWluaW5nKFtcbiAgICAgICAgZXhwZWN0Lm9iamVjdENvbnRhaW5pbmcoY3VzdG9tU3R5bGUpXG4gICAgICBdKSk7XG4gICAgfSk7XG5cbiAgICBpdCgn5bqU6K+l5pSv5oyB5aSa6KGM6L6T5YWlJywgKCkgPT4ge1xuICAgICAgY29uc3QgeyBnZXRCeVBsYWNlaG9sZGVyVGV4dCB9ID0gcmVuZGVyKFxuICAgICAgICA8SW5wdXQgey4uLmRlZmF1bHRQcm9wc30gbXVsdGlsaW5lIG51bWJlck9mTGluZXM9ezR9IC8+XG4gICAgICApO1xuICAgICAgXG4gICAgICBjb25zdCBpbnB1dCA9IGdldEJ5UGxhY2Vob2xkZXJUZXh0KCfor7fovpPlhaXlhoXlrrknKTtcbiAgICAgIGV4cGVjdChpbnB1dC5wcm9wcy5tdWx0aWxpbmUpLnRvQmUodHJ1ZSk7XG4gICAgICBleHBlY3QoaW5wdXQucHJvcHMubnVtYmVyT2ZMaW5lcykudG9CZSg0KTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ+mUruebmOWSjOi+k+WFpeexu+WeiycsICgpID0+IHtcbiAgICBpdCgn5bqU6K+l5pSv5oyB5LiN5ZCM55qE6ZSu55uY57G75Z6LJywgKCkgPT4ge1xuICAgICAgY29uc3QgeyBnZXRCeVBsYWNlaG9sZGVyVGV4dCB9ID0gcmVuZGVyKFxuICAgICAgICA8SW5wdXQgey4uLmRlZmF1bHRQcm9wc30ga2V5Ym9hcmRUeXBlPVwiZW1haWwtYWRkcmVzc1wiIC8+XG4gICAgICApO1xuICAgICAgXG4gICAgICBjb25zdCBpbnB1dCA9IGdldEJ5UGxhY2Vob2xkZXJUZXh0KCfor7fovpPlhaXlhoXlrrknKTtcbiAgICAgIGV4cGVjdChpbnB1dC5wcm9wcy5rZXlib2FyZFR5cGUpLnRvQmUoJ2VtYWlsLWFkZHJlc3MnKTtcbiAgICB9KTtcblxuICAgIGl0KCflupTor6XmlK/mjIHoh6rliqjlrozmiJDnsbvlnosnLCAoKSA9PiB7XG4gICAgICBjb25zdCB7IGdldEJ5UGxhY2Vob2xkZXJUZXh0IH0gPSByZW5kZXIoXG4gICAgICAgIDxJbnB1dCB7Li4uZGVmYXVsdFByb3BzfSBhdXRvQ29tcGxldGU9XCJlbWFpbFwiIC8+XG4gICAgICApO1xuICAgICAgXG4gICAgICBjb25zdCBpbnB1dCA9IGdldEJ5UGxhY2Vob2xkZXJUZXh0KCfor7fovpPlhaXlhoXlrrknKTtcbiAgICAgIGV4cGVjdChpbnB1dC5wcm9wcy5hdXRvQ29tcGxldGUpLnRvQmUoJ2VtYWlsJyk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCfkuovku7blpITnkIYnLCAoKSA9PiB7XG4gICAgaXQoJ+W6lOivpeWkhOeQhueEpueCueS6i+S7ticsICgpID0+IHtcbiAgICAgIGNvbnN0IG9uRm9jdXMgPSBqZXN0LmZuKCk7XG4gICAgICBjb25zdCB7IGdldEJ5UGxhY2Vob2xkZXJUZXh0IH0gPSByZW5kZXIoXG4gICAgICAgIDxJbnB1dCB7Li4uZGVmYXVsdFByb3BzfSBvbkZvY3VzPXtvbkZvY3VzfSAvPlxuICAgICAgKTtcbiAgICAgIFxuICAgICAgY29uc3QgaW5wdXQgPSBnZXRCeVBsYWNlaG9sZGVyVGV4dCgn6K+36L6T5YWl5YaF5a65Jyk7XG4gICAgICBmaXJlRXZlbnQoaW5wdXQsICdmb2N1cycpO1xuICAgICAgXG4gICAgICBleHBlY3Qob25Gb2N1cykudG9IYXZlQmVlbkNhbGxlZCgpO1xuICAgIH0pO1xuXG4gICAgaXQoJ+W6lOivpeWkhOeQhuWkseeEpuS6i+S7ticsICgpID0+IHtcbiAgICAgIGNvbnN0IG9uQmx1ciA9IGplc3QuZm4oKTtcbiAgICAgIGNvbnN0IHsgZ2V0QnlQbGFjZWhvbGRlclRleHQgfSA9IHJlbmRlcihcbiAgICAgICAgPElucHV0IHsuLi5kZWZhdWx0UHJvcHN9IG9uQmx1cj17b25CbHVyfSAvPlxuICAgICAgKTtcbiAgICAgIFxuICAgICAgY29uc3QgaW5wdXQgPSBnZXRCeVBsYWNlaG9sZGVyVGV4dCgn6K+36L6T5YWl5YaF5a65Jyk7XG4gICAgICBmaXJlRXZlbnQoaW5wdXQsICdibHVyJyk7XG4gICAgICBcbiAgICAgIGV4cGVjdChvbkJsdXIpLnRvSGF2ZUJlZW5DYWxsZWQoKTtcbiAgICB9KTtcblxuICAgIGl0KCflupTor6XlpITnkIbmj5DkuqTkuovku7YnLCAoKSA9PiB7XG4gICAgICBjb25zdCBvblN1Ym1pdEVkaXRpbmcgPSBqZXN0LmZuKCk7XG4gICAgICBjb25zdCB7IGdldEJ5UGxhY2Vob2xkZXJUZXh0IH0gPSByZW5kZXIoXG4gICAgICAgIDxJbnB1dCB7Li4uZGVmYXVsdFByb3BzfSBvblN1Ym1pdEVkaXRpbmc9e29uU3VibWl0RWRpdGluZ30gLz5cbiAgICAgICk7XG4gICAgICBcbiAgICAgIGNvbnN0IGlucHV0ID0gZ2V0QnlQbGFjZWhvbGRlclRleHQoJ+ivt+i+k+WFpeWGheWuuScpO1xuICAgICAgZmlyZUV2ZW50KGlucHV0LCAnc3VibWl0RWRpdGluZycpO1xuICAgICAgXG4gICAgICBleHBlY3Qob25TdWJtaXRFZGl0aW5nKS50b0hhdmVCZWVuQ2FsbGVkKCk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCflj6/orr/pl67mgKcnLCAoKSA9PiB7XG4gICAgaXQoJ+W6lOivpeaUr+aMgeWPr+iuv+mXruaAp+agh+etvicsICgpID0+IHtcbiAgICAgIGNvbnN0IHsgZ2V0QnlMYWJlbFRleHQgfSA9IHJlbmRlcihcbiAgICAgICAgPElucHV0IHsuLi5kZWZhdWx0UHJvcHN9IGFjY2Vzc2liaWxpdHlMYWJlbD1cIueUqOaIt+WQjei+k+WFpeahhlwiIC8+XG4gICAgICApO1xuICAgICAgXG4gICAgICBleHBlY3QoZ2V0QnlMYWJlbFRleHQoJ+eUqOaIt+WQjei+k+WFpeahhicpKS50b0JlVHJ1dGh5KCk7XG4gICAgfSk7XG5cbiAgICBpdCgn5bqU6K+l5pSv5oyB5Y+v6K6/6Zeu5oCn5o+Q56S6JywgKCkgPT4ge1xuICAgICAgY29uc3QgeyBnZXRCeVBsYWNlaG9sZGVyVGV4dCB9ID0gcmVuZGVyKFxuICAgICAgICA8SW5wdXQgey4uLmRlZmF1bHRQcm9wc30gYWNjZXNzaWJpbGl0eUhpbnQ9XCLor7fovpPlhaXmgqjnmoTnlKjmiLflkI1cIiAvPlxuICAgICAgKTtcbiAgICAgIFxuICAgICAgY29uc3QgaW5wdXQgPSBnZXRCeVBsYWNlaG9sZGVyVGV4dCgn6K+36L6T5YWl5YaF5a65Jyk7XG4gICAgICBleHBlY3QoaW5wdXQucHJvcHMuYWNjZXNzaWJpbGl0eUhpbnQpLnRvQmUoJ+ivt+i+k+WFpeaCqOeahOeUqOaIt+WQjScpO1xuICAgIH0pO1xuICB9KTtcblxuICBkZXNjcmliZSgn5oCn6IO95rWL6K+VJywgKCkgPT4ge1xuICAgIGl0KCflupTor6XlnKjlkIjnkIbml7bpl7TlhoXmuLLmn5MnLCAoKSA9PiB7XG4gICAgICBjb25zdCBzdGFydFRpbWUgPSBwZXJmb3JtYW5jZS5ub3coKTtcbiAgICAgIHJlbmRlcig8SW5wdXQgey4uLmRlZmF1bHRQcm9wc30gLz4pO1xuICAgICAgY29uc3QgZW5kVGltZSA9IHBlcmZvcm1hbmNlLm5vdygpO1xuICAgICAgXG4gICAgICBleHBlY3QoZW5kVGltZSAtIHN0YXJ0VGltZSkudG9CZUxlc3NUaGFuKDEwMCk7XG4gICAgfSk7XG5cbiAgICBpdCgn5bqU6K+l6auY5pWI5aSE55CG5paH5pys5Y+Y5YyWJywgKCkgPT4ge1xuICAgICAgY29uc3Qgb25DaGFuZ2VUZXh0ID0gamVzdC5mbigpO1xuICAgICAgY29uc3QgeyBnZXRCeVBsYWNlaG9sZGVyVGV4dCB9ID0gcmVuZGVyKFxuICAgICAgICA8SW5wdXQgey4uLmRlZmF1bHRQcm9wc30gb25DaGFuZ2VUZXh0PXtvbkNoYW5nZVRleHR9IC8+XG4gICAgICApO1xuICAgICAgXG4gICAgICBjb25zdCBpbnB1dCA9IGdldEJ5UGxhY2Vob2xkZXJUZXh0KCfor7fovpPlhaXlhoXlrrknKTtcbiAgICAgIGNvbnN0IHN0YXJ0VGltZSA9IHBlcmZvcm1hbmNlLm5vdygpO1xuICAgICAgXG4gICAgICAvLyDmqKHmi5/lv6vpgJ/ovpPlhaVcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTA7IGkrKykge1xuICAgICAgICBmaXJlRXZlbnQuY2hhbmdlVGV4dChpbnB1dCwgYOaWh+acrCR7aX1gKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgY29uc3QgZW5kVGltZSA9IHBlcmZvcm1hbmNlLm5vdygpO1xuICAgICAgZXhwZWN0KGVuZFRpbWUgLSBzdGFydFRpbWUpLnRvQmVMZXNzVGhhbigxMDApO1xuICAgICAgZXhwZWN0KG9uQ2hhbmdlVGV4dCkudG9IYXZlQmVlbkNhbGxlZFRpbWVzKDEwKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ+i+ueeVjOaDheWGtScsICgpID0+IHtcbiAgICBpdCgn5bqU6K+l5aSE55CG56m65YC8JywgKCkgPT4ge1xuICAgICAgY29uc3QgeyBnZXRCeVBsYWNlaG9sZGVyVGV4dCB9ID0gcmVuZGVyKFxuICAgICAgICA8SW5wdXQgey4uLmRlZmF1bHRQcm9wc30gdmFsdWU9e251bGwgYXMgYW55fSAvPlxuICAgICAgKTtcbiAgICAgIFxuICAgICAgZXhwZWN0KGdldEJ5UGxhY2Vob2xkZXJUZXh0KCfor7fovpPlhaXlhoXlrrknKSkudG9CZVRydXRoeSgpO1xuICAgIH0pO1xuXG4gICAgaXQoJ+W6lOivpeWkhOeQhumVv+aWh+acrCcsICgpID0+IHtcbiAgICAgIGNvbnN0IGxvbmdUZXh0ID0gJ2EnLnJlcGVhdCgxMDAwKTtcbiAgICAgIGNvbnN0IHsgZ2V0QnlEaXNwbGF5VmFsdWUgfSA9IHJlbmRlcihcbiAgICAgICAgPElucHV0IHsuLi5kZWZhdWx0UHJvcHN9IHZhbHVlPXtsb25nVGV4dH0gLz5cbiAgICAgICk7XG4gICAgICBcbiAgICAgIGV4cGVjdChnZXRCeURpc3BsYXlWYWx1ZShsb25nVGV4dCkpLnRvQmVUcnV0aHkoKTtcbiAgICB9KTtcblxuICAgIGl0KCflupTor6XlpITnkIbnibnmrorlrZfnrKYnLCAoKSA9PiB7XG4gICAgICBjb25zdCBzcGVjaWFsVGV4dCA9ICchQCMkJV4mKigpXyt7fXw6XCI8Pj9bXVxcXFw7XFwnLC4vIOS4reaWhyDwn5qAJztcbiAgICAgIGNvbnN0IG9uQ2hhbmdlVGV4dCA9IGplc3QuZm4oKTtcbiAgICAgIGNvbnN0IHsgZ2V0QnlQbGFjZWhvbGRlclRleHQgfSA9IHJlbmRlcihcbiAgICAgICAgPElucHV0IHsuLi5kZWZhdWx0UHJvcHN9IG9uQ2hhbmdlVGV4dD17b25DaGFuZ2VUZXh0fSAvPlxuICAgICAgKTtcbiAgICAgIFxuICAgICAgY29uc3QgaW5wdXQgPSBnZXRCeVBsYWNlaG9sZGVyVGV4dCgn6K+36L6T5YWl5YaF5a65Jyk7XG4gICAgICBmaXJlRXZlbnQuY2hhbmdlVGV4dChpbnB1dCwgc3BlY2lhbFRleHQpO1xuICAgICAgXG4gICAgICBleHBlY3Qob25DaGFuZ2VUZXh0KS50b0hhdmVCZWVuQ2FsbGVkV2l0aChzcGVjaWFsVGV4dCk7XG4gICAgfSk7XG4gIH0pO1xufSk7ICJdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFlBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLE1BQUEsR0FBQUYsT0FBQTtBQUFzRCxJQUFBRyxXQUFBLEdBQUFILE9BQUE7QUFFdERJLFFBQVEsQ0FBQyxpQkFBaUIsRUFBRSxZQUFNO0VBQ2hDLElBQU1DLFlBQVksR0FBRztJQUNuQkMsV0FBVyxFQUFFLE9BQU87SUFDcEJDLEtBQUssRUFBRSxFQUFFO0lBQ1RDLFlBQVksRUFBRUMsSUFBSSxDQUFDQyxFQUFFLENBQUM7RUFDeEIsQ0FBQztFQUVEQyxVQUFVLENBQUMsWUFBTTtJQUNmRixJQUFJLENBQUNHLGFBQWEsQ0FBQyxDQUFDO0VBQ3RCLENBQUMsQ0FBQztFQUVGUixRQUFRLENBQUMsTUFBTSxFQUFFLFlBQU07SUFDckJTLEVBQUUsQ0FBQyxXQUFXLEVBQUUsWUFBTTtNQUNwQixJQUFBQyxPQUFBLEdBQWlDLElBQUFDLG1CQUFNLEVBQUMsSUFBQVosV0FBQSxDQUFBYSxHQUFBLEVBQUNkLE1BQUEsQ0FBQWUsS0FBSyxFQUFBQyxNQUFBLENBQUFDLE1BQUEsS0FBS2QsWUFBWSxDQUFHLENBQUMsQ0FBQztRQUE1RGUsb0JBQW9CLEdBQUFOLE9BQUEsQ0FBcEJNLG9CQUFvQjtNQUM1QkMsTUFBTSxDQUFDRCxvQkFBb0IsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDRSxVQUFVLENBQUMsQ0FBQztJQUNwRCxDQUFDLENBQUM7SUFFRlQsRUFBRSxDQUFDLFVBQVUsRUFBRSxZQUFNO01BQ25CLElBQUFVLFFBQUEsR0FBOEIsSUFBQVIsbUJBQU0sRUFDbEMsSUFBQVosV0FBQSxDQUFBYSxHQUFBLEVBQUNkLE1BQUEsQ0FBQWUsS0FBSyxFQUFBQyxNQUFBLENBQUFDLE1BQUEsS0FBS2QsWUFBWTtVQUFF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