{"version":3,"names":["_toolkit","require","_reactRedux","_authSlice","_interopRequireDefault","_userSlice","_agentsSlice","_diagnosisSlice","_healthSlice","_uiSlice","_apiMiddleware","_persistMiddleware","store","exports","configureStore","reducer","auth","authSlice","user","userSlice","agents","agentsSlice","diagnosis","diagnosisSlice","health","healthSlice","ui","uiSlice","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ignoredPaths","concat","apiMiddleware","persistMiddleware","devTools","__DEV__","useAppDispatch","useDispatch","useAppSelector","useSelector","_default","default"],"sources":["index.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\n\n// 导入各个slice\nimport authSlice from './slices/authSlice';\nimport userSlice from './slices/userSlice';\nimport agentsSlice from './slices/agentsSlice';\nimport diagnosisSlice from './slices/diagnosisSlice';\nimport healthSlice from './slices/healthSlice';\nimport uiSlice from './slices/uiSlice';\n\n// 导入中间件\nimport { apiMiddleware } from './middleware/apiMiddleware';\nimport { persistMiddleware } from './middleware/persistMiddleware';\n\n// 配置store\nexport const store = configureStore({\n  reducer: {\n    auth: authSlice,\n    user: userSlice,\n    agents: agentsSlice,\n    diagnosis: diagnosisSlice,\n    health: healthSlice,\n    ui: uiSlice,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        // 忽略这些action类型的序列化检查\n        ignoredActions: [\n          'persist/PERSIST',\n          'persist/REHYDRATE',\n          'persist/REGISTER',\n        ],\n        // 忽略这些路径的序列化检查\n        ignoredPaths: ['auth.token', 'auth.refreshToken'],\n      },\n    })\n      .concat(apiMiddleware)\n      .concat(persistMiddleware),\n  devTools: __DEV__,\n});\n\n// 导出类型\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\n// 创建类型化的hooks\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\n// 导出store\nexport default store;\n"],"mappings":";;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,WAAA,GAAAD,OAAA;AAGA,IAAAE,UAAA,GAAAC,sBAAA,CAAAH,OAAA;AACA,IAAAI,UAAA,GAAAD,sBAAA,CAAAH,OAAA;AACA,IAAAK,YAAA,GAAAF,sBAAA,CAAAH,OAAA;AACA,IAAAM,eAAA,GAAAH,sBAAA,CAAAH,OAAA;AACA,IAAAO,YAAA,GAAAJ,sBAAA,CAAAH,OAAA;AACA,IAAAQ,QAAA,GAAAL,sBAAA,CAAAH,OAAA;AAGA,IAAAS,cAAA,GAAAT,OAAA;AACA,IAAAU,kBAAA,GAAAV,OAAA;AAGO,IAAMW,KAAK,GAAAC,OAAA,CAAAD,KAAA,GAAG,IAAAE,uBAAc,EAAC;EAClCC,OAAO,EAAE;IACPC,IAAI,EAAEC,kBAAS;IACfC,IAAI,EAAEC,kBAAS;IACfC,MAAM,EAAEC,oBAAW;IACnBC,SAAS,EAAEC,uBAAc;IACzBC,MAAM,EAAEC,oBAAW;IACnBC,EAAE,EAAEC;EACN,CAAC;EACDC,UAAU,EAAE,SAAZA,UAAUA,CAAGC,oBAAoB;IAAA,OAC/BA,oBAAoB,CAAC;MACnBC,iBAAiB,EAAE;QAEjBC,cAAc,EAAE,CACd,iBAAiB,EACjB,mBAAmB,EACnB,kBAAkB,CACnB;QAEDC,YAAY,EAAE,CAAC,YAAY,EAAE,mBAAmB;MAClD;IACF,CAAC,CAAC,CACCC,MAAM,CAACC,4BAAa,CAAC,CACrBD,MAAM,CAACE,oCAAiB,CAAC;EAAA;EAC9BC,QAAQ,EAAEC;AACZ,CAAC,CAAC;AAOK,IAAMC,cAAc,GAAAzB,OAAA,CAAAyB,cAAA,GAAG,SAAjBA,cAAcA,CAAA;EAAA,OAAS,IAAAC,uBAAW,EAAc,CAAC;AAAA;AACvD,IAAMC,cAA+C,GAAA3B,OAAA,CAAA2B,cAAA,GAAGC,uBAAW;AAAC,IAAAC,QAAA,GAAA7B,OAAA,CAAA8B,OAAA,GAG5D/B,KAAK","ignoreList":[]}