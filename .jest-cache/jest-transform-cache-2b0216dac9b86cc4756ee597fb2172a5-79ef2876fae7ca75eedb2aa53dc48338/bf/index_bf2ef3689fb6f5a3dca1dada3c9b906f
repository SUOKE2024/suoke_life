3fb9f92b55a29acbea9ada2323319282
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useAppSelector = exports.useAppDispatch = exports.store = exports.default = void 0;
var _toolkit = require("@reduxjs/toolkit");
var _reactRedux = require("react-redux");
var _authSlice = _interopRequireDefault(require("./slices/authSlice"));
var _userSlice = _interopRequireDefault(require("./slices/userSlice"));
var _agentsSlice = _interopRequireDefault(require("./slices/agentsSlice"));
var _diagnosisSlice = _interopRequireDefault(require("./slices/diagnosisSlice"));
var _healthSlice = _interopRequireDefault(require("./slices/healthSlice"));
var _uiSlice = _interopRequireDefault(require("./slices/uiSlice"));
var _apiMiddleware = require("./middleware/apiMiddleware");
var _persistMiddleware = require("./middleware/persistMiddleware");
function cov_gg9kiiaeo() {
  var path = "/Users/songxu/Developer/suoke_life/src/store/index.ts";
  var hash = "58c1fbfa6f62c5dd5968fce4108f661ee5baee85";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/songxu/Developer/suoke_life/src/store/index.ts",
    statementMap: {
      "0": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 42,
          column: 2
        }
      },
      "1": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 40,
          column: 32
        }
      },
      "2": {
        start: {
          line: 49,
          column: 30
        },
        end: {
          line: 49,
          column: 62
        }
      },
      "3": {
        start: {
          line: 49,
          column: 36
        },
        end: {
          line: 49,
          column: 62
        }
      },
      "4": {
        start: {
          line: 50,
          column: 63
        },
        end: {
          line: 50,
          column: 74
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 26,
            column: 14
          },
          end: {
            line: 26,
            column: 15
          }
        },
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 40,
            column: 32
          }
        },
        line: 27
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 49,
            column: 30
          },
          end: {
            line: 49,
            column: 31
          }
        },
        loc: {
          start: {
            line: 49,
            column: 36
          },
          end: {
            line: 49,
            column: 62
          }
        },
        line: 49
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "58c1fbfa6f62c5dd5968fce4108f661ee5baee85"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_gg9kiiaeo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_gg9kiiaeo();
var store = exports.store = (cov_gg9kiiaeo().s[0]++, (0, _toolkit.configureStore)({
  reducer: {
    auth: _authSlice.default,
    user: _userSlice.default,
    agents: _agentsSlice.default,
    diagnosis: _diagnosisSlice.default,
    health: _healthSlice.default,
    ui: _uiSlice.default
  },
  middleware: function middleware(getDefaultMiddleware) {
    cov_gg9kiiaeo().f[0]++;
    cov_gg9kiiaeo().s[1]++;
    return getDefaultMiddleware({
      serializableCheck: {
        ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE', 'persist/REGISTER'],
        ignoredPaths: ['auth.token', 'auth.refreshToken']
      }
    }).concat(_apiMiddleware.apiMiddleware).concat(_persistMiddleware.persistMiddleware);
  },
  devTools: __DEV__
}));
cov_gg9kiiaeo().s[2]++;
var useAppDispatch = exports.useAppDispatch = function useAppDispatch() {
  cov_gg9kiiaeo().f[1]++;
  cov_gg9kiiaeo().s[3]++;
  return (0, _reactRedux.useDispatch)();
};
var useAppSelector = exports.useAppSelector = (cov_gg9kiiaeo().s[4]++, _reactRedux.useSelector);
var _default = exports.default = store;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfdG9vbGtpdCIsInJlcXVpcmUiLCJfcmVhY3RSZWR1eCIsIl9hdXRoU2xpY2UiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX3VzZXJTbGljZSIsIl9hZ2VudHNTbGljZSIsIl9kaWFnbm9zaXNTbGljZSIsIl9oZWFsdGhTbGljZSIsIl91aVNsaWNlIiwiX2FwaU1pZGRsZXdhcmUiLCJfcGVyc2lzdE1pZGRsZXdhcmUiLCJjb3ZfZ2c5a2lpYWVvIiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJzIiwiZiIsImIiLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwic3RvcmUiLCJleHBvcnRzIiwiY29uZmlndXJlU3RvcmUiLCJyZWR1Y2VyIiwiYXV0aCIsImF1dGhTbGljZSIsInVzZXIiLCJ1c2VyU2xpY2UiLCJhZ2VudHMiLCJhZ2VudHNTbGljZSIsImRpYWdub3NpcyIsImRpYWdub3Npc1NsaWNlIiwiaGVhbHRoIiwiaGVhbHRoU2xpY2UiLCJ1aSIsInVpU2xpY2UiLCJtaWRkbGV3YXJlIiwiZ2V0RGVmYXVsdE1pZGRsZXdhcmUiLCJzZXJpYWxpemFibGVDaGVjayIsImlnbm9yZWRBY3Rpb25zIiwiaWdub3JlZFBhdGhzIiwiY29uY2F0IiwiYXBpTWlkZGxld2FyZSIsInBlcnNpc3RNaWRkbGV3YXJlIiwiZGV2VG9vbHMiLCJfX0RFVl9fIiwidXNlQXBwRGlzcGF0Y2giLCJ1c2VEaXNwYXRjaCIsInVzZUFwcFNlbGVjdG9yIiwidXNlU2VsZWN0b3IiLCJfZGVmYXVsdCIsImRlZmF1bHQiXSwic291cmNlcyI6WyJpbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb25maWd1cmVTdG9yZSB9IGZyb20gJ0ByZWR1eGpzL3Rvb2xraXQnO1xuaW1wb3J0IHsgVHlwZWRVc2VTZWxlY3Rvckhvb2ssIHVzZURpc3BhdGNoLCB1c2VTZWxlY3RvciB9IGZyb20gJ3JlYWN0LXJlZHV4JztcblxuLy8g5a+85YWl5ZCE5Liqc2xpY2VcbmltcG9ydCBhdXRoU2xpY2UgZnJvbSAnLi9zbGljZXMvYXV0aFNsaWNlJztcbmltcG9ydCB1c2VyU2xpY2UgZnJvbSAnLi9zbGljZXMvdXNlclNsaWNlJztcbmltcG9ydCBhZ2VudHNTbGljZSBmcm9tICcuL3NsaWNlcy9hZ2VudHNTbGljZSc7XG5pbXBvcnQgZGlhZ25vc2lzU2xpY2UgZnJvbSAnLi9zbGljZXMvZGlhZ25vc2lzU2xpY2UnO1xuaW1wb3J0IGhlYWx0aFNsaWNlIGZyb20gJy4vc2xpY2VzL2hlYWx0aFNsaWNlJztcbmltcG9ydCB1aVNsaWNlIGZyb20gJy4vc2xpY2VzL3VpU2xpY2UnO1xuXG4vLyDlr7zlhaXkuK3pl7Tku7ZcbmltcG9ydCB7IGFwaU1pZGRsZXdhcmUgfSBmcm9tICcuL21pZGRsZXdhcmUvYXBpTWlkZGxld2FyZSc7XG5pbXBvcnQgeyBwZXJzaXN0TWlkZGxld2FyZSB9IGZyb20gJy4vbWlkZGxld2FyZS9wZXJzaXN0TWlkZGxld2FyZSc7XG5cbi8vIOmFjee9rnN0b3JlXG5leHBvcnQgY29uc3Qgc3RvcmUgPSBjb25maWd1cmVTdG9yZSh7XG4gIHJlZHVjZXI6IHtcbiAgICBhdXRoOiBhdXRoU2xpY2UsXG4gICAgdXNlcjogdXNlclNsaWNlLFxuICAgIGFnZW50czogYWdlbnRzU2xpY2UsXG4gICAgZGlhZ25vc2lzOiBkaWFnbm9zaXNTbGljZSxcbiAgICBoZWFsdGg6IGhlYWx0aFNsaWNlLFxuICAgIHVpOiB1aVNsaWNlLFxuICB9LFxuICBtaWRkbGV3YXJlOiAoZ2V0RGVmYXVsdE1pZGRsZXdhcmUpID0+XG4gICAgZ2V0RGVmYXVsdE1pZGRsZXdhcmUoe1xuICAgICAgc2VyaWFsaXphYmxlQ2hlY2s6IHtcbiAgICAgICAgLy8g5b+955Wl6L+Z5LqbYWN0aW9u57G75Z6L55qE5bqP5YiX5YyW5qOA5p+lXG4gICAgICAgIGlnbm9yZWRBY3Rpb25zOiBbXG4gICAgICAgICAgJ3BlcnNpc3QvUEVSU0lTVCcsXG4gICAgICAgICAgJ3BlcnNpc3QvUkVIWURSQVRFJyxcbiAgICAgICAgICAncGVyc2lzdC9SRUdJU1RFUicsXG4gICAgICAgIF0sXG4gICAgICAgIC8vIOW/veeVpei/meS6m+i3r+W+hOeahOW6j+WIl+WMluajgOafpVxuICAgICAgICBpZ25vcmVkUGF0aHM6IFsnYXV0aC50b2tlbicsICdhdXRoLnJlZnJlc2hUb2tlbiddLFxuICAgICAgfSxcbiAgICB9KVxuICAgICAgLmNvbmNhdChhcGlNaWRkbGV3YXJlKVxuICAgICAgLmNvbmNhdChwZXJzaXN0TWlkZGxld2FyZSksXG4gIGRldlRvb2xzOiBfX0RFVl9fLFxufSk7XG5cbi8vIOWvvOWHuuexu+Wei1xuZXhwb3J0IHR5cGUgUm9vdFN0YXRlID0gUmV0dXJuVHlwZTx0eXBlb2Ygc3RvcmUuZ2V0U3RhdGU+O1xuZXhwb3J0IHR5cGUgQXBwRGlzcGF0Y2ggPSB0eXBlb2Ygc3RvcmUuZGlzcGF0Y2g7XG5cbi8vIOWIm+W7uuexu+Wei+WMlueahGhvb2tzXG5leHBvcnQgY29uc3QgdXNlQXBwRGlzcGF0Y2ggPSAoKSA9PiB1c2VEaXNwYXRjaDxBcHBEaXNwYXRjaD4oKTtcbmV4cG9ydCBjb25zdCB1c2VBcHBTZWxlY3RvcjogVHlwZWRVc2VTZWxlY3Rvckhvb2s8Um9vdFN0YXRlPiA9IHVzZVNlbGVjdG9yO1xuXG4vLyDlr7zlh7pzdG9yZVxuZXhwb3J0IGRlZmF1bHQgc3RvcmU7XG4iXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsSUFBQUEsUUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsV0FBQSxHQUFBRCxPQUFBO0FBR0EsSUFBQUUsVUFBQSxHQUFBQyxzQkFBQSxDQUFBSCxPQUFBO0FBQ0EsSUFBQUksVUFBQSxHQUFBRCxzQkFBQSxDQUFBSCxPQUFBO0FBQ0EsSUFBQUssWUFBQSxHQUFBRixzQkFBQSxDQUFBSCxPQUFBO0FBQ0EsSUFBQU0sZUFBQSxHQUFBSCxzQkFBQSxDQUFBSCxPQUFBO0FBQ0EsSUFBQU8sWUFBQSxHQUFBSixzQkFBQSxDQUFBSCxPQUFBO0FBQ0EsSUFBQVEsUUFBQSxHQUFBTCxzQkFBQSxDQUFBSCxPQUFBO0FBR0EsSUFBQVMsY0FBQSxHQUFBVCxPQUFBO0FBQ0EsSUFBQVUsa0JBQUEsR0FBQVYsT0FBQTtBQUFtRSxTQUFBVyxjQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtNQUFBO1FBQUFDLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFPLFNBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7SUFBQUMsZUFBQTtJQUFBbEIsSUFBQTtFQUFBO0VBQUEsSUFBQW1CLFFBQUEsR0FBQWxCLE1BQUEsQ0FBQUUsR0FBQSxNQUFBRixNQUFBLENBQUFFLEdBQUE7RUFBQSxLQUFBZ0IsUUFBQSxDQUFBcEIsSUFBQSxLQUFBb0IsUUFBQSxDQUFBcEIsSUFBQSxFQUFBQyxJQUFBLEtBQUFBLElBQUE7SUFBQW1CLFFBQUEsQ0FBQXBCLElBQUEsSUFBQUssWUFBQTtFQUFBO0VBQUEsSUFBQWdCLGNBQUEsR0FBQUQsUUFBQSxDQUFBcEIsSUFBQTtFQUFBO0lBQUFELGFBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFzQixjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBdEIsYUFBQTtBQUc1RCxJQUFNdUIsS0FBSyxHQUFBQyxPQUFBLENBQUFELEtBQUEsSUFBQXZCLGFBQUEsR0FBQWlCLENBQUEsT0FBRyxJQUFBUSx1QkFBYyxFQUFDO0VBQ2xDQyxPQUFPLEVBQUU7SUFDUEMsSUFBSSxFQUFFQyxrQkFBUztJQUNmQyxJQUFJLEVBQUVDLGtCQUFTO0lBQ2ZDLE1BQU0sRUFBRUMsb0JBQVc7SUFDbkJDLFNBQVMsRUFBRUMsdUJBQWM7SUFDekJDLE1BQU0sRUFBRUMsb0JBQVc7SUFDbkJDLEVBQUUsRUFBRUM7RUFDTixDQUFDO0VBQ0RDLFVBQVUsRUFBRSxTQUFaQSxVQUFVQSxDQUFHQyxvQkFBb0IsRUFDL0I7SUFBQXhDLGFBQUEsR0FBQWtCLENBQUE7SUFBQWxCLGFBQUEsR0FBQWlCLENBQUE7SUFBQSxPQUFBdUIsb0JBQW9CLENBQUM7TUFDbkJDLGlCQUFpQixFQUFFO1FBRWpCQyxjQUFjLEVBQUUsQ0FDZCxpQkFBaUIsRUFDakIsbUJBQW1CLEVBQ25CLGtCQUFrQixDQUNuQjtRQUVEQyxZQUFZLEVBQUUsQ0FBQyxZQUFZLEVBQUUsbUJBQW1CO01BQ2xEO0lBQ0YsQ0FBQyxDQUFDLENBQ0NDLE1BQU0sQ0FBQ0MsNEJBQWEsQ0FBQyxDQUNyQkQsTUFBTSxDQUFDRSxvQ0FBaUIsQ0FBQztFQUFELENBQUM7RUFDOUJDLFFBQVEsRUFBRUM7QUFDWixDQUFDLENBQUM7QUFBQ2hELGFBQUEsR0FBQWlCLENBQUE7QUFPSSxJQUFNZ0MsY0FBYyxHQUFBekIsT0FBQSxDQUFBeUIsY0FBQSxHQUFHLFNBQWpCQSxjQUFjQSxDQUFBLEVBQVM7RUFBQWpELGFBQUEsR0FBQWtCLENBQUE7RUFBQWxCLGFBQUEsR0FBQWlCLENBQUE7RUFBQSxXQUFBaUMsdUJBQVcsRUFBYyxDQUFDO0FBQUQsQ0FBQztBQUN2RCxJQUFNQyxjQUErQyxHQUFBM0IsT0FBQSxDQUFBMkIsY0FBQSxJQUFBbkQsYUFBQSxHQUFBaUIsQ0FBQSxPQUFHbUMsdUJBQVc7QUFBQyxJQUFBQyxRQUFBLEdBQUE3QixPQUFBLENBQUE4QixPQUFBLEdBRzVEL0IsS0FBSyIsImlnbm9yZUxpc3QiOltdfQ==