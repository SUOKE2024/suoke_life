{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_testUtils","_jsxRuntime","MockProfileHeader","_ref","userProfile","onEditPress","getHealthScoreColor","getMemberLevelText","React","_require","View","Text","TouchableOpacity","createElement","testID","name","healthScore","onPress","MockHealthMetricCard","_ref2","metric","getTrendIcon","_require2","value","unit","mockUserProfile","id","memberLevel","mockHealthMetric","trend","mockGetHealthScoreColor","score","mockGetMemberLevelText","level","mockGetTrendIcon","describe","it","_render","render","jsx","getByTestId","expect","toBeTruthy","_render2","renderTime","TestUtils","measureRenderTime","toBeLessThan","i","Object","assign","initialMemory","getMemoryUsage","finalMemory","memoryIncrease","_render3","unmount","not","toThrow","_render4","rerender","benchmark","createPerformanceBenchmark","result","run","average","toBeGreaterThan","iterations","toBe","min","max"],"sources":["ComponentPerformance.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render } from '@testing-library/react-native';\nimport { TestUtils, MockDataGenerator } from '../utils/testUtils';\n\n// Mock组件，避免Icon依赖问题\nconst MockProfileHeader = ({ userProfile, onEditPress, getHealthScoreColor, getMemberLevelText }: any) => {\n  const React = require('react');\n  const { View, Text, TouchableOpacity } = require('react-native');\n  \n  return React.createElement(View, { testID: 'profile-header' },\n    React.createElement(Text, { testID: 'user-name' }, userProfile.name),\n    React.createElement(Text, { testID: 'health-score' }, userProfile.healthScore),\n    React.createElement(TouchableOpacity, { onPress: onEditPress, testID: 'edit-button' },\n      React.createElement(Text, null, '编辑')\n    )\n  );\n};\n\nconst MockHealthMetricCard = ({ metric, onPress, getTrendIcon }: any) => {\n  const React = require('react');\n  const { View, Text, TouchableOpacity } = require('react-native');\n  \n  return React.createElement(TouchableOpacity, { onPress: onPress, testID: 'health-metric-card' },\n    React.createElement(View, null,\n      React.createElement(Text, { testID: 'metric-name' }, metric.name),\n      React.createElement(Text, { testID: 'metric-value' }, metric.value),\n      React.createElement(Text, { testID: 'metric-unit' }, metric.unit)\n    )\n  );\n};\n\n// Mock数据\nconst mockUserProfile = {\n  id: '1',\n  name: '测试用户',\n  healthScore: 85,\n  memberLevel: 'premium',\n};\n\nconst mockHealthMetric = {\n  id: 'heart_rate',\n  name: '心率',\n  value: 72,\n  unit: 'bpm',\n  trend: 'up',\n};\n\nconst mockGetHealthScoreColor = (score: number) => score > 80 ? '#4CAF50' : '#FF9800';\nconst mockGetMemberLevelText = (level: string) => level === 'premium' ? '高级会员' : '普通会员';\nconst mockGetTrendIcon = (trend: string) => trend === 'up' ? 'trending-up' : 'trending-down';\n\ndescribe('Component Performance Tests', () => {\n  describe('基础渲染测试', () => {\n    it('ProfileHeader应该能够正常渲染', () => {\n      const { getByTestId } = render(\n        <MockProfileHeader\n          userProfile={mockUserProfile}\n          onEditPress={() => {}}\n          getHealthScoreColor={mockGetHealthScoreColor}\n          getMemberLevelText={mockGetMemberLevelText}\n        />\n      );\n\n      expect(getByTestId('profile-header')).toBeTruthy();\n      expect(getByTestId('user-name')).toBeTruthy();\n      expect(getByTestId('health-score')).toBeTruthy();\n    });\n\n    it('HealthMetricCard应该能够正常渲染', () => {\n      const { getByTestId } = render(\n        <MockHealthMetricCard\n          metric={mockHealthMetric}\n          getTrendIcon={mockGetTrendIcon}\n        />\n      );\n\n      expect(getByTestId('health-metric-card')).toBeTruthy();\n      expect(getByTestId('metric-name')).toBeTruthy();\n      expect(getByTestId('metric-value')).toBeTruthy();\n    });\n  });\n\n  describe('性能测试', () => {\n    it('ProfileHeader渲染性能应该可接受', () => {\n      const renderTime = TestUtils.measureRenderTime(() => {\n        render(\n          <MockProfileHeader\n            userProfile={mockUserProfile}\n            onEditPress={() => {}}\n            getHealthScoreColor={mockGetHealthScoreColor}\n            getMemberLevelText={mockGetMemberLevelText}\n          />\n        );\n      });\n\n      // 在测试环境中，渲染时间可能较长，设置一个合理的上限\n      expect(renderTime).toBeLessThan(10000); // 10秒内完成\n    });\n\n    it('HealthMetricCard渲染性能应该可接受', () => {\n      const renderTime = TestUtils.measureRenderTime(() => {\n        render(\n          <MockHealthMetricCard\n            metric={mockHealthMetric}\n            getTrendIcon={mockGetTrendIcon}\n          />\n        );\n      });\n\n      expect(renderTime).toBeLessThan(5000); // 5秒内完成\n    });\n\n    it('批量渲染多个组件应该高效', () => {\n      const renderTime = TestUtils.measureRenderTime(() => {\n        for (let i = 0; i < 5; i++) {\n          render(\n            <MockHealthMetricCard\n              metric={{ ...mockHealthMetric, id: `metric_${i}` }}\n              getTrendIcon={mockGetTrendIcon}\n            />\n          );\n        }\n      });\n\n      expect(renderTime).toBeLessThan(15000); // 15秒内完成5个组件的渲染\n    });\n  });\n\n  describe('内存测试', () => {\n    it('组件渲染不应该导致明显的内存问题', () => {\n      // 简单的内存测试\n      const initialMemory = TestUtils.getMemoryUsage();\n      \n      // 渲染多个组件\n      for (let i = 0; i < 10; i++) {\n        render(\n          <MockProfileHeader\n            userProfile={{ ...mockUserProfile, id: `user_${i}` }}\n            onEditPress={() => {}}\n            getHealthScoreColor={mockGetHealthScoreColor}\n            getMemberLevelText={mockGetMemberLevelText}\n          />\n        );\n      }\n\n      const finalMemory = TestUtils.getMemoryUsage();\n      const memoryIncrease = finalMemory - initialMemory;\n\n      // 内存增长应该在合理范围内（这里设置一个宽松的限制）\n      expect(memoryIncrease).toBeLessThan(100); // 100MB内存增长限制\n    });\n  });\n\n  describe('组件生命周期测试', () => {\n    it('组件卸载应该正常工作', () => {\n      const { unmount } = render(\n        <MockProfileHeader\n          userProfile={mockUserProfile}\n          onEditPress={() => {}}\n          getHealthScoreColor={mockGetHealthScoreColor}\n          getMemberLevelText={mockGetMemberLevelText}\n        />\n      );\n\n      expect(() => unmount()).not.toThrow();\n    });\n\n    it('组件重新渲染应该正常工作', () => {\n      const { rerender } = render(\n        <MockProfileHeader\n          userProfile={mockUserProfile}\n          onEditPress={() => {}}\n          getHealthScoreColor={mockGetHealthScoreColor}\n          getMemberLevelText={mockGetMemberLevelText}\n        />\n      );\n\n      expect(() => {\n        rerender(\n          <MockProfileHeader\n            userProfile={{ ...mockUserProfile, name: '更新的用户' }}\n            onEditPress={() => {}}\n            getHealthScoreColor={mockGetHealthScoreColor}\n            getMemberLevelText={mockGetMemberLevelText}\n          />\n        );\n      }).not.toThrow();\n    });\n  });\n\n  describe('性能基准测试', () => {\n    it('应该建立基本的性能基准', () => {\n      const benchmark = TestUtils.createPerformanceBenchmark(\n        'ProfileHeader渲染',\n        () => {\n          render(\n            <MockProfileHeader\n              userProfile={mockUserProfile}\n              onEditPress={() => {}}\n              getHealthScoreColor={mockGetHealthScoreColor}\n              getMemberLevelText={mockGetMemberLevelText}\n            />\n          );\n        }\n      );\n\n      const result = benchmark.run(3); // 只运行3次，减少测试时间\n      \n      expect(result.average).toBeGreaterThan(0);\n      expect(result.iterations).toBe(3);\n      expect(result.min).toBeGreaterThan(0);\n      expect(result.max).toBeGreaterThan(0);\n    });\n  });\n}); "],"mappings":"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","ignoreList":[]}