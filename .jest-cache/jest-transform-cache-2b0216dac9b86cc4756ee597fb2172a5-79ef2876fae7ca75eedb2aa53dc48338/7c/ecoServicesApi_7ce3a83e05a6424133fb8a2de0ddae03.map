{"version":3,"names":["_asyncStorage","_interopRequireDefault","require","_cryptoJs","_apiCache","cov_ix74k65yk","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","ENCRYPTION_KEY","API_BASE_URL","PerformanceMonitor","exports","_classCallCheck2","default","metrics","Map","_createClass2","key","value","startTimer","operation","Date","now","endTimer","startTime","duration","has","set","get","push","records","length","splice","getAverageTime","reduce","sum","time","getMetrics","_this","result","forEach","times","average","count","getInstance","instance","DataEncryption","encrypt","data","jsonString","JSON","stringify","CryptoJS","AES","toString","decrypt","encryptedData","bytes","decryptedString","enc","Utf8","parse","error","console","PrivacyManager","anonymizeData","_this2","anonymized","Object","assign","sensitiveFields","field","hashSensitiveData","SHA256","_getUserConsent","_asyncToGenerator2","dataType","consent","AsyncStorage","getItem","getUserConsent","_x","apply","arguments","_setUserConsent","setItem","setUserConsent","_x2","_x3","EcoServicesAPI","requestQueue","performanceMonitor","_deduplicateRequest","requestFn","promise","delete","deduplicateRequest","_x4","_x5","_getFarmProducts","filters","_this3","cacheKey","cached","apiCache","Promise","resolve","setTimeout","mockData","getMockFarmProducts","getFarmProducts","_x6","_getWellnessDestinations","_this4","getMockWellnessDestinations","getWellnessDestinations","_x7","_getNutritionPlans","userPreferences","_this5","hasConsent","Error","anonymizedPreferences","getMockNutritionPlans","getNutritionPlans","_x8","_verifyBlockchainTrace","productId","_this6","isValid","Math","random","verifyBlockchainTrace","_x9","_bookDestination","destinationId","bookingDetails","encryptedDetails","success","bookingId","message","bookDestination","_x0","_x1","getPerformanceMetrics","_clearCache","clear","clearCache","_getMockFarmProducts","id","category","origin","healthBenefits","season","price","unit","image","organic","stock","rating","reviews","blockchain","verified","traceability","timestamp","location","action","verifier","certifications","tcmProperties","nature","flavor","meridian","functions","constitution","aiRecommendation","score","reason","personalizedBenefits","_x10","_getMockWellnessDestinations","description","healthFeatures","activities","tcmBenefits","availability","available","nextAvailable","capacity","booked","weatherSuitability","currentScore","forecast","bestTime","personalizedScore","factors","recommendations","_x11","_getMockNutritionPlans","meals","breakfast","lunch","dinner","snacks","ingredients","benefits","nutritionFacts","calories","protein","carbs","fat","fiber","aiOptimized","_x12","ecoServicesAPI"],"sources":["ecoServicesApi.ts"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport CryptoJS from 'crypto-js';\nimport { apiCache } from '../utils/apiCache';\n\n// 数据类型定义\nexport interface FarmProduct {\n  id: string;\n  name: string;\n  category: string;\n  origin: string;\n  healthBenefits: string[];\n  season: string;\n  price: number;\n  unit: string;\n  image: string;\n  organic: boolean;\n  stock: number;\n  rating: number;\n  reviews: number;\n  blockchain: {\n    verified: boolean;\n    traceability: BlockchainTrace[];\n    certifications: string[];\n  };\n  tcmProperties: {\n    nature: string;\n    flavor: string;\n    meridian: string[];\n    functions: string[];\n    constitution: string[];\n  };\n  aiRecommendation?: {\n    score: number;\n    reason: string;\n    personalizedBenefits: string[];\n  };\n}\n\nexport interface BlockchainTrace {\n  timestamp: string;\n  location: string;\n  action: string;\n  verifier: string;\n  hash: string;\n}\n\nexport interface WellnessDestination {\n  id: string;\n  name: string;\n  location: string;\n  type: 'mountain' | 'water' | 'forest' | 'hot_spring' | 'temple' | 'village';\n  description: string;\n  healthFeatures: string[];\n  activities: string[];\n  rating: number;\n  price: number;\n  image: string;\n  tcmBenefits: string[];\n  availability: {\n    available: boolean;\n    nextAvailable: string;\n    capacity: number;\n    booked: number;\n  };\n  weatherSuitability: {\n    currentScore: number;\n    forecast: string;\n    bestTime: string;\n  };\n  personalizedScore?: {\n    score: number;\n    factors: string[];\n    recommendations: string[];\n  };\n}\n\nexport interface NutritionPlan {\n  id: string;\n  name: string;\n  constitution: string;\n  season: string;\n  meals: {\n    breakfast: string[];\n    lunch: string[];\n    dinner: string[];\n    snacks: string[];\n  };\n  ingredients: FarmProduct[];\n  benefits: string[];\n  nutritionFacts: {\n    calories: number;\n    protein: number;\n    carbs: number;\n    fat: number;\n    fiber: number;\n  };\n  aiOptimized: boolean;\n}\n\nexport interface UserPreferences {\n  constitution: string;\n  allergies: string[];\n  dietaryRestrictions: string[];\n  healthGoals: string[];\n  location: string;\n  budget: {\n    min: number;\n    max: number;\n  };\n}\n\n// 安全配置\nconst ENCRYPTION_KEY = 'suoke_life_eco_services_key_2024';\nconst API_BASE_URL = 'https://api.suokelife.com/eco';\n\n// 性能监控\nclass PerformanceMonitor {\n  private static instance: PerformanceMonitor;\n  private metrics: Map<string, number[]> = new Map();\n\n  static getInstance(): PerformanceMonitor {\n    if (!PerformanceMonitor.instance) {\n      PerformanceMonitor.instance = new PerformanceMonitor();\n    }\n    return PerformanceMonitor.instance;\n  }\n\n  startTimer(operation: string): number {\n    return Date.now();\n  }\n\n  endTimer(operation: string, startTime: number): void {\n    const duration = Date.now() - startTime;\n    if (!this.metrics.has(operation)) {\n      this.metrics.set(operation, []);\n    }\n    this.metrics.get(operation)!.push(duration);\n    \n    // 保留最近100次记录\n    const records = this.metrics.get(operation)!;\n    if (records.length > 100) {\n      records.splice(0, records.length - 100);\n    }\n  }\n\n  getAverageTime(operation: string): number {\n    const records = this.metrics.get(operation);\n    if (!records || records.length === 0) return 0;\n    return records.reduce((sum, time) => sum + time, 0) / records.length;\n  }\n\n  getMetrics(): Record<string, { average: number; count: number }> {\n    const result: Record<string, { average: number; count: number }> = {};\n    this.metrics.forEach((times, operation) => {\n      result[operation] = {\n        average: this.getAverageTime(operation),\n        count: times.length\n      };\n    });\n    return result;\n  }\n}\n\n// 数据加密工具\nclass DataEncryption {\n  static encrypt(data: any): string {\n    const jsonString = JSON.stringify(data);\n    return CryptoJS.AES.encrypt(jsonString, ENCRYPTION_KEY).toString();\n  }\n\n  static decrypt(encryptedData: string): any {\n    try {\n      const bytes = CryptoJS.AES.decrypt(encryptedData, ENCRYPTION_KEY);\n      const decryptedString = bytes.toString(CryptoJS.enc.Utf8);\n      return JSON.parse(decryptedString);\n    } catch (error) {\n      console.error('解密失败:', error);\n      return null;\n    }\n  }\n}\n\n// 隐私保护工具\nclass PrivacyManager {\n  private static sensitiveFields = ['location', 'allergies', 'healthGoals'];\n\n  static anonymizeData(data: any): any {\n    const anonymized = { ...data };\n    this.sensitiveFields.forEach(field => {\n      if (anonymized[field]) {\n        anonymized[field] = this.hashSensitiveData(anonymized[field]);\n      }\n    });\n    return anonymized;\n  }\n\n  private static hashSensitiveData(data: any): string {\n    return CryptoJS.SHA256(JSON.stringify(data)).toString();\n  }\n\n  static async getUserConsent(dataType: string): Promise<boolean> {\n    try {\n      const consent = await AsyncStorage.getItem(`consent_${dataType}`);\n      return consent === 'true';\n    } catch (error) {\n      console.error('获取用户同意状态失败:', error);\n      return false;\n    }\n  }\n\n  static async setUserConsent(dataType: string, consent: boolean): Promise<void> {\n    try {\n      await AsyncStorage.setItem(`consent_${dataType}`, consent.toString());\n    } catch (error) {\n      console.error('保存用户同意状态失败:', error);\n    }\n  }\n}\n\n// 主要的生态服务API类\nexport class EcoServicesAPI {\n  private static instance: EcoServicesAPI;\n  private performanceMonitor: PerformanceMonitor;\n  private requestQueue: Map<string, Promise<any>> = new Map();\n\n  private constructor() {\n    this.performanceMonitor = PerformanceMonitor.getInstance();\n  }\n\n  static getInstance(): EcoServicesAPI {\n    if (!EcoServicesAPI.instance) {\n      EcoServicesAPI.instance = new EcoServicesAPI();\n    }\n    return EcoServicesAPI.instance;\n  }\n\n  // 防重复请求装饰器\n  private async deduplicateRequest<T>(key: string, requestFn: () => Promise<T>): Promise<T> {\n    if (this.requestQueue.has(key)) {\n      return this.requestQueue.get(key);\n    }\n\n    const promise = requestFn();\n    this.requestQueue.set(key, promise);\n\n    try {\n      const result = await promise;\n      this.requestQueue.delete(key);\n      return result;\n    } catch (error) {\n      this.requestQueue.delete(key);\n      throw error;\n    }\n  }\n\n  // 获取农产品列表\n  async getFarmProducts(filters?: {\n    category?: string;\n    constitution?: string;\n    season?: string;\n    organic?: boolean;\n    priceRange?: { min: number; max: number };\n  }): Promise<FarmProduct[]> {\n    const startTime = this.performanceMonitor.startTimer('getFarmProducts');\n    const cacheKey = `farm_products_${JSON.stringify(filters || {})}`;\n\n    try {\n      return await this.deduplicateRequest(cacheKey, async () => {\n        // 先尝试从缓存获取\n        const cached = await apiCache.get(cacheKey);\n        if (cached) {\n          this.performanceMonitor.endTimer('getFarmProducts', startTime);\n          return cached;\n        }\n\n        // 模拟API调用\n        await new Promise<void>(resolve => setTimeout(() => resolve(), 500));\n        \n        // 这里应该是真实的API调用\n        const mockData = await this.getMockFarmProducts(filters);\n        \n        // 缓存结果（30分钟）\n        await apiCache.set(cacheKey, mockData, 30 * 60 * 1000);\n        \n        this.performanceMonitor.endTimer('getFarmProducts', startTime);\n        return mockData;\n      });\n    } catch (error) {\n      this.performanceMonitor.endTimer('getFarmProducts', startTime);\n      console.error('获取农产品失败:', error);\n      throw error;\n    }\n  }\n\n  // 获取山水养生目的地\n  async getWellnessDestinations(filters?: {\n    type?: string;\n    location?: string;\n    priceRange?: { min: number; max: number };\n    constitution?: string;\n  }): Promise<WellnessDestination[]> {\n    const startTime = this.performanceMonitor.startTimer('getWellnessDestinations');\n    const cacheKey = `wellness_destinations_${JSON.stringify(filters || {})}`;\n\n    try {\n      return await this.deduplicateRequest(cacheKey, async () => {\n        const cached = await apiCache.get(cacheKey);\n        if (cached) {\n          this.performanceMonitor.endTimer('getWellnessDestinations', startTime);\n          return cached;\n        }\n\n        await new Promise<void>(resolve => setTimeout(() => resolve(), 300));\n        \n        const mockData = await this.getMockWellnessDestinations(filters);\n        \n        // 缓存结果（1小时）\n        await apiCache.set(cacheKey, mockData, 60 * 60 * 1000);\n        \n        this.performanceMonitor.endTimer('getWellnessDestinations', startTime);\n        return mockData;\n      });\n    } catch (error) {\n      this.performanceMonitor.endTimer('getWellnessDestinations', startTime);\n      console.error('获取养生目的地失败:', error);\n      throw error;\n    }\n  }\n\n  // 获取个性化营养方案\n  async getNutritionPlans(userPreferences: UserPreferences): Promise<NutritionPlan[]> {\n    const startTime = this.performanceMonitor.startTimer('getNutritionPlans');\n    \n    try {\n      // 检查隐私同意\n      const hasConsent = await PrivacyManager.getUserConsent('nutrition_analysis');\n      if (!hasConsent) {\n        throw new Error('需要用户同意才能进行营养分析');\n      }\n\n      // 匿名化敏感数据\n      const anonymizedPreferences = PrivacyManager.anonymizeData(userPreferences);\n      const cacheKey = `nutrition_plans_${CryptoJS.SHA256(JSON.stringify(anonymizedPreferences)).toString()}`;\n\n      return await this.deduplicateRequest(cacheKey, async () => {\n        const cached = await apiCache.get(cacheKey);\n        if (cached) {\n          this.performanceMonitor.endTimer('getNutritionPlans', startTime);\n          return cached;\n        }\n\n        await new Promise<void>(resolve => setTimeout(() => resolve(), 800));\n        \n        const mockData = await this.getMockNutritionPlans(userPreferences);\n        \n        // 缓存结果（2小时）\n        await apiCache.set(cacheKey, mockData, 2 * 60 * 60 * 1000);\n        \n        this.performanceMonitor.endTimer('getNutritionPlans', startTime);\n        return mockData;\n      });\n    } catch (error) {\n      this.performanceMonitor.endTimer('getNutritionPlans', startTime);\n      console.error('获取营养方案失败:', error);\n      throw error;\n    }\n  }\n\n  // 验证区块链溯源\n  async verifyBlockchainTrace(productId: string): Promise<boolean> {\n    const startTime = this.performanceMonitor.startTimer('verifyBlockchainTrace');\n    \n    try {\n      const cacheKey = `blockchain_verify_${productId}`;\n      \n      return await this.deduplicateRequest(cacheKey, async () => {\n        const cached = await apiCache.get(cacheKey);\n        if (cached !== null) {\n          this.performanceMonitor.endTimer('verifyBlockchainTrace', startTime);\n          return cached;\n        }\n\n        // 模拟区块链验证\n        await new Promise<void>(resolve => setTimeout(() => resolve(), 1000));\n        \n        const isValid = Math.random() > 0.1; // 90%的验证成功率\n        \n        // 缓存结果（24小时）\n        await apiCache.set(cacheKey, isValid, 24 * 60 * 60 * 1000);\n        \n        this.performanceMonitor.endTimer('verifyBlockchainTrace', startTime);\n        return isValid;\n      });\n    } catch (error) {\n      this.performanceMonitor.endTimer('verifyBlockchainTrace', startTime);\n      console.error('区块链验证失败:', error);\n      return false;\n    }\n  }\n\n  // 预订养生目的地\n  async bookDestination(destinationId: string, bookingDetails: {\n    dates: { start: string; end: string };\n    guests: number;\n    preferences: string[];\n  }): Promise<{ success: boolean; bookingId?: string; message: string }> {\n    const startTime = this.performanceMonitor.startTimer('bookDestination');\n    \n    try {\n      // 加密敏感预订信息\n      const encryptedDetails = DataEncryption.encrypt(bookingDetails);\n      \n      // 模拟预订API调用\n      await new Promise<void>(resolve => setTimeout(() => resolve(), 1200));\n      \n      const success = Math.random() > 0.2; // 80%的预订成功率\n      \n      this.performanceMonitor.endTimer('bookDestination', startTime);\n      \n      if (success) {\n        return {\n          success: true,\n          bookingId: `BK${Date.now()}`,\n          message: '预订成功！我们会尽快联系您确认详细信息。'\n        };\n      } else {\n        return {\n          success: false,\n          message: '预订失败，请稍后重试或联系客服。'\n        };\n      }\n    } catch (error) {\n      this.performanceMonitor.endTimer('bookDestination', startTime);\n      console.error('预订失败:', error);\n      return {\n        success: false,\n        message: '预订过程中发生错误，请稍后重试。'\n      };\n    }\n  }\n\n  // 获取性能指标\n  getPerformanceMetrics(): Record<string, { average: number; count: number }> {\n    return this.performanceMonitor.getMetrics();\n  }\n\n  // 清除缓存\n  async clearCache(): Promise<void> {\n    await apiCache.clear();\n  }\n\n  // 模拟数据方法\n  private async getMockFarmProducts(filters?: any): Promise<FarmProduct[]> {\n    // 这里返回模拟数据，实际应该调用真实API\n    return [\n      {\n        id: 'product_1',\n        name: '有机枸杞',\n        category: '中药材',\n        origin: '宁夏中宁',\n        healthBenefits: ['明目', '补肾', '抗氧化', '提高免疫力'],\n        season: '秋季',\n        price: 68,\n        unit: '500g',\n        image: 'goji_berry.jpg',\n        organic: true,\n        stock: 156,\n        rating: 4.8,\n        reviews: 234,\n        blockchain: {\n          verified: true,\n          traceability: [\n            {\n              timestamp: '2024-03-15 08:00',\n              location: '宁夏中宁有机农场',\n              action: '种植播种',\n              verifier: '农业部认证机构',\n              hash: '0x1a2b3c4d5e6f...'\n            }\n          ],\n          certifications: ['有机认证', 'GAP认证', '地理标志保护']\n        },\n        tcmProperties: {\n          nature: '平',\n          flavor: '甘',\n          meridian: ['肝经', '肾经'],\n          functions: ['滋补肝肾', '明目润肺'],\n          constitution: ['气虚质', '阴虚质', '阳虚质']\n        },\n        aiRecommendation: {\n          score: 95,\n          reason: '根据您的气虚体质，枸杞能有效补气养血',\n          personalizedBenefits: ['改善疲劳', '增强免疫', '护眼明目']\n        }\n      }\n      // 更多模拟数据...\n    ];\n  }\n\n  private async getMockWellnessDestinations(filters?: any): Promise<WellnessDestination[]> {\n    // 模拟数据\n    return [\n      {\n        id: 'dest_1',\n        name: '峨眉山养生谷',\n        location: '四川峨眉山',\n        type: 'mountain',\n        description: '集佛教文化、中医养生、自然疗法于一体的综合养生基地',\n        healthFeatures: ['负氧离子丰富', '天然药材资源', '清净修心环境', '海拔适宜'],\n        activities: ['太极晨练', '药膳体验', '禅修静坐', '森林浴', '中医理疗', '药材采摘'],\n        rating: 4.8,\n        price: 1280,\n        image: 'emei_mountain.jpg',\n        tcmBenefits: ['清肺润燥', '宁心安神', '强身健体', '疏肝理气'],\n        availability: {\n          available: true,\n          nextAvailable: '2024-12-20',\n          capacity: 50,\n          booked: 32\n        },\n        weatherSuitability: {\n          currentScore: 85,\n          forecast: '晴朗，适宜养生',\n          bestTime: '春秋两季'\n        },\n        personalizedScore: {\n          score: 92,\n          factors: ['适合气虚质', '海拔适宜', '空气质量优'],\n          recommendations: ['建议停留3-5天', '参与太极和禅修', '尝试药膳调理']\n        }\n      }\n      // 更多模拟数据...\n    ];\n  }\n\n  private async getMockNutritionPlans(userPreferences: UserPreferences): Promise<NutritionPlan[]> {\n    // 模拟数据\n    return [\n      {\n        id: 'plan_1',\n        name: '气虚质春季调理餐',\n        constitution: userPreferences.constitution,\n        season: '春季',\n        meals: {\n          breakfast: ['小米粥配红枣', '蒸蛋羹', '枸杞茶', '核桃仁'],\n          lunch: ['黄芪炖鸡汤', '山药炒木耳', '五谷饭', '时令蔬菜'],\n          dinner: ['莲子银耳汤', '清蒸鲈鱼', '青菜豆腐', '薏米粥'],\n          snacks: ['红枣桂圆茶', '坚果拼盘', '蜂蜜柠檬水']\n        },\n        ingredients: [],\n        benefits: ['补气健脾', '增强体质', '改善疲劳', '提升免疫'],\n        nutritionFacts: {\n          calories: 1850,\n          protein: 85,\n          carbs: 245,\n          fat: 65,\n          fiber: 35\n        },\n        aiOptimized: true\n      }\n      // 更多模拟数据...\n    ];\n  }\n}\n\n// 导出单例实例\nexport const ecoServicesAPI = EcoServicesAPI.getInstance();\nexport { PrivacyManager, DataEncryption, PerformanceMonitor }; "],"mappings":"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","ignoreList":[]}