{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactNative2","_jsxRuntime","MockAgentCard","_ref","agent","onPress","jsx","TouchableOpacity","children","jsxs","View","Text","name","specialty","description","status","mockAgent","id","avatar","describe","it","_render","render","getByText","expect","toBeTruthy","_render2","offlineAgent","Object","assign","_render3","_nameElement$parent","mockOnPress","jest","fn","_render4","nameElement","touchableElement","parent","fireEvent","press","toHaveBeenCalledWith","_render5","_nameElement$parent2","_render6","not","toThrow","_render7"],"sources":["AgentCard.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport { View, Text, TouchableOpacity } from 'react-native';\n\n// 简化的Mock AgentCard组件\nconst MockAgentCard = ({ agent, onPress }: any) => {\n  return (\n    <TouchableOpacity onPress={() => onPress && onPress(agent)}>\n      <View>\n        <Text>{agent.name}</Text>\n        <Text>{agent.specialty}</Text>\n        <Text>{agent.description}</Text>\n        <Text>{agent.status === 'online' ? '在线' : '离线'}</Text>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\n// Mock数据\nconst mockAgent = {\n  id: 'xiaoai',\n  name: '小艾',\n  specialty: '健康咨询',\n  description: '专业的健康管理顾问',\n  avatar: 'https://example.com/xiaoai.jpg',\n  status: 'online',\n};\n\ndescribe('AgentCard', () => {\n  it('应该正确渲染智能体卡片', () => {\n    const { getByText } = render(\n      <MockAgentCard agent={mockAgent} />\n    );\n\n    expect(getByText('小艾')).toBeTruthy();\n    expect(getByText('健康咨询')).toBeTruthy();\n    expect(getByText('专业的健康管理顾问')).toBeTruthy();\n  });\n\n  it('应该显示智能体状态', () => {\n    const { getByText } = render(\n      <MockAgentCard agent={mockAgent} />\n    );\n\n    expect(getByText('在线')).toBeTruthy();\n  });\n\n  it('应该显示离线状态', () => {\n    const offlineAgent = { ...mockAgent, status: 'offline' };\n    const { getByText } = render(\n      <MockAgentCard agent={offlineAgent} />\n    );\n\n    expect(getByText('离线')).toBeTruthy();\n  });\n\n  it('应该处理点击事件', () => {\n    const mockOnPress = jest.fn();\n    const { getByText } = render(\n      <MockAgentCard agent={mockAgent} onPress={mockOnPress} />\n    );\n\n    const nameElement = getByText('小艾');\n    const touchableElement = nameElement.parent?.parent;\n    \n    if (touchableElement) {\n      fireEvent.press(touchableElement);\n      expect(mockOnPress).toHaveBeenCalledWith(mockAgent);\n    }\n  });\n\n  it('应该正确显示基本信息', () => {\n    const { getByText } = render(\n      <MockAgentCard agent={mockAgent} />\n    );\n\n    expect(getByText('小艾')).toBeTruthy();\n    expect(getByText('健康咨询')).toBeTruthy();\n    expect(getByText('专业的健康管理顾问')).toBeTruthy();\n  });\n\n  it('应该处理缺少onPress的情况', () => {\n    const { getByText } = render(\n      <MockAgentCard agent={mockAgent} />\n    );\n\n    const nameElement = getByText('小艾');\n    const touchableElement = nameElement.parent?.parent;\n    \n    // 不应该抛出错误\n    if (touchableElement) {\n      expect(() => fireEvent.press(touchableElement)).not.toThrow();\n    }\n  });\n\n  it('应该正确渲染组件结构', () => {\n    const { getByText } = render(\n      <MockAgentCard agent={mockAgent} />\n    );\n\n    // 验证组件渲染成功\n    expect(getByText('小艾')).toBeTruthy();\n    expect(getByText('在线')).toBeTruthy();\n  });\n}); "],"mappings":"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","ignoreList":[]}