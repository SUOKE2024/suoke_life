{"version":3,"names":["memoryStorage","cov_2ivbsr73uf","s","WebStorage","_classCallCheck2","default","_createClass2","key","value","isLocalStorageAvailable","f","_localStorage","_localStorage2","test","globalThis","localStorage","setItem","removeItem","_unused","_getItem","_asyncToGenerator2","b","getItem","error","console","warn","_x","apply","arguments","_setItem","_x2","_x3","_removeItem","_x4","_multiRemove","keys","multiRemove","_x5","_clear","clear","Object","forEach","_getAllKeys","getAllKeys","webStorage","exports"],"sources":["storage.web.ts"],"sourcesContent":["/**\n * Web平台存储工具\n * 提供与AsyncStorage兼容的API\n */\n\n// 简单的内存存储作为fallback\nconst memoryStorage: { [key: string]: string } = {};\n\nclass WebStorage {\n  private isLocalStorageAvailable(): boolean {\n    try {\n      const test = '__localStorage_test__';\n      (globalThis as any).localStorage?.setItem(test, test);\n      (globalThis as any).localStorage?.removeItem(test);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  async getItem(key: string): Promise<string | null> {\n    try {\n      if (this.isLocalStorageAvailable()) {\n        return (globalThis as any).localStorage.getItem(key);\n      }\n      return memoryStorage[key] || null;\n    } catch (error) {\n      console.warn('WebStorage getItem error:', error);\n      return memoryStorage[key] || null;\n    }\n  }\n\n  async setItem(key: string, value: string): Promise<void> {\n    try {\n      if (this.isLocalStorageAvailable()) {\n        (globalThis as any).localStorage.setItem(key, value);\n      } else {\n        memoryStorage[key] = value;\n      }\n    } catch (error) {\n      console.warn('WebStorage setItem error:', error);\n      memoryStorage[key] = value;\n    }\n  }\n\n  async removeItem(key: string): Promise<void> {\n    try {\n      if (this.isLocalStorageAvailable()) {\n        (globalThis as any).localStorage.removeItem(key);\n      }\n      delete memoryStorage[key];\n    } catch (error) {\n      console.warn('WebStorage removeItem error:', error);\n      delete memoryStorage[key];\n    }\n  }\n\n  async multiRemove(keys: string[]): Promise<void> {\n    for (const key of keys) {\n      await this.removeItem(key);\n    }\n  }\n\n  async clear(): Promise<void> {\n    try {\n      if (this.isLocalStorageAvailable()) {\n        (globalThis as any).localStorage.clear();\n      }\n      Object.keys(memoryStorage).forEach(key => delete memoryStorage[key]);\n    } catch (error) {\n      console.warn('WebStorage clear error:', error);\n      Object.keys(memoryStorage).forEach(key => delete memoryStorage[key]);\n    }\n  }\n\n  async getAllKeys(): Promise<string[]> {\n    try {\n      if (this.isLocalStorageAvailable()) {\n        return Object.keys((globalThis as any).localStorage);\n      }\n      return Object.keys(memoryStorage);\n    } catch (error) {\n      console.warn('WebStorage getAllKeys error:', error);\n      return Object.keys(memoryStorage);\n    }\n  }\n}\n\nexport const webStorage = new WebStorage(); "],"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","ignoreList":[]}