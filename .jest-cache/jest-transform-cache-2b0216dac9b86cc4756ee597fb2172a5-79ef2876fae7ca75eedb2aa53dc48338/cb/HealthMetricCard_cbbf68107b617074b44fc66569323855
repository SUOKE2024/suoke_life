6a349bd4e3b03efa7e033908dce8ed6e
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _Icon = _interopRequireDefault(require("../../components/common/Icon"));
var _theme = require("../../constants/theme");
var _jsxRuntime = require("react/jsx-runtime");
function cov_201ups2b1d() {
  var path = "/Users/songxu/Developer/suoke_life/src/screens/components/HealthMetricCard.tsx";
  var hash = "1233dd94aaea72717d38ddd3c7b0b57c98818610";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/songxu/Developer/suoke_life/src/screens/components/HealthMetricCard.tsx",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 58
        },
        end: {
          line: 74,
          column: 1
        }
      },
      "1": {
        start: {
          line: 18,
          column: 29
        },
        end: {
          line: 18,
          column: 65
        }
      },
      "2": {
        start: {
          line: 19,
          column: 24
        },
        end: {
          line: 19,
          column: 53
        }
      },
      "3": {
        start: {
          line: 21,
          column: 2
        },
        end: {
          line: 73,
          column: 4
        }
      },
      "4": {
        start: {
          line: 76,
          column: 15
        },
        end: {
          line: 151,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 58
          },
          end: {
            line: 13,
            column: 59
          }
        },
        loc: {
          start: {
            line: 17,
            column: 6
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 17
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 16
          },
          end: {
            line: 40,
            column: 36
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 40
          },
          end: {
            line: 38,
            column: 54
          }
        }, {
          start: {
            line: 39,
            column: 16
          },
          end: {
            line: 40,
            column: 36
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 39,
            column: 16
          },
          end: {
            line: 40,
            column: 36
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 42
          },
          end: {
            line: 39,
            column: 54
          }
        }, {
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 40,
            column: 36
          }
        }],
        line: 39
      },
      "2": {
        loc: {
          start: {
            line: 61,
            column: 33
          },
          end: {
            line: 61,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 61,
            column: 49
          },
          end: {
            line: 61,
            column: 63
          }
        }, {
          start: {
            line: 61,
            column: 66
          },
          end: {
            line: 61,
            column: 78
          }
        }],
        line: 61
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1233dd94aaea72717d38ddd3c7b0b57c98818610"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_201ups2b1d = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_201ups2b1d();
cov_201ups2b1d().s[0]++;
var HealthMetricCard = function HealthMetricCard(_ref) {
  var metric = _ref.metric,
    onPress = _ref.onPress,
    getTrendIcon = _ref.getTrendIcon;
  cov_201ups2b1d().f[0]++;
  var progressPercentage = (cov_201ups2b1d().s[1]++, metric.value / metric.target * 100);
  var isAboveTarget = (cov_201ups2b1d().s[2]++, metric.value >= metric.target);
  cov_201ups2b1d().s[3]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.TouchableOpacity, {
    style: styles.container,
    onPress: onPress,
    disabled: !onPress,
    children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.header,
      children: [(0, _jsxRuntime.jsx)(_reactNative.View, {
        style: [styles.iconContainer, {
          backgroundColor: metric.color + '20'
        }],
        children: (0, _jsxRuntime.jsx)(_Icon.default, {
          name: metric.icon,
          size: 20,
          color: metric.color
        })
      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: styles.headerInfo,
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.name,
          children: metric.name
        }), (0, _jsxRuntime.jsx)(_reactNative.View, {
          style: styles.trendContainer,
          children: (0, _jsxRuntime.jsx)(_Icon.default, {
            name: getTrendIcon(metric.trend),
            size: 16,
            color: metric.trend === 'up' ? (cov_201ups2b1d().b[0][0]++, _theme.colors.success) : (cov_201ups2b1d().b[0][1]++, metric.trend === 'down' ? (cov_201ups2b1d().b[1][0]++, _theme.colors.error) : (cov_201ups2b1d().b[1][1]++, _theme.colors.textSecondary))
          })
        })]
      })]
    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.valueContainer,
      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: [styles.value, {
          color: metric.color
        }],
        children: metric.value
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.unit,
        children: metric.unit
      })]
    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.progressContainer,
      children: [(0, _jsxRuntime.jsx)(_reactNative.View, {
        style: styles.progressBackground,
        children: (0, _jsxRuntime.jsx)(_reactNative.View, {
          style: [styles.progressFill, {
            width: `${Math.min(progressPercentage, 100)}%`,
            backgroundColor: isAboveTarget ? (cov_201ups2b1d().b[2][0]++, _theme.colors.success) : (cov_201ups2b1d().b[2][1]++, metric.color)
          }]
        })
      }), (0, _jsxRuntime.jsxs)(_reactNative.Text, {
        style: styles.target,
        children: ["\u76EE\u6807: ", metric.target, metric.unit]
      })]
    }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: styles.suggestion,
      numberOfLines: 2,
      children: metric.suggestion
    })]
  });
};
var styles = (cov_201ups2b1d().s[4]++, _reactNative.StyleSheet.create({
  container: {
    backgroundColor: _theme.colors.white,
    borderRadius: _theme.borderRadius.lg,
    padding: _theme.spacing.lg,
    marginHorizontal: _theme.spacing.sm,
    marginVertical: _theme.spacing.sm,
    shadowColor: _theme.colors.black,
    shadowOffset: {
      width: 0,
      height: 2
    },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
    minWidth: 200
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    marginBottom: _theme.spacing.md
  },
  iconContainer: {
    width: 40,
    height: 40,
    borderRadius: _theme.borderRadius.md,
    justifyContent: 'center',
    alignItems: 'center'
  },
  headerInfo: {
    flex: 1,
    marginLeft: _theme.spacing.md
  },
  name: {
    fontSize: _theme.fonts.size.md,
    fontWeight: '500',
    color: _theme.colors.text
  },
  trendContainer: {
    marginTop: _theme.spacing.xs
  },
  valueContainer: {
    flexDirection: 'row',
    alignItems: 'baseline',
    marginBottom: _theme.spacing.md
  },
  value: {
    fontSize: _theme.fonts.size.xxl,
    fontWeight: 'bold'
  },
  unit: {
    fontSize: _theme.fonts.size.md,
    color: _theme.colors.textSecondary,
    marginLeft: _theme.spacing.xs
  },
  progressContainer: {
    marginBottom: _theme.spacing.md
  },
  progressBackground: {
    height: 6,
    backgroundColor: _theme.colors.border,
    borderRadius: 3,
    marginBottom: _theme.spacing.xs
  },
  progressFill: {
    height: '100%',
    borderRadius: 3
  },
  target: {
    fontSize: _theme.fonts.size.sm,
    color: _theme.colors.textSecondary
  },
  suggestion: {
    fontSize: _theme.fonts.size.sm,
    color: _theme.colors.textSecondary,
    lineHeight: _theme.fonts.lineHeight.sm
  }
}));
var _default = exports.default = _react.default.memo(HealthMetricCard);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,