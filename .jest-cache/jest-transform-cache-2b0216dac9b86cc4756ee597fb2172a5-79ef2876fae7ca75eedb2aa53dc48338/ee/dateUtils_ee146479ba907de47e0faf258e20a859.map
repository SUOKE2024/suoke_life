{"version":3,"names":["formatDate","exports","date","format","arguments","length","undefined","cov_2m3cxtyxp6","b","f","d","s","Date","isNaN","getTime","Error","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","replace","formatRelativeTime","now","diffInMs","diffInSeconds","Math","floor","diffInMinutes","diffInHours","diffInDays","getRelativeTime","diffInWeeks","calculateAge","birthDate","birth","today","age","monthDiff","isSameDay","date1","date2","d1","d2","isToday","isThisWeek","startOfWeek","dayOfWeek","getDay","daysToMonday","setDate","setHours","endOfWeek","addTime","amount","unit","result","setMinutes","getTimeRange","start","end","startDate","endDate","days","getDaysInMonth","isLeapYear","getQuarter","ceil","convertTimezone","fromTimezone","toTimezone","getWorkdays","workdays","current","parseDate","dateString","parts","split","parseInt"],"sources":["dateUtils.ts"],"sourcesContent":["/**\n * 日期和时间处理工具\n */\n\n/**\n * 格式化日期\n */\nexport const formatDate = (\n  date: Date | string | number,\n  format: string = 'YYYY-MM-DD'\n): string => {\n  let d: Date;\n  \n  if (typeof date === 'string') {\n    d = new Date(date);\n  } else if (typeof date === 'number') {\n    d = new Date(date);\n  } else {\n    d = date;\n  }\n\n  if (isNaN(d.getTime())) {\n    throw new Error('无效的日期');\n  }\n\n  const year = d.getFullYear();\n  const month = String(d.getMonth() + 1).padStart(2, '0');\n  const day = String(d.getDate()).padStart(2, '0');\n  const hours = String(d.getHours()).padStart(2, '0');\n  const minutes = String(d.getMinutes()).padStart(2, '0');\n  const seconds = String(d.getSeconds()).padStart(2, '0');\n\n  return format\n    .replace('YYYY', String(year))\n    .replace('MM', month)\n    .replace('DD', day)\n    .replace('HH', hours)\n    .replace('mm', minutes)\n    .replace('ss', seconds);\n};\n\n/**\n * 格式化时间戳为相对时间\n */\nexport const formatRelativeTime = (date: Date | string): string => {\n  const d = typeof date === 'string' ? new Date(date) : date;\n  const now = new Date();\n  const diffInMs = now.getTime() - d.getTime();\n  const diffInSeconds = Math.floor(diffInMs / 1000);\n  const diffInMinutes = Math.floor(diffInSeconds / 60);\n  const diffInHours = Math.floor(diffInMinutes / 60);\n  const diffInDays = Math.floor(diffInHours / 24);\n\n  if (diffInSeconds < 60) {\n    return '刚刚';\n  } else if (diffInMinutes < 60) {\n    return `${diffInMinutes}分钟前`;\n  } else if (diffInHours < 24) {\n    return `${diffInHours}小时前`;\n  } else if (diffInDays < 7) {\n    return `${diffInDays}天前`;\n  } else {\n    return formatDate(d, 'MM-DD');\n  }\n};\n\n/**\n * 获取相对时间（别名）\n */\nexport const getRelativeTime = (date: Date | string): string => {\n  const d = typeof date === 'string' ? new Date(date) : date;\n  const now = new Date();\n  const diffInMs = now.getTime() - d.getTime();\n  const diffInSeconds = Math.floor(diffInMs / 1000);\n  const diffInMinutes = Math.floor(diffInSeconds / 60);\n  const diffInHours = Math.floor(diffInMinutes / 60);\n  const diffInDays = Math.floor(diffInHours / 24);\n  const diffInWeeks = Math.floor(diffInDays / 7);\n\n  if (diffInSeconds < 60) {\n    return '刚刚';\n  } else if (diffInMinutes < 60) {\n    return `${diffInMinutes}分钟前`;\n  } else if (diffInHours < 24) {\n    return `${diffInHours}小时前`;\n  } else if (diffInDays < 7) {\n    return `${diffInDays}天前`;\n  } else if (diffInWeeks < 4) {\n    return `${diffInWeeks}周前`;\n  } else {\n    return formatDate(d, 'MM-DD');\n  }\n};\n\n/**\n * 计算年龄\n */\nexport const calculateAge = (birthDate: Date | string): number => {\n  const birth = typeof birthDate === 'string' ? new Date(birthDate) : birthDate;\n  const today = new Date();\n  \n  if (birth > today) {\n    throw new Error('出生日期不能晚于今天');\n  }\n  \n  let age = today.getFullYear() - birth.getFullYear();\n  const monthDiff = today.getMonth() - birth.getMonth();\n\n  if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {\n    age--;\n  }\n\n  return age;\n};\n\n/**\n * 判断是否是同一天\n */\nexport const isSameDay = (\n  date1: Date | string,\n  date2: Date | string\n): boolean => {\n  const d1 = typeof date1 === 'string' ? new Date(date1) : date1;\n  const d2 = typeof date2 === 'string' ? new Date(date2) : date2;\n\n  return (\n    d1.getFullYear() === d2.getFullYear() &&\n    d1.getMonth() === d2.getMonth() &&\n    d1.getDate() === d2.getDate()\n  );\n};\n\n/**\n * 判断是否是今天\n */\nexport const isToday = (date: Date | string): boolean => {\n  const d = typeof date === 'string' ? new Date(date) : date;\n  const today = new Date();\n  return isSameDay(d, today);\n};\n\n/**\n * 判断是否是本周\n */\nexport const isThisWeek = (date: Date | string): boolean => {\n  const d = typeof date === 'string' ? new Date(date) : date;\n  const today = new Date();\n  \n  // 获取本周的开始（周一）\n  const startOfWeek = new Date(today);\n  const dayOfWeek = today.getDay();\n  const daysToMonday = dayOfWeek === 0 ? 6 : dayOfWeek - 1; // 周日是0，需要特殊处理\n  startOfWeek.setDate(today.getDate() - daysToMonday);\n  startOfWeek.setHours(0, 0, 0, 0);\n  \n  // 获取本周的结束（周日）\n  const endOfWeek = new Date(startOfWeek);\n  endOfWeek.setDate(startOfWeek.getDate() + 6);\n  endOfWeek.setHours(23, 59, 59, 999);\n  \n  return d >= startOfWeek && d <= endOfWeek;\n};\n\n/**\n * 添加时间\n */\nexport const addTime = (\n  date: Date,\n  amount: number,\n  unit: 'days' | 'hours' | 'minutes'\n): Date => {\n  const result = new Date(date);\n  \n  switch (unit) {\n    case 'days':\n      result.setDate(result.getDate() + amount);\n      break;\n    case 'hours':\n      result.setHours(result.getHours() + amount);\n      break;\n    case 'minutes':\n      result.setMinutes(result.getMinutes() + amount);\n      break;\n    default:\n      throw new Error('不支持的时间单位');\n  }\n  \n  return result;\n};\n\n/**\n * 获取时间范围\n */\nexport const getTimeRange = (start: string, end: string) => {\n  const startDate = new Date(start);\n  const endDate = new Date(end);\n  \n  if (startDate > endDate) {\n    throw new Error('开始时间不能晚于结束时间');\n  }\n  \n  const diffInMs = endDate.getTime() - startDate.getTime();\n  const diffInMinutes = Math.floor(diffInMs / (1000 * 60));\n  const diffInHours = Math.floor(diffInMinutes / 60);\n  const diffInDays = Math.floor(diffInHours / 24);\n  \n  return {\n    days: diffInDays,\n    hours: diffInHours % 24,\n    minutes: diffInMinutes % 60\n  };\n};\n\n/**\n * 获取月份天数\n */\nexport const getDaysInMonth = (year: number, month: number): number => {\n  return new Date(year, month, 0).getDate();\n};\n\n/**\n * 判断是否是闰年\n */\nexport const isLeapYear = (year: number): boolean => {\n  return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);\n};\n\n/**\n * 获取季度\n */\nexport const getQuarter = (date: string): number => {\n  const d = new Date(date);\n  const month = d.getMonth() + 1; // getMonth() 返回 0-11\n  return Math.ceil(month / 3);\n};\n\n/**\n * 转换时区\n */\nexport const convertTimezone = (\n  date: Date,\n  fromTimezone: string,\n  toTimezone: string\n): Date => {\n  // 简化实现，仅处理UTC和GMT+8的转换\n  if (fromTimezone === toTimezone) {\n    return new Date(date);\n  }\n  \n  const result = new Date(date);\n  \n  if (fromTimezone === 'UTC' && toTimezone === 'GMT+8') {\n    result.setHours(result.getHours() + 8);\n  } else if (fromTimezone === 'GMT+8' && toTimezone === 'UTC') {\n    result.setHours(result.getHours() - 8);\n  }\n  \n  return result;\n};\n\n/**\n * 计算工作日数量\n */\nexport const getWorkdays = (start: string, end: string): number => {\n  const startDate = new Date(start);\n  const endDate = new Date(end);\n  let workdays = 0;\n  \n  const current = new Date(startDate);\n  while (current <= endDate) {\n    const dayOfWeek = current.getDay();\n    // 周一到周五是工作日（1-5）\n    if (dayOfWeek >= 1 && dayOfWeek <= 5) {\n      workdays++;\n    }\n    current.setDate(current.getDate() + 1);\n  }\n  \n  return workdays;\n};\n\n/**\n * 解析日期字符串\n */\nexport const parseDate = (\n  dateString: string,\n  format: string = 'YYYY-MM-DD'\n): Date => {\n  if (format === 'YYYY-MM-DD') {\n    const date = new Date(dateString);\n    if (isNaN(date.getTime())) {\n      throw new Error('无法解析日期字符串');\n    }\n    return date;\n  } else if (format === 'DD/MM/YYYY') {\n    const parts = dateString.split('/');\n    if (parts.length !== 3) {\n      throw new Error('无法解析日期字符串');\n    }\n    const date = new Date(parseInt(parts[2]), parseInt(parts[1]) - 1, parseInt(parts[0]));\n    if (isNaN(date.getTime())) {\n      throw new Error('无法解析日期字符串');\n    }\n    return date;\n  } else {\n    throw new Error('无法解析日期字符串');\n  }\n};\n"],"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","ignoreList":[]}