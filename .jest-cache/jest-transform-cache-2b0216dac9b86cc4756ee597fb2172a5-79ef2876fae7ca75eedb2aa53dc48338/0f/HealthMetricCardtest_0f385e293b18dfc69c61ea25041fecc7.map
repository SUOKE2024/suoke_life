{"version":3,"names":["_getJestObj","mock","_require","require","Text","_ref","name","size","color","_jsxRuntime","jsx","testID","style","fontSize","children","_interopRequireDefault","_react","_reactNative","_HealthMetricCard","_require2","jest","mockMetric","id","value","unit","target","icon","trend","suggestion","history","date","mockGetTrendIcon","describe","it","_render","render","default","metric","getTrendIcon","getByText","getByTestId","expect","toBeTruthy","_getByTestId$parent","mockOnPress","fn","_render2","onPress","container","parent","fireEvent","press","toHaveBeenCalledTimes","highValueMetric","Object","assign","_render3","lowValueMetric","_render4","getByTextLow","trends","forEach","trendMetric","_render5","noHistoryMetric","_render6","_getByTestId$parent2","_render7"],"sources":["HealthMetricCard.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport HealthMetricCard from '../../screens/components/HealthMetricCard';\nimport { HealthMetric, HealthMetricHistory } from '../../types/life';\n\n// Mock Icon component\njest.mock('../../components/common/Icon', () => {\n  const { Text } = require('react-native');\n  return ({ name, size, color }: any) => (\n    <Text testID={`icon-${name}`} style={{ fontSize: size, color }}>\n      {name}\n    </Text>\n  );\n});\n\n// Mock数据\nconst mockMetric: HealthMetric = {\n  id: 'mood',\n  name: '心情指数',\n  value: 85,\n  unit: '分',\n  target: 80,\n  icon: 'emoticon-happy',\n  color: '#4CAF50',\n  trend: 'up',\n  suggestion: '保持积极心态，今天心情不错！',\n  history: [\n    { date: '2024-01-01', value: 80 },\n    { date: '2024-01-02', value: 82 },\n    { date: '2024-01-03', value: 85 },\n  ] as HealthMetricHistory[],\n};\n\nconst mockGetTrendIcon = (trend: string) => {\n  switch (trend) {\n    case 'up': return 'trending-up';\n    case 'down': return 'trending-down';\n    default: return 'trending-neutral';\n  }\n};\n\ndescribe('HealthMetricCard', () => {\n  it('应该正确渲染健康指标信息', () => {\n    const { getByText, getByTestId } = render(\n      <HealthMetricCard \n        metric={mockMetric} \n        getTrendIcon={mockGetTrendIcon}\n      />\n    );\n\n    // 使用testID查找元素\n    expect(getByTestId('icon-emoticon-happy')).toBeTruthy();\n    expect(getByText('85')).toBeTruthy();\n    expect(getByText('分')).toBeTruthy();\n    expect(getByText('目标: 80分')).toBeTruthy();\n    expect(getByText('保持积极心态，今天心情不错！')).toBeTruthy();\n  });\n\n  it('应该在有onPress时响应点击', () => {\n    const mockOnPress = jest.fn();\n    const { getByTestId } = render(\n      <HealthMetricCard \n        metric={mockMetric} \n        onPress={mockOnPress}\n        getTrendIcon={mockGetTrendIcon}\n      />\n    );\n\n    // 点击卡片容器\n    const container = getByTestId('icon-emoticon-happy').parent?.parent?.parent;\n    if (container) {\n      fireEvent.press(container);\n      expect(mockOnPress).toHaveBeenCalledTimes(1);\n    }\n  });\n\n  it('应该正确显示不同的数值', () => {\n    const highValueMetric = { ...mockMetric, value: 90 };\n    const { getByText } = render(\n      <HealthMetricCard \n        metric={highValueMetric} \n        getTrendIcon={mockGetTrendIcon}\n      />\n    );\n\n    expect(getByText('90')).toBeTruthy();\n    expect(getByText('目标: 80分')).toBeTruthy();\n\n    // 测试低于目标的情况\n    const lowValueMetric = { ...mockMetric, value: 70 };\n    const { getByText: getByTextLow } = render(\n      <HealthMetricCard \n        metric={lowValueMetric} \n        getTrendIcon={mockGetTrendIcon}\n      />\n    );\n\n    expect(getByTextLow('70')).toBeTruthy();\n  });\n\n  it('应该正确显示不同趋势的图标', () => {\n    const trends: ('up' | 'down' | 'stable')[] = ['up', 'down', 'stable'];\n    \n    trends.forEach(trend => {\n      const trendMetric = { ...mockMetric, trend };\n      const { getByTestId } = render(\n        <HealthMetricCard \n          metric={trendMetric} \n          getTrendIcon={mockGetTrendIcon}\n        />\n      );\n      \n      // 验证趋势图标存在\n      expect(getByTestId(`icon-${mockGetTrendIcon(trend)}`)).toBeTruthy();\n    });\n  });\n\n  it('应该处理没有历史数据的情况', () => {\n    const noHistoryMetric = { ...mockMetric, history: [] };\n    const { getByText } = render(\n      <HealthMetricCard \n        metric={noHistoryMetric} \n        getTrendIcon={mockGetTrendIcon}\n      />\n    );\n\n    expect(getByText('85')).toBeTruthy();\n  });\n\n  it('应该在没有onPress时不响应点击', () => {\n    const { getByTestId } = render(\n      <HealthMetricCard \n        metric={mockMetric} \n        getTrendIcon={mockGetTrendIcon}\n      />\n    );\n\n    // 点击卡片不应该有任何反应（不会抛出错误）\n    const container = getByTestId('icon-emoticon-happy').parent?.parent?.parent;\n    if (container) {\n      fireEvent.press(container);\n      // 没有onPress，所以不会有任何副作用\n    }\n  });\n}); "],"mappings":"AAMAA,WAAA,GAAKC,IAAI,CAAC,8BAA8B,EAAE,YAAM;EAC9C,IAAAC,QAAA,GAAiBC,OAAO,CAAC,cAAc,CAAC;IAAhCC,IAAI,GAAAF,QAAA,CAAJE,IAAI;EACZ,OAAO,UAAAC,IAAA;IAAA,IAAGC,IAAI,GAAAD,IAAA,CAAJC,IAAI;MAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;MAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;IAAA,OACzB,IAAAC,WAAA,CAAAC,GAAA,EAACN,IAAI;MAACO,MAAM,EAAE,QAAQL,IAAI,EAAG;MAACM,KAAK,EAAE;QAAEC,QAAQ,EAAEN,IAAI;QAAEC,KAAK,EAALA;MAAM,CAAE;MAAAM,QAAA,EAC5DR;IAAI,CACD,CAAC;EAAA,CACR;AACH,CAAC,CAAC;AAAC,IAAAS,sBAAA,GAAAZ,OAAA;AAbH,IAAAa,MAAA,GAAAD,sBAAA,CAAAZ,OAAA;AACA,IAAAc,YAAA,GAAAd,OAAA;AACA,IAAAe,iBAAA,GAAAH,sBAAA,CAAAZ,OAAA;AAAyE,IAAAM,WAAA,GAAAN,OAAA;AAAA,SAAAH,YAAA;EAAA,IAAAmB,SAAA,GAAAhB,OAAA;IAAAiB,IAAA,GAAAD,SAAA,CAAAC,IAAA;EAAApB,WAAA,YAAAA,YAAA;IAAA,OAAAoB,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAczE,IAAMC,UAAwB,GAAG;EAC/BC,EAAE,EAAE,MAAM;EACVhB,IAAI,EAAE,MAAM;EACZiB,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE,GAAG;EACTC,MAAM,EAAE,EAAE;EACVC,IAAI,EAAE,gBAAgB;EACtBlB,KAAK,EAAE,SAAS;EAChBmB,KAAK,EAAE,IAAI;EACXC,UAAU,EAAE,gBAAgB;EAC5BC,OAAO,EAAE,CACP;IAAEC,IAAI,EAAE,YAAY;IAAEP,KAAK,EAAE;EAAG,CAAC,EACjC;IAAEO,IAAI,EAAE,YAAY;IAAEP,KAAK,EAAE;EAAG,CAAC,EACjC;IAAEO,IAAI,EAAE,YAAY;IAAEP,KAAK,EAAE;EAAG,CAAC;AAErC,CAAC;AAED,IAAMQ,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIJ,KAAa,EAAK;EAC1C,QAAQA,KAAK;IACX,KAAK,IAAI;MAAE,OAAO,aAAa;IAC/B,KAAK,MAAM;MAAE,OAAO,eAAe;IACnC;MAAS,OAAO,kBAAkB;EACpC;AACF,CAAC;AAEDK,QAAQ,CAAC,kBAAkB,EAAE,YAAM;EACjCC,EAAE,CAAC,cAAc,EAAE,YAAM;IACvB,IAAAC,OAAA,GAAmC,IAAAC,mBAAM,EACvC,IAAA1B,WAAA,CAAAC,GAAA,EAACQ,iBAAA,CAAAkB,OAAgB;QACfC,MAAM,EAAEhB,UAAW;QACnBiB,YAAY,EAAEP;MAAiB,CAChC,CACH,CAAC;MALOQ,SAAS,GAAAL,OAAA,CAATK,SAAS;MAAEC,WAAW,GAAAN,OAAA,CAAXM,WAAW;IAQ9BC,MAAM,CAACD,WAAW,CAAC,qBAAqB,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;IACvDD,MAAM,CAACF,SAAS,CAAC,IAAI,CAAC,CAAC,CAACG,UAAU,CAAC,CAAC;IACpCD,MAAM,CAACF,SAAS,CAAC,GAAG,CAAC,CAAC,CAACG,UAAU,CAAC,CAAC;IACnCD,MAAM,CAACF,SAAS,CAAC,SAAS,CAAC,CAAC,CAACG,UAAU,CAAC,CAAC;IACzCD,MAAM,CAACF,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAACG,UAAU,CAAC,CAAC;EAClD,CAAC,CAAC;EAEFT,EAAE,CAAC,kBAAkB,EAAE,YAAM;IAAA,IAAAU,mBAAA;IAC3B,IAAMC,WAAW,GAAGxB,IAAI,CAACyB,EAAE,CAAC,CAAC;IAC7B,IAAAC,QAAA,GAAwB,IAAAX,mBAAM,EAC5B,IAAA1B,WAAA,CAAAC,GAAA,EAACQ,iBAAA,CAAAkB,OAAgB;QACfC,MAAM,EAAEhB,UAAW;QACnB0B,OAAO,EAAEH,WAAY;QACrBN,YAAY,EAAEP;MAAiB,CAChC,CACH,CAAC;MANOS,WAAW,GAAAM,QAAA,CAAXN,WAAW;IASnB,IAAMQ,SAAS,IAAAL,mBAAA,GAAGH,WAAW,CAAC,qBAAqB,CAAC,CAACS,MAAM,cAAAN,mBAAA,GAAzCA,mBAAA,CAA2CM,MAAM,qBAAjDN,mBAAA,CAAmDM,MAAM;IAC3E,IAAID,SAAS,EAAE;MACbE,sBAAS,CAACC,KAAK,CAACH,SAAS,CAAC;MAC1BP,MAAM,CAACG,WAAW,CAAC,CAACQ,qBAAqB,CAAC,CAAC,CAAC;IAC9C;EACF,CAAC,CAAC;EAEFnB,EAAE,CAAC,aAAa,EAAE,YAAM;IACtB,IAAMoB,eAAe,GAAAC,MAAA,CAAAC,MAAA,KAAQlC,UAAU;MAAEE,KAAK,EAAE;IAAE,EAAE;IACpD,IAAAiC,QAAA,GAAsB,IAAArB,mBAAM,EAC1B,IAAA1B,WAAA,CAAAC,GAAA,EAACQ,iBAAA,CAAAkB,OAAgB;QACfC,MAAM,EAAEgB,eAAgB;QACxBf,YAAY,EAAEP;MAAiB,CAChC,CACH,CAAC;MALOQ,SAAS,GAAAiB,QAAA,CAATjB,SAAS;IAOjBE,MAAM,CAACF,SAAS,CAAC,IAAI,CAAC,CAAC,CAACG,UAAU,CAAC,CAAC;IACpCD,MAAM,CAACF,SAAS,CAAC,SAAS,CAAC,CAAC,CAACG,UAAU,CAAC,CAAC;IAGzC,IAAMe,cAAc,GAAAH,MAAA,CAAAC,MAAA,KAAQlC,UAAU;MAAEE,KAAK,EAAE;IAAE,EAAE;IACnD,IAAAmC,QAAA,GAAoC,IAAAvB,mBAAM,EACxC,IAAA1B,WAAA,CAAAC,GAAA,EAACQ,iBAAA,CAAAkB,OAAgB;QACfC,MAAM,EAAEoB,cAAe;QACvBnB,YAAY,EAAEP;MAAiB,CAChC,CACH,CAAC;MALkB4B,YAAY,GAAAD,QAAA,CAAvBnB,SAAS;IAOjBE,MAAM,CAACkB,YAAY,CAAC,IAAI,CAAC,CAAC,CAACjB,UAAU,CAAC,CAAC;EACzC,CAAC,CAAC;EAEFT,EAAE,CAAC,eAAe,EAAE,YAAM;IACxB,IAAM2B,MAAoC,GAAG,CAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC;IAErEA,MAAM,CAACC,OAAO,CAAC,UAAAlC,KAAK,EAAI;MACtB,IAAMmC,WAAW,GAAAR,MAAA,CAAAC,MAAA,KAAQlC,UAAU;QAAEM,KAAK,EAALA;MAAK,EAAE;MAC5C,IAAAoC,QAAA,GAAwB,IAAA5B,mBAAM,EAC5B,IAAA1B,WAAA,CAAAC,GAAA,EAACQ,iBAAA,CAAAkB,OAAgB;UACfC,MAAM,EAAEyB,WAAY;UACpBxB,YAAY,EAAEP;QAAiB,CAChC,CACH,CAAC;QALOS,WAAW,GAAAuB,QAAA,CAAXvB,WAAW;MAQnBC,MAAM,CAACD,WAAW,CAAC,QAAQT,gBAAgB,CAACJ,KAAK,CAAC,EAAE,CAAC,CAAC,CAACe,UAAU,CAAC,CAAC;IACrE,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFT,EAAE,CAAC,eAAe,EAAE,YAAM;IACxB,IAAM+B,eAAe,GAAAV,MAAA,CAAAC,MAAA,KAAQlC,UAAU;MAAEQ,OAAO,EAAE;IAAE,EAAE;IACtD,IAAAoC,QAAA,GAAsB,IAAA9B,mBAAM,EAC1B,IAAA1B,WAAA,CAAAC,GAAA,EAACQ,iBAAA,CAAAkB,OAAgB;QACfC,MAAM,EAAE2B,eAAgB;QACxB1B,YAAY,EAAEP;MAAiB,CAChC,CACH,CAAC;MALOQ,SAAS,GAAA0B,QAAA,CAAT1B,SAAS;IAOjBE,MAAM,CAACF,SAAS,CAAC,IAAI,CAAC,CAAC,CAACG,UAAU,CAAC,CAAC;EACtC,CAAC,CAAC;EAEFT,EAAE,CAAC,oBAAoB,EAAE,YAAM;IAAA,IAAAiC,oBAAA;IAC7B,IAAAC,QAAA,GAAwB,IAAAhC,mBAAM,EAC5B,IAAA1B,WAAA,CAAAC,GAAA,EAACQ,iBAAA,CAAAkB,OAAgB;QACfC,MAAM,EAAEhB,UAAW;QACnBiB,YAAY,EAAEP;MAAiB,CAChC,CACH,CAAC;MALOS,WAAW,GAAA2B,QAAA,CAAX3B,WAAW;IAQnB,IAAMQ,SAAS,IAAAkB,oBAAA,GAAG1B,WAAW,CAAC,qBAAqB,CAAC,CAACS,MAAM,cAAAiB,oBAAA,GAAzCA,oBAAA,CAA2CjB,MAAM,qBAAjDiB,oBAAA,CAAmDjB,MAAM;IAC3E,IAAID,SAAS,EAAE;MACbE,sBAAS,CAACC,KAAK,CAACH,SAAS,CAAC;IAE5B;EACF,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}