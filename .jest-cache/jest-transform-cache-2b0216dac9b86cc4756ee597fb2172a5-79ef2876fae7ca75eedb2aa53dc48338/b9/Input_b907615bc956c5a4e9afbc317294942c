770f591f15e04dd58546b744dde8a895
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Input = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _theme = require("../../constants/theme");
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["label", "error", "leftIcon", "rightIcon", "containerStyle", "inputStyle", "showPassword", "secureTextEntry"];
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function cov_g7kxjhvbj() {
  var path = "/Users/songxu/Developer/suoke_life/src/components/common/Input.tsx";
  var hash = "e77d45c7eda0bf8f2b0b6631a04df30bd31ad57b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/songxu/Developer/suoke_life/src/components/common/Input.tsx",
    statementMap: {
      "0": {
        start: {
          line: 23,
          column: 43
        },
        end: {
          line: 75,
          column: 1
        }
      },
      "1": {
        start: {
          line: 34,
          column: 52
        },
        end: {
          line: 34,
          column: 78
        }
      },
      "2": {
        start: {
          line: 36,
          column: 35
        },
        end: {
          line: 38,
          column: 3
        }
      },
      "3": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 45
        }
      },
      "4": {
        start: {
          line: 40,
          column: 2
        },
        end: {
          line: 74,
          column: 4
        }
      },
      "5": {
        start: {
          line: 77,
          column: 15
        },
        end: {
          line: 121,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 23,
            column: 43
          },
          end: {
            line: 23,
            column: 44
          }
        },
        loc: {
          start: {
            line: 33,
            column: 6
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 33
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 36,
            column: 35
          },
          end: {
            line: 36,
            column: 36
          }
        },
        loc: {
          start: {
            line: 36,
            column: 41
          },
          end: {
            line: 38,
            column: 3
          }
        },
        line: 36
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 2
          },
          end: {
            line: 30,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 30,
            column: 17
          },
          end: {
            line: 30,
            column: 22
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 42,
            column: 7
          },
          end: {
            line: 42,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 7
          },
          end: {
            line: 42,
            column: 12
          }
        }, {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 42,
            column: 57
          }
        }],
        line: 42
      },
      "2": {
        loc: {
          start: {
            line: 45,
            column: 39
          },
          end: {
            line: 45,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 47
          },
          end: {
            line: 45,
            column: 64
          }
        }, {
          start: {
            line: 45,
            column: 67
          },
          end: {
            line: 45,
            column: 76
          }
        }],
        line: 45
      },
      "3": {
        loc: {
          start: {
            line: 47,
            column: 9
          },
          end: {
            line: 47,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 9
          },
          end: {
            line: 47,
            column: 17
          }
        }, {
          start: {
            line: 47,
            column: 21
          },
          end: {
            line: 47,
            column: 68
          }
        }],
        line: 47
      },
      "4": {
        loc: {
          start: {
            line: 51,
            column: 27
          },
          end: {
            line: 51,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 27
          },
          end: {
            line: 51,
            column: 42
          }
        }, {
          start: {
            line: 51,
            column: 46
          },
          end: {
            line: 51,
            column: 64
          }
        }],
        line: 51
      },
      "5": {
        loc: {
          start: {
            line: 56,
            column: 9
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 9
          },
          end: {
            line: 56,
            column: 21
          }
        }, {
          start: {
            line: 56,
            column: 25
          },
          end: {
            line: 56,
            column: 40
          }
        }, {
          start: {
            line: 57,
            column: 10
          },
          end: {
            line: 64,
            column: 29
          }
        }],
        line: 56
      },
      "6": {
        loc: {
          start: {
            line: 62,
            column: 15
          },
          end: {
            line: 62,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 62,
            column: 35
          },
          end: {
            line: 62,
            column: 39
          }
        }, {
          start: {
            line: 62,
            column: 42
          },
          end: {
            line: 62,
            column: 46
          }
        }],
        line: 62
      },
      "7": {
        loc: {
          start: {
            line: 67,
            column: 9
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 9
          },
          end: {
            line: 67,
            column: 18
          }
        }, {
          start: {
            line: 67,
            column: 22
          },
          end: {
            line: 67,
            column: 35
          }
        }, {
          start: {
            line: 68,
            column: 10
          },
          end: {
            line: 68,
            column: 59
          }
        }],
        line: 67
      },
      "8": {
        loc: {
          start: {
            line: 72,
            column: 7
          },
          end: {
            line: 72,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 7
          },
          end: {
            line: 72,
            column: 12
          }
        }, {
          start: {
            line: 72,
            column: 16
          },
          end: {
            line: 72,
            column: 61
          }
        }],
        line: 72
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e77d45c7eda0bf8f2b0b6631a04df30bd31ad57b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_g7kxjhvbj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_g7kxjhvbj();
cov_g7kxjhvbj().s[0]++;
var Input = exports.Input = function Input(_ref) {
  var label = _ref.label,
    error = _ref.error,
    leftIcon = _ref.leftIcon,
    rightIcon = _ref.rightIcon,
    containerStyle = _ref.containerStyle,
    inputStyle = _ref.inputStyle,
    _ref$showPassword = _ref.showPassword,
    showPassword = _ref$showPassword === void 0 ? (cov_g7kxjhvbj().b[0][0]++, false) : _ref$showPassword,
    secureTextEntry = _ref.secureTextEntry,
    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  cov_g7kxjhvbj().f[0]++;
  var _ref2 = (cov_g7kxjhvbj().s[1]++, (0, _react.useState)(!secureTextEntry)),
    _ref3 = (0, _slicedToArray2.default)(_ref2, 2),
    isPasswordVisible = _ref3[0],
    setIsPasswordVisible = _ref3[1];
  cov_g7kxjhvbj().s[2]++;
  var togglePasswordVisibility = function togglePasswordVisibility() {
    cov_g7kxjhvbj().f[1]++;
    cov_g7kxjhvbj().s[3]++;
    setIsPasswordVisible(!isPasswordVisible);
  };
  cov_g7kxjhvbj().s[4]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: [styles.container, containerStyle],
    children: [(cov_g7kxjhvbj().b[1][0]++, label) && (cov_g7kxjhvbj().b[1][1]++, (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: styles.label,
      children: label
    })), (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: [styles.inputContainer, error ? (cov_g7kxjhvbj().b[2][0]++, styles.inputError) : (cov_g7kxjhvbj().b[2][1]++, undefined)],
      children: [(cov_g7kxjhvbj().b[3][0]++, leftIcon) && (cov_g7kxjhvbj().b[3][1]++, (0, _jsxRuntime.jsx)(_reactNative.View, {
        style: styles.leftIcon,
        children: leftIcon
      })), (0, _jsxRuntime.jsx)(_reactNative.TextInput, Object.assign({
        style: [styles.input, inputStyle],
        secureTextEntry: (cov_g7kxjhvbj().b[4][0]++, secureTextEntry) && (cov_g7kxjhvbj().b[4][1]++, !isPasswordVisible),
        placeholderTextColor: _theme.colors.textSecondary
      }, props)), (cov_g7kxjhvbj().b[5][0]++, showPassword) && (cov_g7kxjhvbj().b[5][1]++, secureTextEntry) && (cov_g7kxjhvbj().b[5][2]++, (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        style: styles.rightIcon,
        onPress: togglePasswordVisibility,
        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.passwordToggle,
          children: isPasswordVisible ? (cov_g7kxjhvbj().b[6][0]++, '隐藏') : (cov_g7kxjhvbj().b[6][1]++, '显示')
        })
      })), (cov_g7kxjhvbj().b[7][0]++, rightIcon) && (cov_g7kxjhvbj().b[7][1]++, !showPassword) && (cov_g7kxjhvbj().b[7][2]++, (0, _jsxRuntime.jsx)(_reactNative.View, {
        style: styles.rightIcon,
        children: rightIcon
      }))]
    }), (cov_g7kxjhvbj().b[8][0]++, error) && (cov_g7kxjhvbj().b[8][1]++, (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: styles.errorText,
      children: error
    }))]
  });
};
var styles = (cov_g7kxjhvbj().s[5]++, _reactNative.StyleSheet.create({
  container: {
    marginBottom: _theme.spacing.md
  },
  label: {
    fontSize: 16,
    fontWeight: '600',
    color: _theme.colors.text,
    marginBottom: _theme.spacing.sm
  },
  inputContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    borderWidth: 1,
    borderColor: _theme.colors.border,
    borderRadius: 12,
    backgroundColor: _theme.colors.surface,
    paddingHorizontal: _theme.spacing.md
  },
  inputError: {
    borderColor: _theme.colors.error
  },
  input: {
    flex: 1,
    paddingVertical: _theme.spacing.md,
    fontSize: 16,
    color: _theme.colors.text
  },
  leftIcon: {
    marginRight: _theme.spacing.sm
  },
  rightIcon: {
    marginLeft: _theme.spacing.sm
  },
  passwordToggle: {
    fontSize: 14,
    color: _theme.colors.primary,
    fontWeight: '600'
  },
  errorText: {
    fontSize: 14,
    color: _theme.colors.error,
    marginTop: _theme.spacing.xs
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,