{
  "name": "suoke-life",
  "version": "0.1.0",
  "private": true,
  "description": "索克生活APP - AI智能体驱动的现代健康管理平台",
  "homepage": "https://suoke_life",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/SUOKE2024/suoke_life.git"
  },
  "bugs": {
    "url": "https://github.com/SUOKE2024/suoke_life/issues"
  },
  "author": "Song Xu <song.xu@icloud.com>",
  "license": "MIT",
  "keywords": [
    "react-native",
    "health",
    "ai",
    "tcm",
    "traditional-chinese-medicine",
    "healthcare",
    "mobile-app",
    "python",
    "microservices"
  ],
  "scripts": {
    "android": "react-native run-android",
    "ios": "react-native run-ios",
    "lint": "eslint src/ --ext .ts,.tsx,.js,.jsx",
    "start": "react-native start",
    "test": "jest",
    "build": "tsc --noEmit && npm run lint",
    "test:unit": "jest --testPathPattern=\"src/__tests__/.*\\.(test|spec)\\.(ts|tsx)$\" --testPathIgnorePatterns=\"integration|performance\"",
    "test:integration": "jest --testPathPattern=\"src/__tests__/integration/.*\\.(test|spec)\\.(ts|tsx)$\"",
    "test:performance": "jest --testPathPattern=\"src/__tests__/performance/.*\\.(test|spec)\\.(ts|tsx)$\"",
    "test:coverage": "jest --coverage --testPathIgnorePatterns=integration,performance",
    "test:watch": "jest --watch",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "test:all": "./scripts/test/run-tests.sh",
    "test:e2e": "jest --config=jest.e2e.config.js",
    "test:e2e:user-journey": "chmod +x scripts/run-e2e-tests.sh && ./scripts/run-e2e-tests.sh user-journey",
    "test:e2e:agent-collaboration": "chmod +x scripts/run-e2e-tests.sh && ./scripts/run-e2e-tests.sh agent-collaboration",
    "test:e2e:performance": "chmod +x scripts/run-e2e-tests.sh && ./scripts/run-e2e-tests.sh performance",
    "test:e2e:comprehensive": "chmod +x scripts/run-e2e-tests.sh && ./scripts/run-e2e-tests.sh comprehensive",
    "test:e2e:all": "chmod +x scripts/run-e2e-tests.sh && ./scripts/run-e2e-tests.sh all",
    "test:e2e:simple": "jest --config=jest.e2e.simple.config.js src/__tests__/e2e/simple-e2e.test.tsx --verbose --no-coverage",
    "test:quality": "jest --config=jest.e2e.simple.config.js src/__tests__/e2e/suoke-life-quality-verification.test.tsx --verbose --no-coverage",
    "quality:verify": "./scripts/quality-verification.sh",
    "quality:report": "open reports/quality-verification-*.md",
    "optimize": "node scripts/optimize-app.js",
    "optimize:code": "node scripts/code-quality-optimizer.js",
    "optimize:tests": "node scripts/test-coverage-enhancer.js",
    "optimize:performance": "node scripts/performance-optimizer.js",
    "optimize:architecture": "node scripts/architecture-optimizer.js",
    "optimize:quick": "node scripts/optimize-app.js --skip-test-coverage",
    "optimize:full": "node scripts/optimize-app.js --reinstall-deps --run-tests",
    "fix": "node scripts/comprehensive-auto-fix.js",
    "fix:syntax": "node scripts/precise-auto-fix.js",
    "fix:eslint": "npx eslint --fix --ext .ts,.tsx,.js,.jsx src/",
    "fix:prettier": "npx prettier --write \"src/**/*.{ts,tsx,js,jsx}\"",
    "format": "prettier --write src/",
    "format:check": "prettier --check src/",
    "postinstall": "patch-package",
    "clean": "node scripts/clean.js",
    "clean:all": "node scripts/clean.js --all",
    "clean:rn": "node scripts/clean.js --react-native",
    "clean:ios": "node scripts/clean.js --ios",
    "clean:android": "node scripts/clean.js --android",
    "clean:sh": "./scripts/clean-cache.sh",
    "clean:deep": "chmod +x scripts/deep-clean-ios.sh && ./scripts/deep-clean-ios.sh",
    "fix:ios": "node scripts/fix-vision-camera-warnings.js && npx patch-package react-native-vision-camera",
    "start:agents": "chmod +x scripts/start-agent-services.sh && ./scripts/start-agent-services.sh",
    "stop:agents": "chmod +x scripts/stop-agent-services.sh && ./scripts/stop-agent-services.sh",
    "test:agents": "npx ts-node src/utils/agentIntegrationTest.ts",
    "test:monitor": "npx ts-node -e \"import('./src/utils/agentMonitor').then(m => m.quickHealthCheck().then(console.log))\"",
    "cache:clear": "npx ts-node -e \"import('./src/utils/apiCache').then(m => m.apiCache.clear().then(() => console.log('Cache cleared')))\"",
    "cache:stats": "npx ts-node -e \"import('./src/utils/apiCache').then(m => console.log(m.apiCache.getStats()))\"",
    "diagnostic:test": "npx ts-node src/utils/diagnosticIntegrationTest.ts",
    "diagnostic:health": "npx ts-node scripts/simpleDiagnosticCheck.ts",
    "diagnostic:cache:clear": "npx ts-node scripts/diagnosticCacheManager.ts clear",
    "diagnostic:cache:stats": "npx ts-node scripts/diagnosticCacheManager.ts stats",
    "diagnostic:start": "./scripts/startDiagnosticServices.sh start",
    "diagnostic:stop": "./scripts/startDiagnosticServices.sh stop",
    "diagnostic:restart": "./scripts/startDiagnosticServices.sh restart",
    "diagnostic:status": "./scripts/startDiagnosticServices.sh status",
    "agents:health": "curl -s http://localhost:50051/health && curl -s http://localhost:9083/health && curl -s http://localhost:8080/health && curl -s http://localhost:8054/health",
    "services:start": "chmod +x scripts/serviceManager.sh && ./scripts/serviceManager.sh start",
    "services:stop": "chmod +x scripts/serviceManager.sh && ./scripts/serviceManager.sh stop",
    "services:restart": "chmod +x scripts/serviceManager.sh && ./scripts/serviceManager.sh restart",
    "services:status": "chmod +x scripts/serviceManager.sh && ./scripts/serviceManager.sh status",
    "services:logs": "chmod +x scripts/serviceManager.sh && ./scripts/serviceManager.sh logs",
    "test:backend": "python3 scripts/localTest.py test",
    "test:frontend": "node scripts/frontendIntegrationTest.js",
    "test:extended": "python3 scripts/extendedIntegrationTest.py test",
    "test:extended:frontend": "node scripts/extendedFrontendTest.js",
    "test:extended:full": "npm run test:extended && npm run test:extended:frontend",
    "dev:mock": "python3 scripts/localTest.py",
    "dev:extended": "python3 scripts/extendedIntegrationTest.py",
    "services:logs:auth": "chmod +x scripts/serviceManager.sh && ./scripts/serviceManager.sh logs auth",
    "services:logs:user": "chmod +x scripts/serviceManager.sh && ./scripts/serviceManager.sh logs user",
    "services:build": "chmod +x scripts/serviceManager.sh && ./scripts/serviceManager.sh build",
    "services:cleanup": "chmod +x scripts/serviceManager.sh && ./scripts/serviceManager.sh cleanup",
    "services:health": "npx ts-node scripts/serviceHealthCheck.ts",
    "auth:test": "npx ts-node -e \"import('./src/services/authClient').then(m => m.authClient.healthCheck().then(console.log))\"",
    "user:test": "npx ts-node -e \"import('./src/services/userClient').then(m => m.userClient.healthCheck().then(console.log))\"",
    "services:test": "npm run auth:test && npm run user:test",
    "docker:build": "docker-compose -f docker/docker-compose.yml build",
    "docker:up": "docker-compose -f docker/docker-compose.yml up -d",
    "docker:down": "docker-compose -f docker/docker-compose.yml down",
    "test:native": "node scripts/test-native-setup.js",
    "test:device": "node scripts/run-device-integration-test.js",
    "test:device:android": "node scripts/run-device-integration-test.js android --build --test",
    "test:device:ios": "node scripts/run-device-integration-test.js ios --build --test",
    "test:devices": "node scripts/check-devices.js",
    "test:quick": "node scripts/quick-test.js",
    "simulator": "node scripts/manage-simulators.js",
    "dev": "node scripts/dev-start.js",
    "dev:android": "node scripts/dev-start.js android",
    "dev:ios": "node scripts/dev-start.js ios",
    "app:start": "chmod +x scripts/start-app.sh && ./scripts/start-app.sh",
    "app:ios": "chmod +x scripts/start-app.sh && ./scripts/start-app.sh ios",
    "app:android": "chmod +x scripts/start-app.sh && ./scripts/start-app.sh android",
    "cleanup": "chmod +x scripts/project-cleanup.sh && ./scripts/project-cleanup.sh",
    "cleanup:full": "chmod +x scripts/project-cleanup.sh && ./scripts/project-cleanup.sh --reinstall",
    "github:update-visibility": "node scripts/update-repo-visibility.js",
    "github:setup": "npm install @octokit/rest",
    "github:setup-access": "chmod +x scripts/setup-github-access.sh && ./scripts/setup-github-access.sh",
    "test:navigation": "node scripts/test-frontend-navigation.js",
    "diagnose:navigation": "node scripts/diagnose-navigation.js",
    "fix:frontend": "node scripts/fix-frontend-issues.js",
    "type-check": "tsc --noEmit",
    "lint:fix": "eslint src/ --ext .ts,.tsx,.js,.jsx --fix",
    "pre-commit": "lint-staged"
  },
  "dependencies": {
    "@expo/metro-runtime": "~5.0.4",
    "@react-native-async-storage/async-storage": "^2.1.2",
    "@react-native-community/datetimepicker": "^8.3.0",
    "@react-native-community/geolocation": "^3.4.0",
    "@react-native-community/netinfo": "^11.4.1",
    "@react-native-community/slider": "^4.5.7",
    "@react-navigation/bottom-tabs": "^6.5.11",
    "@react-navigation/native": "^6.1.9",
    "@react-navigation/native-stack": "^6.9.17",
    "@react-navigation/stack": "^6.3.20",
    "@reduxjs/toolkit": "^2.0.1",
    "@types/crypto-js": "^4.2.2",
    "axios": "^1.9.0",
    "crypto-js": "^4.2.0",
    "dayjs": "^1.11.10",
    "expo": "^53.0.9",
    "expo-linear-gradient": "^14.1.5",
    "glob": "^11.0.2",
    "i18next": "^23.16.8",
    "lz-string": "^1.5.0",
    "react": "^19.0.0",
    "react-i18next": "^13.5.0",
    "react-native": "0.79.2",
    "react-native-chart-kit": "^6.12.0",
    "react-native-device-info": "^14.0.4",
    "react-native-mmkv": "^2.11.0",
    "react-native-paper": "^5.14.5",
    "react-native-permissions": "^5.4.0",
    "react-native-push-notification": "^8.1.1",
    "react-native-reanimated": "^3.18.0",
    "react-native-safe-area-context": "^5.4.1",
    "react-native-screens": "^4.10.0",
    "react-native-svg": "^15.11.2",
    "react-native-vector-icons": "^10.2.0",
    "react-native-vision-camera": "^4.6.4",
    "react-native-voice": "^0.3.0",
    "react-redux": "^9.1.0",
    "victory-native": "^36.9.1"
  },
  "devDependencies": {
    "@babel/core": "^7.20.0",
    "@babel/plugin-proposal-class-properties": "^7.18.6",
    "@babel/plugin-transform-class-properties": "^7.27.1",
    "@babel/plugin-transform-private-methods": "^7.27.1",
    "@babel/plugin-transform-private-property-in-object": "^7.27.1",
    "@babel/plugin-transform-runtime": "^7.27.1",
    "@babel/preset-env": "^7.27.2",
    "@babel/preset-react": "^7.27.1",
    "@babel/preset-typescript": "^7.27.1",
    "@babel/runtime": "^7.27.1",
    "@octokit/rest": "^20.0.2",
    "@react-native-community/cli": "^18.0.0",
    "@react-native-community/eslint-config": "^3.2.0",
    "@react-native/babel-preset": "0.79.2",
    "@react-native/eslint-config": "0.79.2",
    "@react-native/metro-config": "0.79.2",
    "@react-native/typescript-config": "0.79.2",
    "@testing-library/jest-native": "^5.4.3",
    "@testing-library/react-native": "^13.2.0",
    "@types/jest": "^29.5.14",
    "@types/lz-string": "^1.5.0",
    "@types/node": "^22.15.26",
    "@types/react": "^19.0.0",
    "@types/react-native": "^0.73.0",
    "@types/react-native-vector-icons": "^6.4.18",
    "@types/react-test-renderer": "^19.0.0",
    "@typescript-eslint/eslint-plugin": "^7.18.0",
    "@typescript-eslint/parser": "^7.18.0",
    "babel-jest": "^29.6.3",
    "colors": "^1.4.0",
    "eslint": "^8.19.0",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-prettier": "^5.4.1",
    "eslint-plugin-security": "^3.0.1",
    "jest": "^29.6.3",
    "jest-environment-jsdom": "^30.0.0-beta.3",
    "jest-html-reporters": "^3.1.7",
    "jest-junit": "^16.0.0",
    "node-fetch": "^3.3.2",
    "patch-package": "^8.0.0",
    "prettier": "^3.5.3",
    "react-native-testing-library": "^6.0.0",
    "react-native-web": "^0.20.0",
    "react-test-renderer": "^19.0.0",
    "typescript": "5.0.4"
  },
  "engines": {
    "node": ">=16"
  },
  "codegenConfig": {
    "name": "SuokeLifeSpec",
    "type": "modules",
    "jsSrcsDir": "src",
    "ios": {
      "modulesProvider": {
        "VisionCamera": "VisionCameraProvider",
        "RNVoice": "RNVoiceProvider",
        "RNVectorIcons": "RNVectorIconsProvider",
        "RNSVG": "RNSVGProvider",
        "RNReanimated": "RNReanimatedProvider",
        "RNScreens": "RNScreensProvider",
        "RNSafeAreaContext": "RNSafeAreaContextProvider",
        "AsyncStorage": "AsyncStorageProvider",
        "DateTimePicker": "DateTimePickerProvider",
        "Slider": "SliderProvider",
        "RNMMKV": "RNMMKVProvider"
      }
    },
    "android": {
      "javaPackageName": "com.suokelife.app"
    }
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "eslint --fix",
      "prettier --write",
      "git add"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write",
      "git add"
    ]
  }
}
